{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { YEAR_DECADE_COUNT } from '.';\nimport useCellClassName from '../../hooks/useCellClassName';\nimport { formatValue, isSameYear } from '../../utils/dateUtil';\nimport { useInjectRange } from '../../RangeContext';\nimport PanelBody from '../PanelBody';\nimport useMergeProps from '../../hooks/useMergeProps';\nexport var YEAR_COL_COUNT = 3;\nvar YEAR_ROW_COUNT = 4;\nfunction YearBody(_props) {\n  var props = useMergeProps(_props);\n  var prefixCls = props.prefixCls,\n    value = props.value,\n    viewDate = props.viewDate,\n    locale = props.locale,\n    generateConfig = props.generateConfig;\n  var _useInjectRange = useInjectRange(),\n    rangedValue = _useInjectRange.rangedValue,\n    hoverRangedValue = _useInjectRange.hoverRangedValue;\n  var yearPrefixCls = \"\".concat(prefixCls, \"-cell\");\n  // =============================== Year ===============================\n  var yearNumber = generateConfig.getYear(viewDate);\n  var startYear = Math.floor(yearNumber / YEAR_DECADE_COUNT) * YEAR_DECADE_COUNT;\n  var endYear = startYear + YEAR_DECADE_COUNT - 1;\n  var baseYear = generateConfig.setYear(viewDate, startYear - Math.ceil((YEAR_COL_COUNT * YEAR_ROW_COUNT - YEAR_DECADE_COUNT) / 2));\n  var isInView = function isInView(date) {\n    var currentYearNumber = generateConfig.getYear(date);\n    return startYear <= currentYearNumber && currentYearNumber <= endYear;\n  };\n  var getCellClassName = useCellClassName({\n    cellPrefixCls: yearPrefixCls,\n    value: value,\n    generateConfig: generateConfig,\n    rangedValue: rangedValue.value,\n    hoverRangedValue: hoverRangedValue.value,\n    isSameCell: function isSameCell(current, target) {\n      return isSameYear(generateConfig, current, target);\n    },\n    isInView: isInView,\n    offsetCell: function offsetCell(date, offset) {\n      return generateConfig.addYear(date, offset);\n    }\n  });\n  return _createVNode(PanelBody, _objectSpread(_objectSpread({}, props), {}, {\n    \"rowNum\": YEAR_ROW_COUNT,\n    \"colNum\": YEAR_COL_COUNT,\n    \"baseDate\": baseYear,\n    \"getCellText\": generateConfig.getYear,\n    \"getCellClassName\": getCellClassName,\n    \"getCellDate\": generateConfig.addYear,\n    \"titleCell\": function titleCell(date) {\n      return formatValue(date, {\n        locale: locale,\n        format: 'YYYY',\n        generateConfig: generateConfig\n      });\n    }\n  }), null);\n}\nYearBody.displayName = 'YearBody';\nYearBody.inheritAttrs = false;\nexport default YearBody;","map":{"version":3,"names":["_objectSpread","createVNode","_createVNode","YEAR_DECADE_COUNT","useCellClassName","formatValue","isSameYear","useInjectRange","PanelBody","useMergeProps","YEAR_COL_COUNT","YEAR_ROW_COUNT","YearBody","_props","props","prefixCls","value","viewDate","locale","generateConfig","_useInjectRange","rangedValue","hoverRangedValue","yearPrefixCls","concat","yearNumber","getYear","startYear","Math","floor","endYear","baseYear","setYear","ceil","isInView","date","currentYearNumber","getCellClassName","cellPrefixCls","isSameCell","current","target","offsetCell","offset","addYear","titleCell","format","displayName","inheritAttrs"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/vc-picker/panels/YearPanel/YearBody.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { YEAR_DECADE_COUNT } from '.';\nimport useCellClassName from '../../hooks/useCellClassName';\nimport { formatValue, isSameYear } from '../../utils/dateUtil';\nimport { useInjectRange } from '../../RangeContext';\nimport PanelBody from '../PanelBody';\nimport useMergeProps from '../../hooks/useMergeProps';\nexport var YEAR_COL_COUNT = 3;\nvar YEAR_ROW_COUNT = 4;\nfunction YearBody(_props) {\n  var props = useMergeProps(_props);\n  var prefixCls = props.prefixCls,\n    value = props.value,\n    viewDate = props.viewDate,\n    locale = props.locale,\n    generateConfig = props.generateConfig;\n  var _useInjectRange = useInjectRange(),\n    rangedValue = _useInjectRange.rangedValue,\n    hoverRangedValue = _useInjectRange.hoverRangedValue;\n  var yearPrefixCls = \"\".concat(prefixCls, \"-cell\");\n  // =============================== Year ===============================\n  var yearNumber = generateConfig.getYear(viewDate);\n  var startYear = Math.floor(yearNumber / YEAR_DECADE_COUNT) * YEAR_DECADE_COUNT;\n  var endYear = startYear + YEAR_DECADE_COUNT - 1;\n  var baseYear = generateConfig.setYear(viewDate, startYear - Math.ceil((YEAR_COL_COUNT * YEAR_ROW_COUNT - YEAR_DECADE_COUNT) / 2));\n  var isInView = function isInView(date) {\n    var currentYearNumber = generateConfig.getYear(date);\n    return startYear <= currentYearNumber && currentYearNumber <= endYear;\n  };\n  var getCellClassName = useCellClassName({\n    cellPrefixCls: yearPrefixCls,\n    value: value,\n    generateConfig: generateConfig,\n    rangedValue: rangedValue.value,\n    hoverRangedValue: hoverRangedValue.value,\n    isSameCell: function isSameCell(current, target) {\n      return isSameYear(generateConfig, current, target);\n    },\n    isInView: isInView,\n    offsetCell: function offsetCell(date, offset) {\n      return generateConfig.addYear(date, offset);\n    }\n  });\n  return _createVNode(PanelBody, _objectSpread(_objectSpread({}, props), {}, {\n    \"rowNum\": YEAR_ROW_COUNT,\n    \"colNum\": YEAR_COL_COUNT,\n    \"baseDate\": baseYear,\n    \"getCellText\": generateConfig.getYear,\n    \"getCellClassName\": getCellClassName,\n    \"getCellDate\": generateConfig.addYear,\n    \"titleCell\": function titleCell(date) {\n      return formatValue(date, {\n        locale: locale,\n        format: 'YYYY',\n        generateConfig: generateConfig\n      });\n    }\n  }), null);\n}\nYearBody.displayName = 'YearBody';\nYearBody.inheritAttrs = false;\nexport default YearBody;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}