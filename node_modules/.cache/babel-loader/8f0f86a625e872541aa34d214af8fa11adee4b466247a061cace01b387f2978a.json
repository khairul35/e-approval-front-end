{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _excluded = [\"fixed\"];\nimport { createVNode as _createVNode } from \"vue\";\nimport { warning } from '../../vc-util/warning';\nimport { computed, watchEffect } from 'vue';\nimport { INTERNAL_COL_DEFINE } from '../utils/legacyUtil';\nimport { EXPAND_COLUMN } from '../constant';\nfunction flatColumns(columns) {\n  return columns.reduce(function (list, column) {\n    var fixed = column.fixed;\n    // Convert `fixed='true'` to `fixed='left'` instead\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var subColumns = column.children;\n    if (subColumns && subColumns.length > 0) {\n      return [].concat(_toConsumableArray(list), _toConsumableArray(flatColumns(subColumns).map(function (subColum) {\n        return _objectSpread({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n    return [].concat(_toConsumableArray(list), [_objectSpread(_objectSpread({}, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\nfunction warningFixed(flattenColumns) {\n  var allFixLeft = true;\n  for (var i = 0; i < flattenColumns.length; i += 1) {\n    var col = flattenColumns[i];\n    if (allFixLeft && col.fixed !== 'left') {\n      allFixLeft = false;\n    } else if (!allFixLeft && col.fixed === 'left') {\n      warning(false, \"Index \".concat(i - 1, \" of `columns` missing `fixed='left'` prop.\"));\n      break;\n    }\n  }\n  var allFixRight = true;\n  for (var _i = flattenColumns.length - 1; _i >= 0; _i -= 1) {\n    var _col = flattenColumns[_i];\n    if (allFixRight && _col.fixed !== 'right') {\n      allFixRight = false;\n    } else if (!allFixRight && _col.fixed === 'right') {\n      warning(false, \"Index \".concat(_i + 1, \" of `columns` missing `fixed='right'` prop.\"));\n      break;\n    }\n  }\n}\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n      restProps = _objectWithoutProperties(column, _excluded);\n    // Convert `fixed='left'` to `fixed='right'` instead\n    var parsedFixed = fixed;\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n    return _objectSpread({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n/**\n * Parse `columns` & `children` into `columns`.\n */\nfunction useColumns(_ref, transformColumns) {\n  var prefixCls = _ref.prefixCls,\n    baseColumns = _ref.columns,\n    expandable = _ref.expandable,\n    expandedKeys = _ref.expandedKeys,\n    getRowKey = _ref.getRowKey,\n    onTriggerExpand = _ref.onTriggerExpand,\n    expandIcon = _ref.expandIcon,\n    rowExpandable = _ref.rowExpandable,\n    expandIconColumnIndex = _ref.expandIconColumnIndex,\n    direction = _ref.direction,\n    expandRowByClick = _ref.expandRowByClick,\n    expandColumnWidth = _ref.expandColumnWidth,\n    expandFixed = _ref.expandFixed;\n  // Add expand column\n  var withExpandColumns = computed(function () {\n    if (expandable.value) {\n      var _expandColumn;\n      var cloneColumns = baseColumns.value.slice();\n      // >>> Warning if use `expandIconColumnIndex`\n      if (process.env.NODE_ENV !== 'production' && expandIconColumnIndex.value >= 0) {\n        warning(false, '`expandIconColumnIndex` is deprecated. Please use `Table.EXPAND_COLUMN` in `columns` instead.');\n      }\n      // >>> Insert expand column if not exist\n      if (!cloneColumns.includes(EXPAND_COLUMN)) {\n        var expandColIndex = expandIconColumnIndex.value || 0;\n        if (expandColIndex >= 0) {\n          cloneColumns.splice(expandColIndex, 0, EXPAND_COLUMN);\n        }\n      }\n      // >>> Deduplicate additional expand column\n      if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (c) {\n        return c === EXPAND_COLUMN;\n      }).length > 1) {\n        warning(false, 'There exist more than one `EXPAND_COLUMN` in `columns`.');\n      }\n      var expandColumnIndex = cloneColumns.indexOf(EXPAND_COLUMN);\n      cloneColumns = cloneColumns.filter(function (column, index) {\n        return column !== EXPAND_COLUMN || index === expandColumnIndex;\n      });\n      // >>> Check if expand column need to fixed\n      var prevColumn = baseColumns.value[expandColumnIndex];\n      var fixedColumn;\n      if ((expandFixed.value === 'left' || expandFixed.value) && !expandIconColumnIndex.value) {\n        fixedColumn = 'left';\n      } else if ((expandFixed.value === 'right' || expandFixed.value) && expandIconColumnIndex.value === baseColumns.value.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      }\n      var expandedKeysValue = expandedKeys.value;\n      var rowExpandableValue = rowExpandable.value;\n      var expandIconValue = expandIcon.value;\n      var prefixClsValue = prefixCls.value;\n      var expandRowByClickValue = expandRowByClick.value;\n      // >>> Create expandable column\n      var expandColumn = (_expandColumn = {}, _defineProperty(_expandColumn, INTERNAL_COL_DEFINE, {\n        class: \"\".concat(prefixCls.value, \"-expand-icon-col\"),\n        columnType: 'EXPAND_COLUMN'\n      }), _defineProperty(_expandColumn, \"title\", ''), _defineProperty(_expandColumn, \"fixed\", fixedColumn), _defineProperty(_expandColumn, \"class\", \"\".concat(prefixCls.value, \"-row-expand-icon-cell\")), _defineProperty(_expandColumn, \"width\", expandColumnWidth.value), _defineProperty(_expandColumn, \"customRender\", function customRender(_ref2) {\n        var record = _ref2.record,\n          index = _ref2.index;\n        var rowKey = getRowKey.value(record, index);\n        var expanded = expandedKeysValue.has(rowKey);\n        var recordExpandable = rowExpandableValue ? rowExpandableValue(record) : true;\n        var icon = expandIconValue({\n          prefixCls: prefixClsValue,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n        if (expandRowByClickValue) {\n          return _createVNode(\"span\", {\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, [icon]);\n        }\n        return icon;\n      }), _expandColumn);\n      return cloneColumns.map(function (col) {\n        return col === EXPAND_COLUMN ? expandColumn : col;\n      });\n    }\n    if (process.env.NODE_ENV !== 'production' && baseColumns.value.includes(EXPAND_COLUMN)) {\n      warning(false, '`expandable` is not config but there exist `EXPAND_COLUMN` in `columns`.');\n    }\n    return baseColumns.value.filter(function (col) {\n      return col !== EXPAND_COLUMN;\n    });\n  });\n  var mergedColumns = computed(function () {\n    var finalColumns = withExpandColumns.value;\n    if (transformColumns.value) {\n      finalColumns = transformColumns.value(finalColumns);\n    }\n    // Always provides at least one column for table display\n    if (!finalColumns.length) {\n      finalColumns = [{\n        customRender: function customRender() {\n          return null;\n        }\n      }];\n    }\n    return finalColumns;\n  });\n  var flattenColumns = computed(function () {\n    if (direction.value === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns.value));\n    }\n    return flatColumns(mergedColumns.value);\n  });\n  // Only check out of production since it's waste for each render\n  if (process.env.NODE_ENV !== 'production') {\n    watchEffect(function () {\n      setTimeout(function () {\n        warningFixed(flattenColumns.value);\n      });\n    });\n  }\n  return [mergedColumns, flattenColumns];\n}\nexport default useColumns;","map":{"version":3,"names":["_defineProperty","_objectWithoutProperties","_objectSpread","_toConsumableArray","_excluded","createVNode","_createVNode","warning","computed","watchEffect","INTERNAL_COL_DEFINE","EXPAND_COLUMN","flatColumns","columns","reduce","list","column","fixed","parsedFixed","subColumns","children","length","concat","map","subColum","warningFixed","flattenColumns","allFixLeft","i","col","allFixRight","_i","_col","revertForRtl","restProps","useColumns","_ref","transformColumns","prefixCls","baseColumns","expandable","expandedKeys","getRowKey","onTriggerExpand","expandIcon","rowExpandable","expandIconColumnIndex","direction","expandRowByClick","expandColumnWidth","expandFixed","withExpandColumns","value","_expandColumn","cloneColumns","slice","process","env","NODE_ENV","includes","expandColIndex","splice","filter","c","expandColumnIndex","indexOf","index","prevColumn","fixedColumn","expandedKeysValue","rowExpandableValue","expandIconValue","prefixClsValue","expandRowByClickValue","expandColumn","class","columnType","customRender","_ref2","record","rowKey","expanded","has","recordExpandable","icon","onExpand","onClick","e","stopPropagation","mergedColumns","finalColumns","setTimeout"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/vc-table/hooks/useColumns.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar _excluded = [\"fixed\"];\nimport { createVNode as _createVNode } from \"vue\";\nimport { warning } from '../../vc-util/warning';\nimport { computed, watchEffect } from 'vue';\nimport { INTERNAL_COL_DEFINE } from '../utils/legacyUtil';\nimport { EXPAND_COLUMN } from '../constant';\nfunction flatColumns(columns) {\n  return columns.reduce(function (list, column) {\n    var fixed = column.fixed;\n    // Convert `fixed='true'` to `fixed='left'` instead\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var subColumns = column.children;\n    if (subColumns && subColumns.length > 0) {\n      return [].concat(_toConsumableArray(list), _toConsumableArray(flatColumns(subColumns).map(function (subColum) {\n        return _objectSpread({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n    return [].concat(_toConsumableArray(list), [_objectSpread(_objectSpread({}, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\nfunction warningFixed(flattenColumns) {\n  var allFixLeft = true;\n  for (var i = 0; i < flattenColumns.length; i += 1) {\n    var col = flattenColumns[i];\n    if (allFixLeft && col.fixed !== 'left') {\n      allFixLeft = false;\n    } else if (!allFixLeft && col.fixed === 'left') {\n      warning(false, \"Index \".concat(i - 1, \" of `columns` missing `fixed='left'` prop.\"));\n      break;\n    }\n  }\n  var allFixRight = true;\n  for (var _i = flattenColumns.length - 1; _i >= 0; _i -= 1) {\n    var _col = flattenColumns[_i];\n    if (allFixRight && _col.fixed !== 'right') {\n      allFixRight = false;\n    } else if (!allFixRight && _col.fixed === 'right') {\n      warning(false, \"Index \".concat(_i + 1, \" of `columns` missing `fixed='right'` prop.\"));\n      break;\n    }\n  }\n}\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n      restProps = _objectWithoutProperties(column, _excluded);\n    // Convert `fixed='left'` to `fixed='right'` instead\n    var parsedFixed = fixed;\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n    return _objectSpread({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n/**\n * Parse `columns` & `children` into `columns`.\n */\nfunction useColumns(_ref, transformColumns) {\n  var prefixCls = _ref.prefixCls,\n    baseColumns = _ref.columns,\n    expandable = _ref.expandable,\n    expandedKeys = _ref.expandedKeys,\n    getRowKey = _ref.getRowKey,\n    onTriggerExpand = _ref.onTriggerExpand,\n    expandIcon = _ref.expandIcon,\n    rowExpandable = _ref.rowExpandable,\n    expandIconColumnIndex = _ref.expandIconColumnIndex,\n    direction = _ref.direction,\n    expandRowByClick = _ref.expandRowByClick,\n    expandColumnWidth = _ref.expandColumnWidth,\n    expandFixed = _ref.expandFixed;\n  // Add expand column\n  var withExpandColumns = computed(function () {\n    if (expandable.value) {\n      var _expandColumn;\n      var cloneColumns = baseColumns.value.slice();\n      // >>> Warning if use `expandIconColumnIndex`\n      if (process.env.NODE_ENV !== 'production' && expandIconColumnIndex.value >= 0) {\n        warning(false, '`expandIconColumnIndex` is deprecated. Please use `Table.EXPAND_COLUMN` in `columns` instead.');\n      }\n      // >>> Insert expand column if not exist\n      if (!cloneColumns.includes(EXPAND_COLUMN)) {\n        var expandColIndex = expandIconColumnIndex.value || 0;\n        if (expandColIndex >= 0) {\n          cloneColumns.splice(expandColIndex, 0, EXPAND_COLUMN);\n        }\n      }\n      // >>> Deduplicate additional expand column\n      if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (c) {\n        return c === EXPAND_COLUMN;\n      }).length > 1) {\n        warning(false, 'There exist more than one `EXPAND_COLUMN` in `columns`.');\n      }\n      var expandColumnIndex = cloneColumns.indexOf(EXPAND_COLUMN);\n      cloneColumns = cloneColumns.filter(function (column, index) {\n        return column !== EXPAND_COLUMN || index === expandColumnIndex;\n      });\n      // >>> Check if expand column need to fixed\n      var prevColumn = baseColumns.value[expandColumnIndex];\n      var fixedColumn;\n      if ((expandFixed.value === 'left' || expandFixed.value) && !expandIconColumnIndex.value) {\n        fixedColumn = 'left';\n      } else if ((expandFixed.value === 'right' || expandFixed.value) && expandIconColumnIndex.value === baseColumns.value.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      }\n      var expandedKeysValue = expandedKeys.value;\n      var rowExpandableValue = rowExpandable.value;\n      var expandIconValue = expandIcon.value;\n      var prefixClsValue = prefixCls.value;\n      var expandRowByClickValue = expandRowByClick.value;\n      // >>> Create expandable column\n      var expandColumn = (_expandColumn = {}, _defineProperty(_expandColumn, INTERNAL_COL_DEFINE, {\n        class: \"\".concat(prefixCls.value, \"-expand-icon-col\"),\n        columnType: 'EXPAND_COLUMN'\n      }), _defineProperty(_expandColumn, \"title\", ''), _defineProperty(_expandColumn, \"fixed\", fixedColumn), _defineProperty(_expandColumn, \"class\", \"\".concat(prefixCls.value, \"-row-expand-icon-cell\")), _defineProperty(_expandColumn, \"width\", expandColumnWidth.value), _defineProperty(_expandColumn, \"customRender\", function customRender(_ref2) {\n        var record = _ref2.record,\n          index = _ref2.index;\n        var rowKey = getRowKey.value(record, index);\n        var expanded = expandedKeysValue.has(rowKey);\n        var recordExpandable = rowExpandableValue ? rowExpandableValue(record) : true;\n        var icon = expandIconValue({\n          prefixCls: prefixClsValue,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n        if (expandRowByClickValue) {\n          return _createVNode(\"span\", {\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, [icon]);\n        }\n        return icon;\n      }), _expandColumn);\n      return cloneColumns.map(function (col) {\n        return col === EXPAND_COLUMN ? expandColumn : col;\n      });\n    }\n    if (process.env.NODE_ENV !== 'production' && baseColumns.value.includes(EXPAND_COLUMN)) {\n      warning(false, '`expandable` is not config but there exist `EXPAND_COLUMN` in `columns`.');\n    }\n    return baseColumns.value.filter(function (col) {\n      return col !== EXPAND_COLUMN;\n    });\n  });\n  var mergedColumns = computed(function () {\n    var finalColumns = withExpandColumns.value;\n    if (transformColumns.value) {\n      finalColumns = transformColumns.value(finalColumns);\n    }\n    // Always provides at least one column for table display\n    if (!finalColumns.length) {\n      finalColumns = [{\n        customRender: function customRender() {\n          return null;\n        }\n      }];\n    }\n    return finalColumns;\n  });\n  var flattenColumns = computed(function () {\n    if (direction.value === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns.value));\n    }\n    return flatColumns(mergedColumns.value);\n  });\n  // Only check out of production since it's waste for each render\n  if (process.env.NODE_ENV !== 'production') {\n    watchEffect(function () {\n      setTimeout(function () {\n        warningFixed(flattenColumns.value);\n      });\n    });\n  }\n  return [mergedColumns, flattenColumns];\n}\nexport default useColumns;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}