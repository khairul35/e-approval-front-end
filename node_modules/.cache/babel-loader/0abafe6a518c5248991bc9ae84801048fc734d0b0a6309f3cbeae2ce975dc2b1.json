{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nimport { defineComponent, onBeforeUnmount, onMounted, onUpdated, ref } from 'vue';\nimport omit from '../_util/omit';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport Statistic, { statisticProps } from './Statistic';\nimport { formatCountdown as formatCD } from './utils';\nvar REFRESH_INTERVAL = 1000 / 30;\nfunction getTime(value) {\n  return new Date(value).getTime();\n}\nexport var countdownProps = function countdownProps() {\n  return _objectSpread(_objectSpread({}, statisticProps()), {}, {\n    value: [Number, String, Object],\n    format: String,\n    onFinish: Function,\n    onChange: Function\n  });\n};\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'AStatisticCountdown',\n  props: initDefaultProps(countdownProps(), {\n    format: 'HH:mm:ss'\n  }),\n  // emits: ['finish', 'change'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots;\n    var countdownId = ref();\n    var statistic = ref();\n    var syncTimer = function syncTimer() {\n      var value = props.value;\n      var timestamp = getTime(value);\n      if (timestamp >= Date.now()) {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n    var startTimer = function startTimer() {\n      if (countdownId.value) return;\n      var timestamp = getTime(props.value);\n      countdownId.value = setInterval(function () {\n        statistic.value.$forceUpdate();\n        if (timestamp > Date.now()) {\n          emit('change', timestamp - Date.now());\n        }\n        syncTimer();\n      }, REFRESH_INTERVAL);\n    };\n    var stopTimer = function stopTimer() {\n      var value = props.value;\n      if (countdownId.value) {\n        clearInterval(countdownId.value);\n        countdownId.value = undefined;\n        var timestamp = getTime(value);\n        if (timestamp < Date.now()) {\n          emit('finish');\n        }\n      }\n    };\n    var formatCountdown = function formatCountdown(_ref2) {\n      var value = _ref2.value,\n        config = _ref2.config;\n      var format = props.format;\n      return formatCD(value, _objectSpread(_objectSpread({}, config), {}, {\n        format: format\n      }));\n    };\n    var valueRenderHtml = function valueRenderHtml(node) {\n      return node;\n    };\n    onMounted(function () {\n      syncTimer();\n    });\n    onUpdated(function () {\n      syncTimer();\n    });\n    onBeforeUnmount(function () {\n      stopTimer();\n    });\n    return function () {\n      var value = props.value;\n      return _createVNode(Statistic, _objectSpread({\n        \"ref\": statistic\n      }, _objectSpread(_objectSpread({}, omit(props, ['onFinish', 'onChange'])), {}, {\n        value: value,\n        valueRender: valueRenderHtml,\n        formatter: formatCountdown\n      })), slots);\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","createVNode","_createVNode","resolveDirective","_resolveDirective","defineComponent","onBeforeUnmount","onMounted","onUpdated","ref","omit","initDefaultProps","Statistic","statisticProps","formatCountdown","formatCD","REFRESH_INTERVAL","getTime","value","Date","countdownProps","Number","String","Object","format","onFinish","Function","onChange","compatConfig","MODE","name","props","setup","_ref","emit","slots","countdownId","statistic","syncTimer","timestamp","now","startTimer","stopTimer","setInterval","$forceUpdate","clearInterval","undefined","_ref2","config","valueRenderHtml","node","valueRender","formatter"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/statistic/Countdown.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nimport { defineComponent, onBeforeUnmount, onMounted, onUpdated, ref } from 'vue';\nimport omit from '../_util/omit';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport Statistic, { statisticProps } from './Statistic';\nimport { formatCountdown as formatCD } from './utils';\nvar REFRESH_INTERVAL = 1000 / 30;\nfunction getTime(value) {\n  return new Date(value).getTime();\n}\nexport var countdownProps = function countdownProps() {\n  return _objectSpread(_objectSpread({}, statisticProps()), {}, {\n    value: [Number, String, Object],\n    format: String,\n    onFinish: Function,\n    onChange: Function\n  });\n};\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'AStatisticCountdown',\n  props: initDefaultProps(countdownProps(), {\n    format: 'HH:mm:ss'\n  }),\n  // emits: ['finish', 'change'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n      slots = _ref.slots;\n    var countdownId = ref();\n    var statistic = ref();\n    var syncTimer = function syncTimer() {\n      var value = props.value;\n      var timestamp = getTime(value);\n      if (timestamp >= Date.now()) {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n    var startTimer = function startTimer() {\n      if (countdownId.value) return;\n      var timestamp = getTime(props.value);\n      countdownId.value = setInterval(function () {\n        statistic.value.$forceUpdate();\n        if (timestamp > Date.now()) {\n          emit('change', timestamp - Date.now());\n        }\n        syncTimer();\n      }, REFRESH_INTERVAL);\n    };\n    var stopTimer = function stopTimer() {\n      var value = props.value;\n      if (countdownId.value) {\n        clearInterval(countdownId.value);\n        countdownId.value = undefined;\n        var timestamp = getTime(value);\n        if (timestamp < Date.now()) {\n          emit('finish');\n        }\n      }\n    };\n    var formatCountdown = function formatCountdown(_ref2) {\n      var value = _ref2.value,\n        config = _ref2.config;\n      var format = props.format;\n      return formatCD(value, _objectSpread(_objectSpread({}, config), {}, {\n        format: format\n      }));\n    };\n    var valueRenderHtml = function valueRenderHtml(node) {\n      return node;\n    };\n    onMounted(function () {\n      syncTimer();\n    });\n    onUpdated(function () {\n      syncTimer();\n    });\n    onBeforeUnmount(function () {\n      stopTimer();\n    });\n    return function () {\n      var value = props.value;\n      return _createVNode(Statistic, _objectSpread({\n        \"ref\": statistic\n      }, _objectSpread(_objectSpread({}, omit(props, ['onFinish', 'onChange'])), {}, {\n        value: value,\n        valueRender: valueRenderHtml,\n        formatter: formatCountdown\n      })), slots);\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}