{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { toPathOptions } from '../utils/treeUtil';\nimport { toPathKey } from '../utils/commonUtil';\nimport { computed } from 'vue';\nimport { isValidElement } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nexport default (function (rawValues, options, fieldNames, multiple, displayRender) {\n  return computed(function () {\n    var mergedDisplayRender = displayRender.value ||\n    // Default displayRender\n    function (_ref) {\n      var labels = _ref.labels;\n      var mergedLabels = multiple.value ? labels.slice(-1) : labels;\n      var SPLIT = ' / ';\n      if (mergedLabels.every(function (label) {\n        return ['string', 'number'].includes(_typeof(label));\n      })) {\n        return mergedLabels.join(SPLIT);\n      }\n      // If exist non-string value, use VueNode instead\n      return mergedLabels.reduce(function (list, label, index) {\n        var keyedLabel = isValidElement(label) ? cloneElement(label, {\n          key: index\n        }) : label;\n        if (index === 0) {\n          return [keyedLabel];\n        }\n        return [].concat(_toConsumableArray(list), [SPLIT, keyedLabel]);\n      }, []);\n    };\n    return rawValues.value.map(function (valueCells) {\n      var valueOptions = toPathOptions(valueCells, options.value, fieldNames.value);\n      var label = mergedDisplayRender({\n        labels: valueOptions.map(function (_ref2) {\n          var _option$fieldNames$va;\n          var option = _ref2.option,\n            value = _ref2.value;\n          return (_option$fieldNames$va = option === null || option === void 0 ? void 0 : option[fieldNames.value.label]) !== null && _option$fieldNames$va !== void 0 ? _option$fieldNames$va : value;\n        }),\n        selectedOptions: valueOptions.map(function (_ref3) {\n          var option = _ref3.option;\n          return option;\n        })\n      });\n      var value = toPathKey(valueCells);\n      return {\n        label: label,\n        value: value,\n        key: value,\n        valueCells: valueCells\n      };\n    });\n  });\n});","map":{"version":3,"names":["_toConsumableArray","_typeof","toPathOptions","toPathKey","computed","isValidElement","cloneElement","rawValues","options","fieldNames","multiple","displayRender","mergedDisplayRender","value","_ref","labels","mergedLabels","slice","SPLIT","every","label","includes","join","reduce","list","index","keyedLabel","key","concat","map","valueCells","valueOptions","_ref2","_option$fieldNames$va","option","selectedOptions","_ref3"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/vc-cascader/hooks/useDisplayValues.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { toPathOptions } from '../utils/treeUtil';\nimport { toPathKey } from '../utils/commonUtil';\nimport { computed } from 'vue';\nimport { isValidElement } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nexport default (function (rawValues, options, fieldNames, multiple, displayRender) {\n  return computed(function () {\n    var mergedDisplayRender = displayRender.value ||\n    // Default displayRender\n    function (_ref) {\n      var labels = _ref.labels;\n      var mergedLabels = multiple.value ? labels.slice(-1) : labels;\n      var SPLIT = ' / ';\n      if (mergedLabels.every(function (label) {\n        return ['string', 'number'].includes(_typeof(label));\n      })) {\n        return mergedLabels.join(SPLIT);\n      }\n      // If exist non-string value, use VueNode instead\n      return mergedLabels.reduce(function (list, label, index) {\n        var keyedLabel = isValidElement(label) ? cloneElement(label, {\n          key: index\n        }) : label;\n        if (index === 0) {\n          return [keyedLabel];\n        }\n        return [].concat(_toConsumableArray(list), [SPLIT, keyedLabel]);\n      }, []);\n    };\n    return rawValues.value.map(function (valueCells) {\n      var valueOptions = toPathOptions(valueCells, options.value, fieldNames.value);\n      var label = mergedDisplayRender({\n        labels: valueOptions.map(function (_ref2) {\n          var _option$fieldNames$va;\n          var option = _ref2.option,\n            value = _ref2.value;\n          return (_option$fieldNames$va = option === null || option === void 0 ? void 0 : option[fieldNames.value.label]) !== null && _option$fieldNames$va !== void 0 ? _option$fieldNames$va : value;\n        }),\n        selectedOptions: valueOptions.map(function (_ref3) {\n          var option = _ref3.option;\n          return option;\n        })\n      });\n      var value = toPathKey(valueCells);\n      return {\n        label: label,\n        value: value,\n        key: value,\n        valueCells: valueCells\n      };\n    });\n  });\n});"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,8CAA8C;AAC7E,OAAOC,OAAO,MAAM,mCAAmC;AACvD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,QAAQ,QAAQ,KAAK;AAC9B,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,gBAAgB,UAAUC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,aAAa,EAAE;EACjF,OAAOP,QAAQ,CAAC,YAAY;IAC1B,IAAIQ,mBAAmB,GAAGD,aAAa,CAACE,KAAK;IAC7C;IACA,UAAUC,IAAI,EAAE;MACd,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;MACxB,IAAIC,YAAY,GAAGN,QAAQ,CAACG,KAAK,GAAGE,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGF,MAAM;MAC7D,IAAIG,KAAK,GAAG,KAAK;MACjB,IAAIF,YAAY,CAACG,KAAK,CAAC,UAAUC,KAAK,EAAE;QACtC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACpB,OAAO,CAACmB,KAAK,CAAC,CAAC;MACtD,CAAC,CAAC,EAAE;QACF,OAAOJ,YAAY,CAACM,IAAI,CAACJ,KAAK,CAAC;MACjC;MACA;MACA,OAAOF,YAAY,CAACO,MAAM,CAAC,UAAUC,IAAI,EAAEJ,KAAK,EAAEK,KAAK,EAAE;QACvD,IAAIC,UAAU,GAAGrB,cAAc,CAACe,KAAK,CAAC,GAAGd,YAAY,CAACc,KAAK,EAAE;UAC3DO,GAAG,EAAEF;QACP,CAAC,CAAC,GAAGL,KAAK;QACV,IAAIK,KAAK,KAAK,CAAC,EAAE;UACf,OAAO,CAACC,UAAU,CAAC;QACrB;QACA,OAAO,EAAE,CAACE,MAAM,CAAC5B,kBAAkB,CAACwB,IAAI,CAAC,EAAE,CAACN,KAAK,EAAEQ,UAAU,CAAC,CAAC;MACjE,CAAC,EAAE,EAAE,CAAC;IACR,CAAC;IACD,OAAOnB,SAAS,CAACM,KAAK,CAACgB,GAAG,CAAC,UAAUC,UAAU,EAAE;MAC/C,IAAIC,YAAY,GAAG7B,aAAa,CAAC4B,UAAU,EAAEtB,OAAO,CAACK,KAAK,EAAEJ,UAAU,CAACI,KAAK,CAAC;MAC7E,IAAIO,KAAK,GAAGR,mBAAmB,CAAC;QAC9BG,MAAM,EAAEgB,YAAY,CAACF,GAAG,CAAC,UAAUG,KAAK,EAAE;UACxC,IAAIC,qBAAqB;UACzB,IAAIC,MAAM,GAAGF,KAAK,CAACE,MAAM;YACvBrB,KAAK,GAAGmB,KAAK,CAACnB,KAAK;UACrB,OAAO,CAACoB,qBAAqB,GAAGC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACzB,UAAU,CAACI,KAAK,CAACO,KAAK,CAAC,MAAM,IAAI,IAAIa,qBAAqB,KAAK,KAAK,CAAC,GAAGA,qBAAqB,GAAGpB,KAAK;QAC9L,CAAC,CAAC;QACFsB,eAAe,EAAEJ,YAAY,CAACF,GAAG,CAAC,UAAUO,KAAK,EAAE;UACjD,IAAIF,MAAM,GAAGE,KAAK,CAACF,MAAM;UACzB,OAAOA,MAAM;QACf,CAAC;MACH,CAAC,CAAC;MACF,IAAIrB,KAAK,GAAGV,SAAS,CAAC2B,UAAU,CAAC;MACjC,OAAO;QACLV,KAAK,EAAEA,KAAK;QACZP,KAAK,EAAEA,KAAK;QACZc,GAAG,EAAEd,KAAK;QACViB,UAAU,EAAEA;MACd,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}