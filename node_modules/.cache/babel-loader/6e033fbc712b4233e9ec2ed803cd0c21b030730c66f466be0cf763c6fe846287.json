{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning, { noteOnce } from '../../vc-util/warning';\nimport { convertChildrenToData } from './legacyUtil';\nimport { toArray } from './commonUtil';\nimport { isValidElement } from '../../_util/props-util';\nimport { isMultiple } from '../BaseSelect';\nfunction warningProps(props) {\n  var mode = props.mode,\n    options = props.options,\n    children = props.children,\n    backfill = props.backfill,\n    allowClear = props.allowClear,\n    placeholder = props.placeholder,\n    getInputElement = props.getInputElement,\n    showSearch = props.showSearch,\n    onSearch = props.onSearch,\n    defaultOpen = props.defaultOpen,\n    autofocus = props.autofocus,\n    labelInValue = props.labelInValue,\n    value = props.value,\n    inputValue = props.inputValue,\n    optionLabelProp = props.optionLabelProp;\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = showSearch !== undefined ? showSearch : multiple || mode === 'combobox';\n  var mergedOptions = options || convertChildrenToData(children);\n  // `tags` should not set option as disabled\n  warning(mode !== 'tags' || mergedOptions.every(function (opt) {\n    return !opt.disabled;\n  }), 'Please avoid setting option to disabled in tags mode since user can always type text as tag.');\n  // `combobox` should not use `optionLabelProp`\n  warning(mode !== 'combobox' || !optionLabelProp, '`combobox` mode not support `optionLabelProp`. Please set `value` on Option directly.');\n  // Only `combobox` support `backfill`\n  warning(mode === 'combobox' || !backfill, '`backfill` only works with `combobox` mode.');\n  // Only `combobox` support `getInputElement`\n  warning(mode === 'combobox' || !getInputElement, '`getInputElement` only work with `combobox` mode.');\n  // Customize `getInputElement` should not use `allowClear` & `placeholder`\n  noteOnce(mode !== 'combobox' || !getInputElement || !allowClear || !placeholder, 'Customize `getInputElement` should customize clear and placeholder logic instead of configuring `allowClear` and `placeholder`.');\n  // `onSearch` should use in `combobox` or `showSearch`\n  if (onSearch && !mergedShowSearch && mode !== 'combobox' && mode !== 'tags') {\n    warning(false, '`onSearch` should work with `showSearch` instead of use alone.');\n  }\n  noteOnce(!defaultOpen || autofocus, '`defaultOpen` makes Select open without focus which means it will not close by click outside. You can set `autofocus` if needed.');\n  if (value !== undefined && value !== null) {\n    var values = toArray(value);\n    warning(!labelInValue || values.every(function (val) {\n      return _typeof(val) === 'object' && ('key' in val || 'value' in val);\n    }), '`value` should in shape of `{ value: string | number, label?: any }` when you set `labelInValue` to `true`');\n    warning(!multiple || Array.isArray(value), '`value` should be array when `mode` is `multiple` or `tags`');\n  }\n  // Syntactic sugar should use correct children type\n  if (children) {\n    var invalidateChildType = null;\n    children.some(function (node) {\n      if (!isValidElement(node) || !node.type) {\n        return false;\n      }\n      var type = node.type;\n      if (type.isSelectOption) {\n        return false;\n      }\n      if (type.isSelectOptGroup) {\n        var _node$children;\n        var childs = ((_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.default()) || [];\n        var allChildrenValid = childs.every(function (subNode) {\n          if (!isValidElement(subNode) || !node.type || subNode.type.isSelectOption) {\n            return true;\n          }\n          invalidateChildType = subNode.type;\n          return false;\n        });\n        if (allChildrenValid) {\n          return false;\n        }\n        return true;\n      }\n      invalidateChildType = type;\n      return true;\n    });\n    if (invalidateChildType) {\n      warning(false, \"`children` should be `Select.Option` or `Select.OptGroup` instead of `\".concat(invalidateChildType.displayName || invalidateChildType.name || invalidateChildType, \"`.\"));\n    }\n    warning(inputValue === undefined, '`inputValue` is deprecated, please use `searchValue` instead.');\n  }\n}\nexport default warningProps;","map":{"version":3,"names":["_typeof","warning","noteOnce","convertChildrenToData","toArray","isValidElement","isMultiple","warningProps","props","mode","options","children","backfill","allowClear","placeholder","getInputElement","showSearch","onSearch","defaultOpen","autofocus","labelInValue","value","inputValue","optionLabelProp","multiple","mergedShowSearch","undefined","mergedOptions","every","opt","disabled","values","val","Array","isArray","invalidateChildType","some","node","type","isSelectOption","isSelectOptGroup","_node$children","childs","default","allChildrenValid","subNode","concat","displayName","name"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/vc-select/utils/warningPropsUtil.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning, { noteOnce } from '../../vc-util/warning';\nimport { convertChildrenToData } from './legacyUtil';\nimport { toArray } from './commonUtil';\nimport { isValidElement } from '../../_util/props-util';\nimport { isMultiple } from '../BaseSelect';\nfunction warningProps(props) {\n  var mode = props.mode,\n    options = props.options,\n    children = props.children,\n    backfill = props.backfill,\n    allowClear = props.allowClear,\n    placeholder = props.placeholder,\n    getInputElement = props.getInputElement,\n    showSearch = props.showSearch,\n    onSearch = props.onSearch,\n    defaultOpen = props.defaultOpen,\n    autofocus = props.autofocus,\n    labelInValue = props.labelInValue,\n    value = props.value,\n    inputValue = props.inputValue,\n    optionLabelProp = props.optionLabelProp;\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = showSearch !== undefined ? showSearch : multiple || mode === 'combobox';\n  var mergedOptions = options || convertChildrenToData(children);\n  // `tags` should not set option as disabled\n  warning(mode !== 'tags' || mergedOptions.every(function (opt) {\n    return !opt.disabled;\n  }), 'Please avoid setting option to disabled in tags mode since user can always type text as tag.');\n  // `combobox` should not use `optionLabelProp`\n  warning(mode !== 'combobox' || !optionLabelProp, '`combobox` mode not support `optionLabelProp`. Please set `value` on Option directly.');\n  // Only `combobox` support `backfill`\n  warning(mode === 'combobox' || !backfill, '`backfill` only works with `combobox` mode.');\n  // Only `combobox` support `getInputElement`\n  warning(mode === 'combobox' || !getInputElement, '`getInputElement` only work with `combobox` mode.');\n  // Customize `getInputElement` should not use `allowClear` & `placeholder`\n  noteOnce(mode !== 'combobox' || !getInputElement || !allowClear || !placeholder, 'Customize `getInputElement` should customize clear and placeholder logic instead of configuring `allowClear` and `placeholder`.');\n  // `onSearch` should use in `combobox` or `showSearch`\n  if (onSearch && !mergedShowSearch && mode !== 'combobox' && mode !== 'tags') {\n    warning(false, '`onSearch` should work with `showSearch` instead of use alone.');\n  }\n  noteOnce(!defaultOpen || autofocus, '`defaultOpen` makes Select open without focus which means it will not close by click outside. You can set `autofocus` if needed.');\n  if (value !== undefined && value !== null) {\n    var values = toArray(value);\n    warning(!labelInValue || values.every(function (val) {\n      return _typeof(val) === 'object' && ('key' in val || 'value' in val);\n    }), '`value` should in shape of `{ value: string | number, label?: any }` when you set `labelInValue` to `true`');\n    warning(!multiple || Array.isArray(value), '`value` should be array when `mode` is `multiple` or `tags`');\n  }\n  // Syntactic sugar should use correct children type\n  if (children) {\n    var invalidateChildType = null;\n    children.some(function (node) {\n      if (!isValidElement(node) || !node.type) {\n        return false;\n      }\n      var type = node.type;\n      if (type.isSelectOption) {\n        return false;\n      }\n      if (type.isSelectOptGroup) {\n        var _node$children;\n        var childs = ((_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.default()) || [];\n        var allChildrenValid = childs.every(function (subNode) {\n          if (!isValidElement(subNode) || !node.type || subNode.type.isSelectOption) {\n            return true;\n          }\n          invalidateChildType = subNode.type;\n          return false;\n        });\n        if (allChildrenValid) {\n          return false;\n        }\n        return true;\n      }\n      invalidateChildType = type;\n      return true;\n    });\n    if (invalidateChildType) {\n      warning(false, \"`children` should be `Select.Option` or `Select.OptGroup` instead of `\".concat(invalidateChildType.displayName || invalidateChildType.name || invalidateChildType, \"`.\"));\n    }\n    warning(inputValue === undefined, '`inputValue` is deprecated, please use `searchValue` instead.');\n  }\n}\nexport default warningProps;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}