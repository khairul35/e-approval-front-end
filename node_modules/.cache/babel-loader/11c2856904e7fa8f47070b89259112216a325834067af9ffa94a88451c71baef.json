{"ast":null,"code":"import { computed } from 'vue';\n/**\n * Get sticky column offset width\n */\nfunction useStickyOffsets(colWidthsRef, columnCountRef, directionRef) {\n  var stickyOffsets = computed(function () {\n    var leftOffsets = [];\n    var rightOffsets = [];\n    var left = 0;\n    var right = 0;\n    var colWidths = colWidthsRef.value;\n    var columnCount = columnCountRef.value;\n    var direction = directionRef.value;\n    for (var start = 0; start < columnCount; start += 1) {\n      if (direction === 'rtl') {\n        // Left offset\n        rightOffsets[start] = right;\n        right += colWidths[start] || 0;\n        // Right offset\n        var end = columnCount - start - 1;\n        leftOffsets[end] = left;\n        left += colWidths[end] || 0;\n      } else {\n        // Left offset\n        leftOffsets[start] = left;\n        left += colWidths[start] || 0;\n        // Right offset\n        var _end = columnCount - start - 1;\n        rightOffsets[_end] = right;\n        right += colWidths[_end] || 0;\n      }\n    }\n    return {\n      left: leftOffsets,\n      right: rightOffsets\n    };\n  });\n  return stickyOffsets;\n}\nexport default useStickyOffsets;","map":{"version":3,"names":["computed","useStickyOffsets","colWidthsRef","columnCountRef","directionRef","stickyOffsets","leftOffsets","rightOffsets","left","right","colWidths","value","columnCount","direction","start","end","_end"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/vc-table/hooks/useStickyOffsets.js"],"sourcesContent":["import { computed } from 'vue';\n/**\n * Get sticky column offset width\n */\nfunction useStickyOffsets(colWidthsRef, columnCountRef, directionRef) {\n  var stickyOffsets = computed(function () {\n    var leftOffsets = [];\n    var rightOffsets = [];\n    var left = 0;\n    var right = 0;\n    var colWidths = colWidthsRef.value;\n    var columnCount = columnCountRef.value;\n    var direction = directionRef.value;\n    for (var start = 0; start < columnCount; start += 1) {\n      if (direction === 'rtl') {\n        // Left offset\n        rightOffsets[start] = right;\n        right += colWidths[start] || 0;\n        // Right offset\n        var end = columnCount - start - 1;\n        leftOffsets[end] = left;\n        left += colWidths[end] || 0;\n      } else {\n        // Left offset\n        leftOffsets[start] = left;\n        left += colWidths[start] || 0;\n        // Right offset\n        var _end = columnCount - start - 1;\n        rightOffsets[_end] = right;\n        right += colWidths[_end] || 0;\n      }\n    }\n    return {\n      left: leftOffsets,\n      right: rightOffsets\n    };\n  });\n  return stickyOffsets;\n}\nexport default useStickyOffsets;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,KAAK;AAC9B;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,YAAY,EAAEC,cAAc,EAAEC,YAAY,EAAE;EACpE,IAAIC,aAAa,GAAGL,QAAQ,CAAC,YAAY;IACvC,IAAIM,WAAW,GAAG,EAAE;IACpB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,IAAI,GAAG,CAAC;IACZ,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,SAAS,GAAGR,YAAY,CAACS,KAAK;IAClC,IAAIC,WAAW,GAAGT,cAAc,CAACQ,KAAK;IACtC,IAAIE,SAAS,GAAGT,YAAY,CAACO,KAAK;IAClC,KAAK,IAAIG,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,WAAW,EAAEE,KAAK,IAAI,CAAC,EAAE;MACnD,IAAID,SAAS,KAAK,KAAK,EAAE;QACvB;QACAN,YAAY,CAACO,KAAK,CAAC,GAAGL,KAAK;QAC3BA,KAAK,IAAIC,SAAS,CAACI,KAAK,CAAC,IAAI,CAAC;QAC9B;QACA,IAAIC,GAAG,GAAGH,WAAW,GAAGE,KAAK,GAAG,CAAC;QACjCR,WAAW,CAACS,GAAG,CAAC,GAAGP,IAAI;QACvBA,IAAI,IAAIE,SAAS,CAACK,GAAG,CAAC,IAAI,CAAC;MAC7B,CAAC,MAAM;QACL;QACAT,WAAW,CAACQ,KAAK,CAAC,GAAGN,IAAI;QACzBA,IAAI,IAAIE,SAAS,CAACI,KAAK,CAAC,IAAI,CAAC;QAC7B;QACA,IAAIE,IAAI,GAAGJ,WAAW,GAAGE,KAAK,GAAG,CAAC;QAClCP,YAAY,CAACS,IAAI,CAAC,GAAGP,KAAK;QAC1BA,KAAK,IAAIC,SAAS,CAACM,IAAI,CAAC,IAAI,CAAC;MAC/B;IACF;IACA,OAAO;MACLR,IAAI,EAAEF,WAAW;MACjBG,KAAK,EAAEF;IACT,CAAC;EACH,CAAC,CAAC;EACF,OAAOF,aAAa;AACtB;AACA,eAAeJ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}