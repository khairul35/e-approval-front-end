{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { createVNode as _createVNode } from \"vue\";\nimport DownOutlined from \"@ant-design/icons-vue/es/icons/DownOutlined\";\nimport { INTERNAL_COL_DEFINE } from '../../vc-table';\nimport { arrAdd, arrDel } from '../../vc-tree/util';\nimport { conductCheck } from '../../vc-tree/utils/conductUtil';\nimport { convertDataToEntities } from '../../vc-tree/utils/treeUtil';\nimport devWarning from '../../vc-util/devWarning';\nimport useMergedState from '../../_util/hooks/useMergedState';\nimport useState from '../../_util/hooks/useState';\nimport { watchEffect, computed, shallowRef } from 'vue';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport useMaxLevel from '../../vc-tree/useMaxLevel';\n// TODO: warning if use ajax!!!\nexport var SELECTION_COLUMN = {};\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\nvar EMPTY_LIST = [];\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\nexport default function useSelection(rowSelectionRef, configRef) {\n  var mergedRowSelection = computed(function () {\n    var temp = rowSelectionRef.value || {};\n    var _temp$checkStrictly = temp.checkStrictly,\n      checkStrictly = _temp$checkStrictly === void 0 ? true : _temp$checkStrictly;\n    return _objectSpread(_objectSpread({}, temp), {}, {\n      checkStrictly: checkStrictly\n    });\n  });\n  // ========================= Keys =========================\n  var _useMergedState = useMergedState(mergedRowSelection.value.selectedRowKeys || mergedRowSelection.value.defaultSelectedRowKeys || EMPTY_LIST, {\n      value: computed(function () {\n        return mergedRowSelection.value.selectedRowKeys;\n      })\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedSelectedKeys = _useMergedState2[0],\n    setMergedSelectedKeys = _useMergedState2[1];\n  // ======================== Caches ========================\n  var preserveRecordsRef = shallowRef(new Map());\n  var updatePreserveRecordsCache = function updatePreserveRecordsCache(keys) {\n    if (mergedRowSelection.value.preserveSelectedRowKeys) {\n      var newCache = new Map();\n      // Keep key if mark as preserveSelectedRowKeys\n      keys.forEach(function (key) {\n        var record = configRef.getRecordByKey(key);\n        if (!record && preserveRecordsRef.value.has(key)) {\n          record = preserveRecordsRef.value.get(key);\n        }\n        newCache.set(key, record);\n      });\n      // Refresh to new cache\n      preserveRecordsRef.value = newCache;\n    }\n  };\n  watchEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys.value);\n  });\n  var keyEntities = computed(function () {\n    return mergedRowSelection.value.checkStrictly ? null : convertDataToEntities(configRef.data.value, {\n      externalGetKey: configRef.getRowKey.value,\n      childrenPropName: configRef.childrenColumnName.value\n    }).keyEntities;\n  });\n  // Get flatten data\n  var flattedData = computed(function () {\n    return flattenData(configRef.pageData.value, configRef.childrenColumnName.value);\n  });\n  // Get all checkbox props\n  var checkboxPropsMap = computed(function () {\n    var map = new Map();\n    var getRowKey = configRef.getRowKey.value;\n    var getCheckboxProps = mergedRowSelection.value.getCheckboxProps;\n    flattedData.value.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  });\n  var _useMaxLevel = useMaxLevel(keyEntities),\n    maxLevel = _useMaxLevel.maxLevel,\n    levelEntities = _useMaxLevel.levelEntities;\n  var isCheckboxDisabled = function isCheckboxDisabled(r) {\n    var _checkboxPropsMap$val;\n    return !!((_checkboxPropsMap$val = checkboxPropsMap.value.get(configRef.getRowKey.value(r))) !== null && _checkboxPropsMap$val !== void 0 && _checkboxPropsMap$val.disabled);\n  };\n  var selectKeysState = computed(function () {\n    if (mergedRowSelection.value.checkStrictly) {\n      return [mergedSelectedKeys.value || [], []];\n    }\n    var _conductCheck = conductCheck(mergedSelectedKeys.value, true, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled),\n      checkedKeys = _conductCheck.checkedKeys,\n      halfCheckedKeys = _conductCheck.halfCheckedKeys;\n    return [checkedKeys || [], halfCheckedKeys];\n  });\n  var derivedSelectedKeys = computed(function () {\n    return selectKeysState.value[0];\n  });\n  var derivedHalfSelectedKeys = computed(function () {\n    return selectKeysState.value[1];\n  });\n  var derivedSelectedKeySet = computed(function () {\n    var keys = mergedRowSelection.value.type === 'radio' ? derivedSelectedKeys.value.slice(0, 1) : derivedSelectedKeys.value;\n    return new Set(keys);\n  });\n  var derivedHalfSelectedKeySet = computed(function () {\n    return mergedRowSelection.value.type === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys.value);\n  });\n  // Save last selected key to enable range selection\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    lastSelectedKey = _useState2[0],\n    setLastSelectedKey = _useState2[1];\n  // // Reset if rowSelection reset\n  // we use computed to reset, donot need setMergedSelectedKeys again like react\n  // https://github.com/vueComponent/ant-design-vue/issues/4885\n  // watchEffect(() => {\n  //   if (!rowSelectionRef.value) {\n  //     setMergedSelectedKeys([]);\n  //   }\n  // });\n  var setSelectedKeys = function setSelectedKeys(keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n    var _mergedRowSelection$v = mergedRowSelection.value,\n      preserveSelectedRowKeys = _mergedRowSelection$v.preserveSelectedRowKeys,\n      onSelectionChange = _mergedRowSelection$v.onChange;\n    var getRecordByKey = configRef.getRecordByKey;\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.value.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  };\n  // ====================== Selections ======================\n  // Trigger single `onSelect` event\n  var triggerSingleSelection = function triggerSingleSelection(key, selected, keys, event) {\n    var onSelect = mergedRowSelection.value.onSelect;\n    var _ref = configRef || {},\n      getRecordByKey = _ref.getRecordByKey;\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n    setSelectedKeys(keys);\n  };\n  var mergedSelections = computed(function () {\n    var _mergedRowSelection$v2 = mergedRowSelection.value,\n      onSelectInvert = _mergedRowSelection$v2.onSelectInvert,\n      onSelectNone = _mergedRowSelection$v2.onSelectNone,\n      selections = _mergedRowSelection$v2.selections,\n      hideSelectAll = _mergedRowSelection$v2.hideSelectAll;\n    var data = configRef.data,\n      pageData = configRef.pageData,\n      getRowKey = configRef.getRowKey,\n      tableLocale = configRef.locale;\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.value.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.value.map(function (record, index) {\n              return getRowKey.value(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.value.get(key);\n              return !(checkProps !== null && checkProps !== void 0 && checkProps.disabled) || derivedSelectedKeySet.value.has(key);\n            }));\n          }\n        };\n      }\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.value.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet.value);\n            pageData.value.forEach(function (record, index) {\n              var key = getRowKey.value(record, index);\n              var checkProps = checkboxPropsMap.value.get(key);\n              if (!(checkProps !== null && checkProps !== void 0 && checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet.delete(key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n            setSelectedKeys(keys);\n          }\n        };\n      }\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.value.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet.value).filter(function (key) {\n              var checkProps = checkboxPropsMap.value.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n      return selection;\n    });\n  });\n  var flattedDataLength = computed(function () {\n    return flattedData.value.length;\n  });\n  // ======================= Columns ========================\n  var transformColumns = function transformColumns(columns) {\n    var _prevCol$INTERNAL_COL;\n    var _mergedRowSelection$v3 = mergedRowSelection.value,\n      onSelectAll = _mergedRowSelection$v3.onSelectAll,\n      onSelectMultiple = _mergedRowSelection$v3.onSelectMultiple,\n      selectionColWidth = _mergedRowSelection$v3.columnWidth,\n      selectionType = _mergedRowSelection$v3.type,\n      fixed = _mergedRowSelection$v3.fixed,\n      customizeRenderCell = _mergedRowSelection$v3.renderCell,\n      hideSelectAll = _mergedRowSelection$v3.hideSelectAll,\n      checkStrictly = _mergedRowSelection$v3.checkStrictly;\n    var prefixCls = configRef.prefixCls,\n      getRecordByKey = configRef.getRecordByKey,\n      getRowKey = configRef.getRowKey,\n      expandType = configRef.expandType,\n      getPopupContainer = configRef.getPopupContainer;\n    if (!rowSelectionRef.value) {\n      if (process.env.NODE_ENV !== 'production') {\n        devWarning(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.');\n      }\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    }\n    // Support selection\n    var cloneColumns = columns.slice();\n    var keySet = new Set(derivedSelectedKeySet.value);\n    // Record key only need check with enabled\n    var recordKeys = flattedData.value.map(getRowKey.value).filter(function (key) {\n      return !checkboxPropsMap.value.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet.delete(key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    };\n    // ===================== Render =====================\n    // Title Cell\n    var title;\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n      if (mergedSelections.value) {\n        var menu = _createVNode(Menu, {\n          \"getPopupContainer\": getPopupContainer.value\n        }, {\n          default: function _default() {\n            return [mergedSelections.value.map(function (selection, index) {\n              var key = selection.key,\n                text = selection.text,\n                onSelectionClick = selection.onSelect;\n              return _createVNode(Menu.Item, {\n                \"key\": key || index,\n                \"onClick\": function onClick() {\n                  onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n                }\n              }, {\n                default: function _default() {\n                  return [text];\n                }\n              });\n            })];\n          }\n        });\n        customizeSelections = _createVNode(\"div\", {\n          \"class\": \"\".concat(prefixCls.value, \"-selection-extra\")\n        }, [_createVNode(Dropdown, {\n          \"overlay\": menu,\n          \"getPopupContainer\": getPopupContainer.value\n        }, {\n          default: function _default() {\n            return [_createVNode(\"span\", null, [_createVNode(DownOutlined, null, null)])];\n          }\n        })]);\n      }\n      var allDisabledData = flattedData.value.map(function (record, index) {\n        var key = getRowKey.value(record, index);\n        var checkboxProps = checkboxPropsMap.value.get(key) || {};\n        return _objectSpread({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedDataLength.value;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && _createVNode(\"div\", {\n        \"class\": \"\".concat(prefixCls.value, \"-selection\")\n      }, [_createVNode(Checkbox, {\n        \"checked\": !allDisabled ? !!flattedDataLength.value && checkedCurrentAll : allDisabledAndChecked,\n        \"indeterminate\": !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        \"onChange\": onSelectAllChange,\n        \"disabled\": flattedDataLength.value === 0 || allDisabled,\n        \"skipGroup\": true\n      }, null), customizeSelections]);\n    }\n    // Body Cell\n    var renderCell;\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_ref5) {\n        var record = _ref5.record,\n          index = _ref5.index;\n        var key = getRowKey.value(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: _createVNode(Radio, _objectSpread(_objectSpread({}, checkboxPropsMap.value.get(key)), {}, {\n            \"checked\": checked,\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            },\n            \"onChange\": function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          }), null),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_ref6) {\n        var record = _ref6.record,\n          index = _ref6.index;\n        var key = getRowKey.value(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.value.has(key);\n        var checkboxProps = checkboxPropsMap.value.get(key);\n        var mergedIndeterminate;\n        if (expandType.value === 'nest') {\n          mergedIndeterminate = indeterminate;\n          devWarning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          var _checkboxProps$indete;\n          mergedIndeterminate = (_checkboxProps$indete = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _checkboxProps$indete !== void 0 ? _checkboxProps$indete : indeterminate;\n        }\n        // Record checked\n        return {\n          node: _createVNode(Checkbox, _objectSpread(_objectSpread({}, checkboxProps), {}, {\n            \"indeterminate\": mergedIndeterminate,\n            \"checked\": checked,\n            \"skipGroup\": true,\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            },\n            \"onChange\": function onChange(_ref7) {\n              var nativeEvent = _ref7.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1;\n              // Get range of this\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey.value, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n                  return false;\n                });\n              }\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.delete(recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys.value;\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                    halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys;\n                  // If remove, we do it again to correction\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet.delete(key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled).checkedKeys;\n                  }\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n              setLastSelectedKey(key);\n            }\n          }), null),\n          checked: checked\n        };\n      };\n    }\n    var renderSelectionCell = function renderSelectionCell(_ref8) {\n      var record = _ref8.record,\n        index = _ref8.index;\n      var _renderCell = renderCell({\n          record: record,\n          index: index\n        }),\n        node = _renderCell.node,\n        checked = _renderCell.checked;\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n      return node;\n    };\n    // Insert selection column if not exist\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _col$INTERNAL_COL_DEF;\n        return ((_col$INTERNAL_COL_DEF = col[INTERNAL_COL_DEFINE]) === null || _col$INTERNAL_COL_DEF === void 0 ? void 0 : _col$INTERNAL_COL_DEF.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n          _cloneColumns2 = _toArray(_cloneColumns),\n          expandColumn = _cloneColumns2[0],\n          restColumns = _cloneColumns2.slice(1);\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    }\n    // Deduplicate selection column\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length > 1) {\n      devWarning(false, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.');\n    }\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    });\n    // Fixed column logic\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n    if (mergedFixed && prevCol && ((_prevCol$INTERNAL_COL = prevCol[INTERNAL_COL_DEFINE]) === null || _prevCol$INTERNAL_COL === void 0 ? void 0 : _prevCol$INTERNAL_COL.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    }\n    // Replace with real selection column\n    var selectionColumn = _defineProperty({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls.value, \"-selection-column\"),\n      title: mergedRowSelection.value.columnTitle || title,\n      customRender: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      class: \"\".concat(prefixCls.value, \"-selection-col\")\n    });\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  };\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"names":["_defineProperty","_toArray","_slicedToArray","_objectSpread","_toConsumableArray","_typeof","createVNode","_createVNode","DownOutlined","INTERNAL_COL_DEFINE","arrAdd","arrDel","conductCheck","convertDataToEntities","devWarning","useMergedState","useState","watchEffect","computed","shallowRef","Checkbox","Dropdown","Menu","Radio","useMaxLevel","SELECTION_COLUMN","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","EMPTY_LIST","flattenData","data","childrenColumnName","list","forEach","record","push","concat","useSelection","rowSelectionRef","configRef","mergedRowSelection","temp","value","_temp$checkStrictly","checkStrictly","_useMergedState","selectedRowKeys","defaultSelectedRowKeys","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","Map","updatePreserveRecordsCache","keys","preserveSelectedRowKeys","newCache","key","getRecordByKey","has","get","set","keyEntities","externalGetKey","getRowKey","childrenPropName","flattedData","pageData","checkboxPropsMap","map","getCheckboxProps","index","checkboxProps","process","env","NODE_ENV","_useMaxLevel","maxLevel","levelEntities","isCheckboxDisabled","r","_checkboxPropsMap$val","disabled","selectKeysState","_conductCheck","checkedKeys","halfCheckedKeys","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","type","slice","Set","derivedHalfSelectedKeySet","_useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","availableKeys","records","_mergedRowSelection$v","onSelectionChange","onChange","undefined","triggerSingleSelection","selected","event","onSelect","_ref","rows","k","mergedSelections","_mergedRowSelection$v2","onSelectInvert","onSelectNone","selections","hideSelectAll","tableLocale","locale","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","delete","add","Array","from","selectNone","flattedDataLength","length","transformColumns","columns","_prevCol$INTERNAL_COL","_mergedRowSelection$v3","onSelectAll","onSelectMultiple","selectionColWidth","columnWidth","selectionType","fixed","customizeRenderCell","renderCell","prefixCls","expandType","getPopupContainer","includes","col","cloneColumns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","default","_default","onSelectionClick","Item","onClick","allDisabledData","checked","_ref2","allDisabled","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","_ref5","node","e","stopPropagation","nativeEvent","_ref6","indeterminate","mergedIndeterminate","_checkboxProps$indete","_ref7","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_ref8","_renderCell","findIndex","_col$INTERNAL_COL_DEF","columnType","_cloneColumns","_cloneColumns2","expandColumn","restColumns","selectionColumnIndex","indexOf","column","prevCol","nextCol","mergedFixed","selectionColumn","width","className","columnTitle","customRender","class"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/table/hooks/useSelection.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { createVNode as _createVNode } from \"vue\";\nimport DownOutlined from \"@ant-design/icons-vue/es/icons/DownOutlined\";\nimport { INTERNAL_COL_DEFINE } from '../../vc-table';\nimport { arrAdd, arrDel } from '../../vc-tree/util';\nimport { conductCheck } from '../../vc-tree/utils/conductUtil';\nimport { convertDataToEntities } from '../../vc-tree/utils/treeUtil';\nimport devWarning from '../../vc-util/devWarning';\nimport useMergedState from '../../_util/hooks/useMergedState';\nimport useState from '../../_util/hooks/useState';\nimport { watchEffect, computed, shallowRef } from 'vue';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport useMaxLevel from '../../vc-tree/useMaxLevel';\n// TODO: warning if use ajax!!!\nexport var SELECTION_COLUMN = {};\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\nvar EMPTY_LIST = [];\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\nexport default function useSelection(rowSelectionRef, configRef) {\n  var mergedRowSelection = computed(function () {\n    var temp = rowSelectionRef.value || {};\n    var _temp$checkStrictly = temp.checkStrictly,\n      checkStrictly = _temp$checkStrictly === void 0 ? true : _temp$checkStrictly;\n    return _objectSpread(_objectSpread({}, temp), {}, {\n      checkStrictly: checkStrictly\n    });\n  });\n  // ========================= Keys =========================\n  var _useMergedState = useMergedState(mergedRowSelection.value.selectedRowKeys || mergedRowSelection.value.defaultSelectedRowKeys || EMPTY_LIST, {\n      value: computed(function () {\n        return mergedRowSelection.value.selectedRowKeys;\n      })\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedSelectedKeys = _useMergedState2[0],\n    setMergedSelectedKeys = _useMergedState2[1];\n  // ======================== Caches ========================\n  var preserveRecordsRef = shallowRef(new Map());\n  var updatePreserveRecordsCache = function updatePreserveRecordsCache(keys) {\n    if (mergedRowSelection.value.preserveSelectedRowKeys) {\n      var newCache = new Map();\n      // Keep key if mark as preserveSelectedRowKeys\n      keys.forEach(function (key) {\n        var record = configRef.getRecordByKey(key);\n        if (!record && preserveRecordsRef.value.has(key)) {\n          record = preserveRecordsRef.value.get(key);\n        }\n        newCache.set(key, record);\n      });\n      // Refresh to new cache\n      preserveRecordsRef.value = newCache;\n    }\n  };\n  watchEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys.value);\n  });\n  var keyEntities = computed(function () {\n    return mergedRowSelection.value.checkStrictly ? null : convertDataToEntities(configRef.data.value, {\n      externalGetKey: configRef.getRowKey.value,\n      childrenPropName: configRef.childrenColumnName.value\n    }).keyEntities;\n  });\n  // Get flatten data\n  var flattedData = computed(function () {\n    return flattenData(configRef.pageData.value, configRef.childrenColumnName.value);\n  });\n  // Get all checkbox props\n  var checkboxPropsMap = computed(function () {\n    var map = new Map();\n    var getRowKey = configRef.getRowKey.value;\n    var getCheckboxProps = mergedRowSelection.value.getCheckboxProps;\n    flattedData.value.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  });\n  var _useMaxLevel = useMaxLevel(keyEntities),\n    maxLevel = _useMaxLevel.maxLevel,\n    levelEntities = _useMaxLevel.levelEntities;\n  var isCheckboxDisabled = function isCheckboxDisabled(r) {\n    var _checkboxPropsMap$val;\n    return !!((_checkboxPropsMap$val = checkboxPropsMap.value.get(configRef.getRowKey.value(r))) !== null && _checkboxPropsMap$val !== void 0 && _checkboxPropsMap$val.disabled);\n  };\n  var selectKeysState = computed(function () {\n    if (mergedRowSelection.value.checkStrictly) {\n      return [mergedSelectedKeys.value || [], []];\n    }\n    var _conductCheck = conductCheck(mergedSelectedKeys.value, true, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled),\n      checkedKeys = _conductCheck.checkedKeys,\n      halfCheckedKeys = _conductCheck.halfCheckedKeys;\n    return [checkedKeys || [], halfCheckedKeys];\n  });\n  var derivedSelectedKeys = computed(function () {\n    return selectKeysState.value[0];\n  });\n  var derivedHalfSelectedKeys = computed(function () {\n    return selectKeysState.value[1];\n  });\n  var derivedSelectedKeySet = computed(function () {\n    var keys = mergedRowSelection.value.type === 'radio' ? derivedSelectedKeys.value.slice(0, 1) : derivedSelectedKeys.value;\n    return new Set(keys);\n  });\n  var derivedHalfSelectedKeySet = computed(function () {\n    return mergedRowSelection.value.type === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys.value);\n  });\n  // Save last selected key to enable range selection\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    lastSelectedKey = _useState2[0],\n    setLastSelectedKey = _useState2[1];\n  // // Reset if rowSelection reset\n  // we use computed to reset, donot need setMergedSelectedKeys again like react\n  // https://github.com/vueComponent/ant-design-vue/issues/4885\n  // watchEffect(() => {\n  //   if (!rowSelectionRef.value) {\n  //     setMergedSelectedKeys([]);\n  //   }\n  // });\n  var setSelectedKeys = function setSelectedKeys(keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n    var _mergedRowSelection$v = mergedRowSelection.value,\n      preserveSelectedRowKeys = _mergedRowSelection$v.preserveSelectedRowKeys,\n      onSelectionChange = _mergedRowSelection$v.onChange;\n    var getRecordByKey = configRef.getRecordByKey;\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.value.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  };\n  // ====================== Selections ======================\n  // Trigger single `onSelect` event\n  var triggerSingleSelection = function triggerSingleSelection(key, selected, keys, event) {\n    var onSelect = mergedRowSelection.value.onSelect;\n    var _ref = configRef || {},\n      getRecordByKey = _ref.getRecordByKey;\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n    setSelectedKeys(keys);\n  };\n  var mergedSelections = computed(function () {\n    var _mergedRowSelection$v2 = mergedRowSelection.value,\n      onSelectInvert = _mergedRowSelection$v2.onSelectInvert,\n      onSelectNone = _mergedRowSelection$v2.onSelectNone,\n      selections = _mergedRowSelection$v2.selections,\n      hideSelectAll = _mergedRowSelection$v2.hideSelectAll;\n    var data = configRef.data,\n      pageData = configRef.pageData,\n      getRowKey = configRef.getRowKey,\n      tableLocale = configRef.locale;\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.value.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.value.map(function (record, index) {\n              return getRowKey.value(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.value.get(key);\n              return !(checkProps !== null && checkProps !== void 0 && checkProps.disabled) || derivedSelectedKeySet.value.has(key);\n            }));\n          }\n        };\n      }\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.value.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet.value);\n            pageData.value.forEach(function (record, index) {\n              var key = getRowKey.value(record, index);\n              var checkProps = checkboxPropsMap.value.get(key);\n              if (!(checkProps !== null && checkProps !== void 0 && checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet.delete(key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n            setSelectedKeys(keys);\n          }\n        };\n      }\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.value.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet.value).filter(function (key) {\n              var checkProps = checkboxPropsMap.value.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n      return selection;\n    });\n  });\n  var flattedDataLength = computed(function () {\n    return flattedData.value.length;\n  });\n  // ======================= Columns ========================\n  var transformColumns = function transformColumns(columns) {\n    var _prevCol$INTERNAL_COL;\n    var _mergedRowSelection$v3 = mergedRowSelection.value,\n      onSelectAll = _mergedRowSelection$v3.onSelectAll,\n      onSelectMultiple = _mergedRowSelection$v3.onSelectMultiple,\n      selectionColWidth = _mergedRowSelection$v3.columnWidth,\n      selectionType = _mergedRowSelection$v3.type,\n      fixed = _mergedRowSelection$v3.fixed,\n      customizeRenderCell = _mergedRowSelection$v3.renderCell,\n      hideSelectAll = _mergedRowSelection$v3.hideSelectAll,\n      checkStrictly = _mergedRowSelection$v3.checkStrictly;\n    var prefixCls = configRef.prefixCls,\n      getRecordByKey = configRef.getRecordByKey,\n      getRowKey = configRef.getRowKey,\n      expandType = configRef.expandType,\n      getPopupContainer = configRef.getPopupContainer;\n    if (!rowSelectionRef.value) {\n      if (process.env.NODE_ENV !== 'production') {\n        devWarning(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.');\n      }\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    }\n    // Support selection\n    var cloneColumns = columns.slice();\n    var keySet = new Set(derivedSelectedKeySet.value);\n    // Record key only need check with enabled\n    var recordKeys = flattedData.value.map(getRowKey.value).filter(function (key) {\n      return !checkboxPropsMap.value.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet.delete(key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    };\n    // ===================== Render =====================\n    // Title Cell\n    var title;\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n      if (mergedSelections.value) {\n        var menu = _createVNode(Menu, {\n          \"getPopupContainer\": getPopupContainer.value\n        }, {\n          default: function _default() {\n            return [mergedSelections.value.map(function (selection, index) {\n              var key = selection.key,\n                text = selection.text,\n                onSelectionClick = selection.onSelect;\n              return _createVNode(Menu.Item, {\n                \"key\": key || index,\n                \"onClick\": function onClick() {\n                  onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n                }\n              }, {\n                default: function _default() {\n                  return [text];\n                }\n              });\n            })];\n          }\n        });\n        customizeSelections = _createVNode(\"div\", {\n          \"class\": \"\".concat(prefixCls.value, \"-selection-extra\")\n        }, [_createVNode(Dropdown, {\n          \"overlay\": menu,\n          \"getPopupContainer\": getPopupContainer.value\n        }, {\n          default: function _default() {\n            return [_createVNode(\"span\", null, [_createVNode(DownOutlined, null, null)])];\n          }\n        })]);\n      }\n      var allDisabledData = flattedData.value.map(function (record, index) {\n        var key = getRowKey.value(record, index);\n        var checkboxProps = checkboxPropsMap.value.get(key) || {};\n        return _objectSpread({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedDataLength.value;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && _createVNode(\"div\", {\n        \"class\": \"\".concat(prefixCls.value, \"-selection\")\n      }, [_createVNode(Checkbox, {\n        \"checked\": !allDisabled ? !!flattedDataLength.value && checkedCurrentAll : allDisabledAndChecked,\n        \"indeterminate\": !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        \"onChange\": onSelectAllChange,\n        \"disabled\": flattedDataLength.value === 0 || allDisabled,\n        \"skipGroup\": true\n      }, null), customizeSelections]);\n    }\n    // Body Cell\n    var renderCell;\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_ref5) {\n        var record = _ref5.record,\n          index = _ref5.index;\n        var key = getRowKey.value(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: _createVNode(Radio, _objectSpread(_objectSpread({}, checkboxPropsMap.value.get(key)), {}, {\n            \"checked\": checked,\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            },\n            \"onChange\": function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          }), null),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_ref6) {\n        var record = _ref6.record,\n          index = _ref6.index;\n        var key = getRowKey.value(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.value.has(key);\n        var checkboxProps = checkboxPropsMap.value.get(key);\n        var mergedIndeterminate;\n        if (expandType.value === 'nest') {\n          mergedIndeterminate = indeterminate;\n          devWarning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          var _checkboxProps$indete;\n          mergedIndeterminate = (_checkboxProps$indete = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _checkboxProps$indete !== void 0 ? _checkboxProps$indete : indeterminate;\n        }\n        // Record checked\n        return {\n          node: _createVNode(Checkbox, _objectSpread(_objectSpread({}, checkboxProps), {}, {\n            \"indeterminate\": mergedIndeterminate,\n            \"checked\": checked,\n            \"skipGroup\": true,\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            },\n            \"onChange\": function onChange(_ref7) {\n              var nativeEvent = _ref7.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1;\n              // Get range of this\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey.value, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n                  return false;\n                });\n              }\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.delete(recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys.value;\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                    halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys;\n                  // If remove, we do it again to correction\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet.delete(key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled).checkedKeys;\n                  }\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n              setLastSelectedKey(key);\n            }\n          }), null),\n          checked: checked\n        };\n      };\n    }\n    var renderSelectionCell = function renderSelectionCell(_ref8) {\n      var record = _ref8.record,\n        index = _ref8.index;\n      var _renderCell = renderCell({\n          record: record,\n          index: index\n        }),\n        node = _renderCell.node,\n        checked = _renderCell.checked;\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n      return node;\n    };\n    // Insert selection column if not exist\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _col$INTERNAL_COL_DEF;\n        return ((_col$INTERNAL_COL_DEF = col[INTERNAL_COL_DEFINE]) === null || _col$INTERNAL_COL_DEF === void 0 ? void 0 : _col$INTERNAL_COL_DEF.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n          _cloneColumns2 = _toArray(_cloneColumns),\n          expandColumn = _cloneColumns2[0],\n          restColumns = _cloneColumns2.slice(1);\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    }\n    // Deduplicate selection column\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length > 1) {\n      devWarning(false, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.');\n    }\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    });\n    // Fixed column logic\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n    if (mergedFixed && prevCol && ((_prevCol$INTERNAL_COL = prevCol[INTERNAL_COL_DEFINE]) === null || _prevCol$INTERNAL_COL === void 0 ? void 0 : _prevCol$INTERNAL_COL.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    }\n    // Replace with real selection column\n    var selectionColumn = _defineProperty({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls.value, \"-selection-column\"),\n      title: mergedRowSelection.value.columnTitle || title,\n      customRender: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      class: \"\".concat(prefixCls.value, \"-selection-col\")\n    });\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  };\n  return [transformColumns, derivedSelectedKeySet];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}