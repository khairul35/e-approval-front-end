{"ast":null,"code":"import { createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\";\nimport { defineComponent, onMounted, ref } from 'vue';\nimport VCResizeObserver from '../../vc-resize-observer';\nexport default defineComponent({\n  name: 'MeasureCell',\n  props: ['columnKey'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var tdRef = ref();\n    onMounted(function () {\n      if (tdRef.value) {\n        emit('columnResize', props.columnKey, tdRef.value.offsetWidth);\n      }\n    });\n    return function () {\n      return _createVNode(VCResizeObserver, {\n        \"onResize\": function onResize(_ref2) {\n          var offsetWidth = _ref2.offsetWidth;\n          emit('columnResize', props.columnKey, offsetWidth);\n        }\n      }, {\n        default: function _default() {\n          return [_createVNode(\"td\", {\n            \"ref\": tdRef,\n            \"style\": {\n              padding: 0,\n              border: 0,\n              height: 0\n            }\n          }, [_createVNode(\"div\", {\n            \"style\": {\n              height: 0,\n              overflow: 'hidden'\n            }\n          }, [_createTextVNode(\"\\xA0\")])])];\n        }\n      });\n    };\n  }\n});","map":{"version":3,"names":["createVNode","_createVNode","createTextVNode","_createTextVNode","defineComponent","onMounted","ref","VCResizeObserver","name","props","setup","_ref","emit","tdRef","value","columnKey","offsetWidth","onResize","_ref2","default","_default","padding","border","height","overflow"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/vc-table/Body/MeasureCell.js"],"sourcesContent":["import { createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\";\nimport { defineComponent, onMounted, ref } from 'vue';\nimport VCResizeObserver from '../../vc-resize-observer';\nexport default defineComponent({\n  name: 'MeasureCell',\n  props: ['columnKey'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var tdRef = ref();\n    onMounted(function () {\n      if (tdRef.value) {\n        emit('columnResize', props.columnKey, tdRef.value.offsetWidth);\n      }\n    });\n    return function () {\n      return _createVNode(VCResizeObserver, {\n        \"onResize\": function onResize(_ref2) {\n          var offsetWidth = _ref2.offsetWidth;\n          emit('columnResize', props.columnKey, offsetWidth);\n        }\n      }, {\n        default: function _default() {\n          return [_createVNode(\"td\", {\n            \"ref\": tdRef,\n            \"style\": {\n              padding: 0,\n              border: 0,\n              height: 0\n            }\n          }, [_createVNode(\"div\", {\n            \"style\": {\n              height: 0,\n              overflow: 'hidden'\n            }\n          }, [_createTextVNode(\"\\xA0\")])])];\n        }\n      });\n    };\n  }\n});"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAY,EAAEC,eAAe,IAAIC,gBAAgB,QAAQ,KAAK;AACtF,SAASC,eAAe,EAAEC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AACrD,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,eAAeH,eAAe,CAAC;EAC7BI,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,CAAC,WAAW,CAAC;EACpBC,KAAK,EAAE,SAASA,KAAKA,CAACD,KAAK,EAAEE,IAAI,EAAE;IACjC,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;IACpB,IAAIC,KAAK,GAAGP,GAAG,EAAE;IACjBD,SAAS,CAAC,YAAY;MACpB,IAAIQ,KAAK,CAACC,KAAK,EAAE;QACfF,IAAI,CAAC,cAAc,EAAEH,KAAK,CAACM,SAAS,EAAEF,KAAK,CAACC,KAAK,CAACE,WAAW,CAAC;MAChE;IACF,CAAC,CAAC;IACF,OAAO,YAAY;MACjB,OAAOf,YAAY,CAACM,gBAAgB,EAAE;QACpC,UAAU,EAAE,SAASU,QAAQA,CAACC,KAAK,EAAE;UACnC,IAAIF,WAAW,GAAGE,KAAK,CAACF,WAAW;UACnCJ,IAAI,CAAC,cAAc,EAAEH,KAAK,CAACM,SAAS,EAAEC,WAAW,CAAC;QACpD;MACF,CAAC,EAAE;QACDG,OAAO,EAAE,SAASC,QAAQA,CAAA,EAAG;UAC3B,OAAO,CAACnB,YAAY,CAAC,IAAI,EAAE;YACzB,KAAK,EAAEY,KAAK;YACZ,OAAO,EAAE;cACPQ,OAAO,EAAE,CAAC;cACVC,MAAM,EAAE,CAAC;cACTC,MAAM,EAAE;YACV;UACF,CAAC,EAAE,CAACtB,YAAY,CAAC,KAAK,EAAE;YACtB,OAAO,EAAE;cACPsB,MAAM,EAAE,CAAC;cACTC,QAAQ,EAAE;YACZ;UACF,CAAC,EAAE,CAACrB,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC;MACF,CAAC,CAAC;IACJ,CAAC;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}