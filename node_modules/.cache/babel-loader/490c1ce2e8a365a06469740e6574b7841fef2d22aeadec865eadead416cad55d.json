{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { useProvideKeysState, TreeContext } from './contextTypes';\nimport { getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, convertNodePropsToEventData, getTreeNodeProps, fillFieldNames } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nimport { computed, defineComponent, onUnmounted, reactive, ref, shallowRef, watch, watchEffect, nextTick, toRaw } from 'vue';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { treeProps } from './props';\nimport { warning } from '../vc-util/warning';\nimport KeyCode from '../_util/KeyCode';\nimport classNames from '../_util/classNames';\nimport pickAttrs from '../_util/pickAttrs';\nimport useMaxLevel from './useMaxLevel';\nvar MAX_RETRY_TIMES = 10;\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Tree',\n  inheritAttrs: false,\n  slots: ['checkable', 'title', 'icon', 'titleRender'],\n  props: initDefaultProps(treeProps(), {\n    prefixCls: 'vc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: [],\n    dropIndicatorRender: DropIndicator,\n    allowDrop: function allowDrop() {\n      return true;\n    }\n  }),\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      slots = _ref.slots,\n      expose = _ref.expose;\n    var destroyed = ref(false);\n    var delayedDragEnterLogic = {};\n    var indent = ref();\n    var selectedKeys = shallowRef([]);\n    var checkedKeys = shallowRef([]);\n    var halfCheckedKeys = shallowRef([]);\n    var loadedKeys = shallowRef([]);\n    var loadingKeys = shallowRef([]);\n    var expandedKeys = shallowRef([]);\n    var loadingRetryTimes = {};\n    var dragState = reactive({\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null\n    });\n    var treeData = shallowRef([]);\n    watch([function () {\n      return props.treeData;\n    }, function () {\n      return props.children;\n    }], function () {\n      treeData.value = props.treeData !== undefined ? toRaw(props.treeData).slice() : convertTreeToData(toRaw(props.children));\n    }, {\n      immediate: true,\n      deep: true\n    });\n    var keyEntities = shallowRef({});\n    var focused = ref(false);\n    var activeKey = ref(null);\n    var listChanging = ref(false);\n    var fieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames);\n    });\n    var listRef = ref();\n    var dragStartMousePosition = null;\n    var dragNode = null;\n    var currentMouseOverDroppableNodeKey = null;\n    var treeNodeRequiredProps = computed(function () {\n      return {\n        expandedKeysSet: expandedKeysSet.value,\n        selectedKeysSet: selectedKeysSet.value,\n        loadedKeysSet: loadedKeysSet.value,\n        loadingKeysSet: loadingKeysSet.value,\n        checkedKeysSet: checkedKeysSet.value,\n        halfCheckedKeysSet: halfCheckedKeysSet.value,\n        dragOverNodeKey: dragState.dragOverNodeKey,\n        dropPosition: dragState.dropPosition,\n        keyEntities: keyEntities.value\n      };\n    });\n    var expandedKeysSet = computed(function () {\n      return new Set(expandedKeys.value);\n    });\n    var selectedKeysSet = computed(function () {\n      return new Set(selectedKeys.value);\n    });\n    var loadedKeysSet = computed(function () {\n      return new Set(loadedKeys.value);\n    });\n    var loadingKeysSet = computed(function () {\n      return new Set(loadingKeys.value);\n    });\n    var checkedKeysSet = computed(function () {\n      return new Set(checkedKeys.value);\n    });\n    var halfCheckedKeysSet = computed(function () {\n      return new Set(halfCheckedKeys.value);\n    });\n    watchEffect(function () {\n      if (treeData.value) {\n        var entitiesMap = convertDataToEntities(treeData.value, {\n          fieldNames: fieldNames.value\n        });\n        keyEntities.value = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities);\n      }\n    });\n    var init = false; // 处理 defaultXxxx api, 仅仅首次有效\n    watch([function () {\n      return props.expandedKeys;\n    }, function () {\n      return props.autoExpandParent;\n    }, keyEntities],\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function (_ref2, _ref3) {\n      var _ref4 = _slicedToArray(_ref2, 2),\n        _newKeys = _ref4[0],\n        newAutoExpandParent = _ref4[1];\n      var _ref5 = _slicedToArray(_ref3, 2),\n        _oldKeys = _ref5[0],\n        oldAutoExpandParent = _ref5[1];\n      var keys = expandedKeys.value;\n      // ================ expandedKeys =================\n      if (props.expandedKeys !== undefined || init && newAutoExpandParent !== oldAutoExpandParent) {\n        keys = props.autoExpandParent || !init && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities.value) : props.expandedKeys;\n      } else if (!init && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities.value);\n        delete cloneKeyEntities[MOTION_KEY];\n        keys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!init && props.defaultExpandedKeys) {\n        keys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities.value) : props.defaultExpandedKeys;\n      }\n      if (keys) {\n        expandedKeys.value = keys;\n      }\n      init = true;\n    }, {\n      immediate: true\n    });\n    // ================ flattenNodes =================\n    var flattenNodes = shallowRef([]);\n    watchEffect(function () {\n      flattenNodes.value = flattenTreeData(treeData.value, expandedKeys.value, fieldNames.value);\n    });\n    // ================ selectedKeys =================\n    watchEffect(function () {\n      if (props.selectable) {\n        if (props.selectedKeys !== undefined) {\n          selectedKeys.value = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!init && props.defaultSelectedKeys) {\n          selectedKeys.value = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n    });\n    var _useMaxLevel = useMaxLevel(keyEntities),\n      maxLevel = _useMaxLevel.maxLevel,\n      levelEntities = _useMaxLevel.levelEntities;\n    // ================= checkedKeys =================\n    watchEffect(function () {\n      if (props.checkable) {\n        var checkedKeyEntity;\n        if (props.checkedKeys !== undefined) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!init && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData.value) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: checkedKeys.value,\n            halfCheckedKeys: halfCheckedKeys.value\n          };\n        }\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n            _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n            newCheckedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n            _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n            newHalfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(newCheckedKeys, true, keyEntities.value, maxLevel.value, levelEntities.value);\n            newCheckedKeys = conductKeys.checkedKeys;\n            newHalfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n          checkedKeys.value = newCheckedKeys;\n          halfCheckedKeys.value = newHalfCheckedKeys;\n        }\n      }\n    });\n    // ================= loadedKeys ==================\n    watchEffect(function () {\n      if (props.loadedKeys) {\n        loadedKeys.value = props.loadedKeys;\n      }\n    });\n    var resetDragState = function resetDragState() {\n      _extends(dragState, {\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    };\n    var scrollTo = function scrollTo(scroll) {\n      listRef.value.scrollTo(scroll);\n    };\n    watch(function () {\n      return props.activeKey;\n    }, function () {\n      if (props.activeKey !== undefined) {\n        activeKey.value = props.activeKey;\n      }\n    }, {\n      immediate: true\n    });\n    watch(activeKey, function (val) {\n      nextTick(function () {\n        if (val !== null) {\n          scrollTo({\n            key: val\n          });\n        }\n      });\n    }, {\n      immediate: true,\n      flush: 'post'\n    });\n    // =========================== Expanded ===========================\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n    var setExpandedKeys = function setExpandedKeys(keys) {\n      if (props.expandedKeys === undefined) {\n        expandedKeys.value = keys;\n      }\n    };\n    var cleanDragState = function cleanDragState() {\n      if (dragState.draggingNodeKey !== null) {\n        _extends(dragState, {\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n      dragStartMousePosition = null;\n      currentMouseOverDroppableNodeKey = null;\n    };\n    // if onNodeDragEnd is called, onWindowDragEnd won't be called since stopPropagation() is called\n    var onNodeDragEnd = function onNodeDragEnd(event, node) {\n      var onDragend = props.onDragend;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      onDragend === null || onDragend === void 0 ? void 0 : onDragend({\n        event: event,\n        node: node.eventData\n      });\n      dragNode = null;\n    };\n    // since stopPropagation() is called in treeNode\n    // if onWindowDrag is called, whice means state is keeped, drag state should be cleared\n    var onWindowDragEnd = function onWindowDragEnd(event) {\n      onNodeDragEnd(event, null, true);\n      window.removeEventListener('dragend', onWindowDragEnd);\n    };\n    var onNodeDragStart = function onNodeDragStart(event, node) {\n      var onDragstart = props.onDragstart;\n      var eventKey = node.eventKey,\n        eventData = node.eventData;\n      dragNode = node;\n      dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys.value, eventKey);\n      dragState.draggingNodeKey = eventKey;\n      dragState.dragChildrenKeys = getDragChildrenKeys(eventKey, keyEntities.value);\n      indent.value = listRef.value.getIndentWidth();\n      setExpandedKeys(newExpandedKeys);\n      window.addEventListener('dragend', onWindowDragEnd);\n      if (onDragstart) {\n        onDragstart({\n          event: event,\n          node: eventData\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is smaller than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    var onNodeDragEnter = function onNodeDragEnter(event, node) {\n      var onDragenter = props.onDragenter,\n        onExpand = props.onExpand,\n        allowDrop = props.allowDrop,\n        direction = props.direction;\n      var pos = node.pos,\n        eventKey = node.eventKey;\n      // record the key of node which is latest entered, used in dragleave event.\n      if (currentMouseOverDroppableNodeKey !== eventKey) {\n        currentMouseOverDroppableNodeKey = eventKey;\n      }\n      if (!dragNode) {\n        resetDragState();\n        return;\n      }\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction),\n        dropPosition = _calcDropPosition.dropPosition,\n        dropLevelOffset = _calcDropPosition.dropLevelOffset,\n        dropTargetKey = _calcDropPosition.dropTargetKey,\n        dropContainerKey = _calcDropPosition.dropContainerKey,\n        dropTargetPos = _calcDropPosition.dropTargetPos,\n        dropAllowed = _calcDropPosition.dropAllowed,\n        dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n      if (\n      // don't allow drop inside its children\n      dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 ||\n      // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        resetDragState();\n        return;\n      }\n      // Side effect for delay drag\n      if (!delayedDragEnterLogic) {\n        delayedDragEnterLogic = {};\n      }\n      Object.keys(delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(delayedDragEnterLogic[key]);\n      });\n      if (dragNode.eventKey !== node.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (dragState.draggingNodeKey === null) return;\n          var newExpandedKeys = expandedKeys.value.slice();\n          var entity = keyEntities.value[node.eventKey];\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys.value, node.eventKey);\n          }\n          setExpandedKeys(newExpandedKeys);\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: node.eventData,\n              expanded: true,\n              nativeEvent: event\n            });\n          }\n        }, 800);\n      }\n      // Skip if drag node is self\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        resetDragState();\n        return;\n      }\n      // Update drag over node and drag state\n      _extends(dragState, {\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n      if (onDragenter) {\n        onDragenter({\n          event: event,\n          node: node.eventData,\n          expandedKeys: expandedKeys.value\n        });\n      }\n    };\n    var onNodeDragOver = function onNodeDragOver(event, node) {\n      var onDragover = props.onDragover,\n        allowDrop = props.allowDrop,\n        direction = props.direction;\n      if (!dragNode) {\n        return;\n      }\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction),\n        dropPosition = _calcDropPosition2.dropPosition,\n        dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n        dropTargetKey = _calcDropPosition2.dropTargetKey,\n        dropContainerKey = _calcDropPosition2.dropContainerKey,\n        dropAllowed = _calcDropPosition2.dropAllowed,\n        dropTargetPos = _calcDropPosition2.dropTargetPos,\n        dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n      if (dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      }\n      // Update drag position\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(dragState.dropPosition === null && dragState.dropLevelOffset === null && dragState.dropTargetKey === null && dragState.dropContainerKey === null && dragState.dropTargetPos === null && dragState.dropAllowed === false && dragState.dragOverNodeKey === null)) {\n          resetDragState();\n        }\n      } else if (!(dropPosition === dragState.dropPosition && dropLevelOffset === dragState.dropLevelOffset && dropTargetKey === dragState.dropTargetKey && dropContainerKey === dragState.dropContainerKey && dropTargetPos === dragState.dropTargetPos && dropAllowed === dragState.dropAllowed && dragOverNodeKey === dragState.dragOverNodeKey)) {\n        _extends(dragState, {\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n      if (onDragover) {\n        onDragover({\n          event: event,\n          node: node.eventData\n        });\n      }\n    };\n    var onNodeDragLeave = function onNodeDragLeave(event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (currentMouseOverDroppableNodeKey === node.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        resetDragState();\n        currentMouseOverDroppableNodeKey = null;\n      }\n      var onDragleave = props.onDragleave;\n      if (onDragleave) {\n        onDragleave({\n          event: event,\n          node: node.eventData\n        });\n      }\n    };\n    var onNodeDrop = function onNodeDrop(event, _node) {\n      var _activeItem$value;\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var dragChildrenKeys = dragState.dragChildrenKeys,\n        dropPosition = dragState.dropPosition,\n        dropTargetKey = dragState.dropTargetKey,\n        dropTargetPos = dragState.dropTargetPos,\n        dropAllowed = dragState.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = props.onDrop;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      if (dropTargetKey === null) return;\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, toRaw(treeNodeRequiredProps.value))), {}, {\n        active: ((_activeItem$value = activeItem.value) === null || _activeItem$value === void 0 ? void 0 : _activeItem$value.key) === dropTargetKey,\n        data: keyEntities.value[dropTargetKey].node\n      });\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. Maybe this is a bug of ant-design-vue. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: dragNode ? dragNode.eventData : null,\n        dragNodesKeys: [dragNode.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n      if (!outsideTree) {\n        onDrop === null || onDrop === void 0 ? void 0 : onDrop(dropResult);\n      }\n      dragNode = null;\n    };\n    var onNodeClick = function onNodeClick(e, treeNode) {\n      var onClick = props.onClick;\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n    var onNodeDoubleClick = function onNodeDoubleClick(e, treeNode) {\n      var onDblclick = props.onDblclick;\n      if (onDblclick) {\n        onDblclick(e, treeNode);\n      }\n    };\n    var onNodeSelect = function onNodeSelect(e, treeNode) {\n      var newSelectedKeys = selectedKeys.value;\n      var onSelect = props.onSelect,\n        multiple = props.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.value.key];\n      var targetSelected = !selected;\n      // Update selected keys\n      if (!targetSelected) {\n        newSelectedKeys = arrDel(newSelectedKeys, key);\n      } else if (!multiple) {\n        newSelectedKeys = [key];\n      } else {\n        newSelectedKeys = arrAdd(newSelectedKeys, key);\n      }\n      // [Legacy] Not found related usage in doc or upper libs\n      var keyEntitiesValue = keyEntities.value;\n      var selectedNodes = newSelectedKeys.map(function (selectedKey) {\n        var entity = keyEntitiesValue[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      if (props.selectedKeys === undefined) {\n        selectedKeys.value = newSelectedKeys;\n      }\n      if (onSelect) {\n        onSelect(newSelectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e\n        });\n      }\n    };\n    var onNodeCheck = function onNodeCheck(e, treeNode, checked) {\n      var checkStrictly = props.checkStrictly,\n        onCheck = props.onCheck;\n      var key = treeNode[fieldNames.value.key];\n      // Prepare trigger arguments\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n      var keyEntitiesValue = keyEntities.value;\n      if (checkStrictly) {\n        var newCheckedKeys = checked ? arrAdd(checkedKeys.value, key) : arrDel(checkedKeys.value, key);\n        var newHalfCheckedKeys = arrDel(halfCheckedKeys.value, key);\n        checkedObj = {\n          checked: newCheckedKeys,\n          halfChecked: newHalfCheckedKeys\n        };\n        eventObj.checkedNodes = newCheckedKeys.map(function (checkedKey) {\n          return keyEntitiesValue[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = newCheckedKeys;\n        }\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(checkedKeys.value), [key]), true, keyEntitiesValue, maxLevel.value, levelEntities.value),\n          _newCheckedKeys = _conductCheck.checkedKeys,\n          _newHalfCheckedKeys = _conductCheck.halfCheckedKeys;\n        // If remove, we do it again to correction\n        if (!checked) {\n          var keySet = new Set(_newCheckedKeys);\n          keySet.delete(key);\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _newHalfCheckedKeys\n          }, keyEntitiesValue, maxLevel.value, levelEntities.value);\n          _newCheckedKeys = _conductCheck2.checkedKeys;\n          _newHalfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n        checkedObj = _newCheckedKeys;\n        // [Legacy] This is used for vc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _newHalfCheckedKeys;\n        _newCheckedKeys.forEach(function (checkedKey) {\n          var entity = keyEntitiesValue[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n            pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = _newCheckedKeys;\n          halfCheckedKeys.value = _newHalfCheckedKeys;\n        }\n      }\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n    var onNodeLoad = function onNodeLoad(treeNode) {\n      var key = treeNode[fieldNames.value.key];\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        var loadData = props.loadData,\n          onLoad = props.onLoad;\n        if (!loadData || loadedKeysSet.value.has(key) || loadingKeysSet.value.has(key)) {\n          return null;\n        }\n        // Process load data\n        var promise = loadData(treeNode);\n        promise.then(function () {\n          var newLoadedKeys = arrAdd(loadedKeys.value, key);\n          var newLoadingKeys = arrDel(loadingKeys.value, key);\n          // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n          // https://github.com/ant-design/ant-design/issues/12464\n          if (onLoad) {\n            onLoad(newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n          }\n          if (props.loadedKeys === undefined) {\n            loadedKeys.value = newLoadedKeys;\n          }\n          loadingKeys.value = newLoadingKeys;\n          resolve();\n        }).catch(function (e) {\n          var newLoadingKeys = arrDel(loadingKeys.value, key);\n          loadingKeys.value = newLoadingKeys;\n          // If exceed max retry times, we give up retry\n          loadingRetryTimes[key] = (loadingRetryTimes[key] || 0) + 1;\n          if (loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n            warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n            var newLoadedKeys = arrAdd(loadedKeys.value, key);\n            if (props.loadedKeys === undefined) {\n              loadedKeys.value = newLoadedKeys;\n            }\n            resolve();\n          }\n          reject(e);\n        });\n        loadingKeys.value = arrAdd(loadingKeys.value, key);\n      });\n      // Not care warning if we ignore this\n      loadPromise.catch(function () {});\n      return loadPromise;\n    };\n    var onNodeMouseEnter = function onNodeMouseEnter(event, node) {\n      var onMouseenter = props.onMouseenter;\n      if (onMouseenter) {\n        onMouseenter({\n          event: event,\n          node: node\n        });\n      }\n    };\n    var onNodeMouseLeave = function onNodeMouseLeave(event, node) {\n      var onMouseleave = props.onMouseleave;\n      if (onMouseleave) {\n        onMouseleave({\n          event: event,\n          node: node\n        });\n      }\n    };\n    var onNodeContextMenu = function onNodeContextMenu(event, node) {\n      var onRightClick = props.onRightClick;\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n    var onFocus = function onFocus(e) {\n      var onFocus = props.onFocus;\n      focused.value = true;\n      if (onFocus) {\n        onFocus(e);\n      }\n    };\n    var onBlur = function onBlur(e) {\n      var onBlur = props.onBlur;\n      focused.value = false;\n      onActiveChange(null);\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n    var onNodeExpand = function onNodeExpand(e, treeNode) {\n      var newExpandedKeys = expandedKeys.value;\n      var onExpand = props.onExpand,\n        loadData = props.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.value.key];\n      // Do nothing when motion is in progress\n      if (listChanging.value) {\n        return;\n      }\n      // Update selected keys\n      var index = newExpandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        newExpandedKeys = arrAdd(newExpandedKeys, key);\n      } else {\n        newExpandedKeys = arrDel(newExpandedKeys, key);\n      }\n      setExpandedKeys(newExpandedKeys);\n      if (onExpand) {\n        onExpand(newExpandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e\n        });\n      }\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = onNodeLoad(treeNode);\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            // const newFlattenTreeData = flattenTreeData(\n            //   treeData.value,\n            //   newExpandedKeys,\n            //   fieldNames.value,\n            // );\n            // flattenNodes.value = newFlattenTreeData;\n          }).catch(function (e) {\n            var expandedKeysToRestore = arrDel(expandedKeys.value, key);\n            setExpandedKeys(expandedKeysToRestore);\n            Promise.reject(e);\n          });\n        }\n      }\n    };\n    var onListChangeStart = function onListChangeStart() {\n      listChanging.value = true;\n    };\n    var onListChangeEnd = function onListChangeEnd() {\n      setTimeout(function () {\n        listChanging.value = false;\n      });\n    };\n    // =========================== Keyboard ===========================\n    var onActiveChange = function onActiveChange(newActiveKey) {\n      var onActiveChange = props.onActiveChange;\n      if (activeKey.value === newActiveKey) {\n        return;\n      }\n      if (props.activeKey !== undefined) {\n        activeKey.value = newActiveKey;\n      }\n      if (newActiveKey !== null) {\n        scrollTo({\n          key: newActiveKey\n        });\n      }\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n    var activeItem = computed(function () {\n      if (activeKey.value === null) {\n        return null;\n      }\n      return flattenNodes.value.find(function (_ref6) {\n        var key = _ref6.key;\n        return key === activeKey.value;\n      }) || null;\n    });\n    var offsetActiveKey = function offsetActiveKey(offset) {\n      var index = flattenNodes.value.findIndex(function (_ref7) {\n        var key = _ref7.key;\n        return key === activeKey.value;\n      });\n      // Align with index\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.value.length;\n      }\n      index = (index + offset + flattenNodes.value.length) % flattenNodes.value.length;\n      var item = flattenNodes.value[index];\n      if (item) {\n        var key = item.key;\n        onActiveChange(key);\n      } else {\n        onActiveChange(null);\n      }\n    };\n    var activeItemEventNode = computed(function () {\n      return convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey.value, treeNodeRequiredProps.value)), {}, {\n        data: activeItem.value.data,\n        active: true\n      }));\n    });\n    var onKeydown = function onKeydown(event) {\n      var onKeydown = props.onKeydown,\n        checkable = props.checkable,\n        selectable = props.selectable;\n      // >>>>>>>>>> Direction\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            offsetActiveKey(-1);\n            event.preventDefault();\n            break;\n          }\n        case KeyCode.DOWN:\n          {\n            offsetActiveKey(1);\n            event.preventDefault();\n            break;\n          }\n      }\n      // >>>>>>>>>> Expand & Selection\n      var item = activeItem.value;\n      if (item && item.data) {\n        var expandable = item.data.isLeaf === false || !!(item.data.children || []).length;\n        var eventNode = activeItemEventNode.value;\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.parent) {\n                onActiveChange(item.parent.key);\n              }\n              event.preventDefault();\n              break;\n            }\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.children && item.children.length) {\n                onActiveChange(item.children[0].key);\n              }\n              event.preventDefault();\n              break;\n            }\n          // Selection\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                onNodeCheck({}, eventNode, !checkedKeysSet.value.has(activeKey.value));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                onNodeSelect({}, eventNode);\n              }\n              break;\n            }\n        }\n      }\n      if (onKeydown) {\n        onKeydown(event);\n      }\n    };\n    expose({\n      onNodeExpand: onNodeExpand,\n      scrollTo: scrollTo,\n      onKeydown: onKeydown,\n      selectedKeys: computed(function () {\n        return selectedKeys.value;\n      }),\n      checkedKeys: computed(function () {\n        return checkedKeys.value;\n      }),\n      halfCheckedKeys: computed(function () {\n        return halfCheckedKeys.value;\n      }),\n      loadedKeys: computed(function () {\n        return loadedKeys.value;\n      }),\n      loadingKeys: computed(function () {\n        return loadingKeys.value;\n      }),\n      expandedKeys: computed(function () {\n        return expandedKeys.value;\n      })\n    });\n    onUnmounted(function () {\n      window.removeEventListener('dragend', onWindowDragEnd);\n      destroyed.value = true;\n    });\n    useProvideKeysState({\n      expandedKeys: expandedKeys,\n      selectedKeys: selectedKeys,\n      loadedKeys: loadedKeys,\n      loadingKeys: loadingKeys,\n      checkedKeys: checkedKeys,\n      halfCheckedKeys: halfCheckedKeys,\n      expandedKeysSet: expandedKeysSet,\n      selectedKeysSet: selectedKeysSet,\n      loadedKeysSet: loadedKeysSet,\n      loadingKeysSet: loadingKeysSet,\n      checkedKeysSet: checkedKeysSet,\n      halfCheckedKeysSet: halfCheckedKeysSet,\n      flattenNodes: flattenNodes\n    });\n    return function () {\n      var _classNames;\n      var draggingNodeKey = dragState.draggingNodeKey,\n        dropLevelOffset = dragState.dropLevelOffset,\n        dropContainerKey = dragState.dropContainerKey,\n        dropTargetKey = dragState.dropTargetKey,\n        dropPosition = dragState.dropPosition,\n        dragOverNodeKey = dragState.dragOverNodeKey;\n      var prefixCls = props.prefixCls,\n        showLine = props.showLine,\n        focusable = props.focusable,\n        _props$tabindex = props.tabindex,\n        tabindex = _props$tabindex === void 0 ? 0 : _props$tabindex,\n        selectable = props.selectable,\n        showIcon = props.showIcon,\n        _props$icon = props.icon,\n        icon = _props$icon === void 0 ? slots.icon : _props$icon,\n        switcherIcon = props.switcherIcon,\n        draggable = props.draggable,\n        checkable = props.checkable,\n        checkStrictly = props.checkStrictly,\n        disabled = props.disabled,\n        motion = props.motion,\n        loadData = props.loadData,\n        filterTreeNode = props.filterTreeNode,\n        height = props.height,\n        itemHeight = props.itemHeight,\n        virtual = props.virtual,\n        dropIndicatorRender = props.dropIndicatorRender,\n        onContextmenu = props.onContextmenu,\n        onScroll = props.onScroll,\n        direction = props.direction;\n      var className = attrs.class,\n        style = attrs.style;\n      var domProps = pickAttrs(_objectSpread(_objectSpread({}, props), attrs), {\n        aria: true,\n        data: true\n      });\n      // It's better move to hooks but we just simply keep here\n      var draggableConfig;\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      }\n      return _createVNode(TreeContext, {\n        \"value\": {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          customCheckable: slots.checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities.value,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          dragging: draggingNodeKey !== null,\n          indent: indent.value,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          onNodeClick: onNodeClick,\n          onNodeDoubleClick: onNodeDoubleClick,\n          onNodeExpand: onNodeExpand,\n          onNodeSelect: onNodeSelect,\n          onNodeCheck: onNodeCheck,\n          onNodeLoad: onNodeLoad,\n          onNodeMouseEnter: onNodeMouseEnter,\n          onNodeMouseLeave: onNodeMouseLeave,\n          onNodeContextMenu: onNodeContextMenu,\n          onNodeDragStart: onNodeDragStart,\n          onNodeDragEnter: onNodeDragEnter,\n          onNodeDragOver: onNodeDragOver,\n          onNodeDragLeave: onNodeDragLeave,\n          onNodeDragEnd: onNodeDragEnd,\n          onNodeDrop: onNodeDrop,\n          slots: slots\n        }\n      }, {\n        default: function _default() {\n          return [_createVNode(\"div\", {\n            \"role\": \"tree\",\n            \"class\": classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused.value), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey.value !== null), _classNames))\n          }, [_createVNode(NodeList, _objectSpread({\n            \"ref\": listRef,\n            \"prefixCls\": prefixCls,\n            \"style\": style,\n            \"disabled\": disabled,\n            \"selectable\": selectable,\n            \"checkable\": !!checkable,\n            \"motion\": motion,\n            \"height\": height,\n            \"itemHeight\": itemHeight,\n            \"virtual\": virtual,\n            \"focusable\": focusable,\n            \"focused\": focused.value,\n            \"tabindex\": tabindex,\n            \"activeItem\": activeItem.value,\n            \"onFocus\": onFocus,\n            \"onBlur\": onBlur,\n            \"onKeydown\": onKeydown,\n            \"onActiveChange\": onActiveChange,\n            \"onListChangeStart\": onListChangeStart,\n            \"onListChangeEnd\": onListChangeEnd,\n            \"onContextmenu\": onContextmenu,\n            \"onScroll\": onScroll\n          }, domProps), null)])];\n        }\n      });\n    };\n  }\n});","map":{"version":3,"names":["_typeof","_toConsumableArray","_extends","_slicedToArray","_defineProperty","_objectSpread","createVNode","_createVNode","useProvideKeysState","TreeContext","getDragChildrenKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","convertNodePropsToEventData","getTreeNodeProps","fillFieldNames","NodeList","MOTION_KEY","MotionEntity","conductCheck","DropIndicator","computed","defineComponent","onUnmounted","reactive","ref","shallowRef","watch","watchEffect","nextTick","toRaw","initDefaultProps","treeProps","warning","KeyCode","classNames","pickAttrs","useMaxLevel","MAX_RETRY_TIMES","compatConfig","MODE","name","inheritAttrs","slots","props","prefixCls","showLine","showIcon","selectable","multiple","checkable","disabled","checkStrictly","draggable","defaultExpandParent","autoExpandParent","defaultExpandAll","defaultExpandedKeys","defaultCheckedKeys","defaultSelectedKeys","dropIndicatorRender","allowDrop","setup","_ref","attrs","expose","destroyed","delayedDragEnterLogic","indent","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","loadingRetryTimes","dragState","draggingNodeKey","dragChildrenKeys","dropTargetKey","dropPosition","dropContainerKey","dropLevelOffset","dropTargetPos","dropAllowed","dragOverNodeKey","treeData","children","value","undefined","slice","immediate","deep","keyEntities","focused","activeKey","listChanging","fieldNames","listRef","dragStartMousePosition","dragNode","currentMouseOverDroppableNodeKey","treeNodeRequiredProps","expandedKeysSet","selectedKeysSet","loadedKeysSet","loadingKeysSet","checkedKeysSet","halfCheckedKeysSet","Set","entitiesMap","init","_ref2","_ref3","_ref4","_newKeys","newAutoExpandParent","_ref5","_oldKeys","oldAutoExpandParent","keys","cloneKeyEntities","Object","map","key","flattenNodes","_useMaxLevel","maxLevel","levelEntities","checkedKeyEntity","_checkedKeyEntity","_checkedKeyEntity$che","newCheckedKeys","_checkedKeyEntity$hal","newHalfCheckedKeys","conductKeys","resetDragState","scrollTo","scroll","val","flush","setExpandedKeys","cleanDragState","onNodeDragEnd","event","node","onDragend","eventData","onWindowDragEnd","window","removeEventListener","onNodeDragStart","onDragstart","eventKey","x","clientX","y","clientY","newExpandedKeys","getIndentWidth","addEventListener","onNodeDragEnter","onDragenter","onExpand","direction","pos","_calcDropPosition","indexOf","forEach","clearTimeout","setTimeout","entity","length","expanded","nativeEvent","onNodeDragOver","onDragover","_calcDropPosition2","onNodeDragLeave","currentTarget","contains","relatedTarget","onDragleave","onNodeDrop","_node","_activeItem$value","outsideTree","arguments","onDrop","abstractDropNodeProps","active","activeItem","data","dropToChild","posArr","dropResult","dragNodesKeys","concat","dropToGap","Number","onNodeClick","e","treeNode","onClick","onNodeDoubleClick","onDblclick","onNodeSelect","newSelectedKeys","onSelect","selected","targetSelected","keyEntitiesValue","selectedNodes","selectedKey","filter","onNodeCheck","checked","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","_newCheckedKeys","_newHalfCheckedKeys","keySet","delete","_conductCheck2","Array","from","checkedNodesPositions","push","onNodeLoad","loadPromise","Promise","resolve","reject","loadData","onLoad","has","promise","then","newLoadedKeys","newLoadingKeys","catch","onNodeMouseEnter","onMouseenter","onNodeMouseLeave","onMouseleave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","onNodeExpand","index","targetExpanded","expandedKeysToRestore","onListChangeStart","onListChangeEnd","newActiveKey","find","_ref6","offsetActiveKey","offset","findIndex","_ref7","item","activeItemEventNode","onKeydown","which","UP","DOWN","expandable","isLeaf","eventNode","LEFT","parent","RIGHT","ENTER","SPACE","disableCheckbox","_classNames","focusable","_props$tabindex","tabindex","_props$icon","icon","switcherIcon","motion","filterTreeNode","height","itemHeight","virtual","onContextmenu","onScroll","className","class","style","domProps","aria","draggableConfig","nodeDraggable","customCheckable","dragging","default","_default"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/vc-tree/Tree.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { useProvideKeysState, TreeContext } from './contextTypes';\nimport { getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, convertNodePropsToEventData, getTreeNodeProps, fillFieldNames } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nimport { computed, defineComponent, onUnmounted, reactive, ref, shallowRef, watch, watchEffect, nextTick, toRaw } from 'vue';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { treeProps } from './props';\nimport { warning } from '../vc-util/warning';\nimport KeyCode from '../_util/KeyCode';\nimport classNames from '../_util/classNames';\nimport pickAttrs from '../_util/pickAttrs';\nimport useMaxLevel from './useMaxLevel';\nvar MAX_RETRY_TIMES = 10;\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Tree',\n  inheritAttrs: false,\n  slots: ['checkable', 'title', 'icon', 'titleRender'],\n  props: initDefaultProps(treeProps(), {\n    prefixCls: 'vc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: [],\n    dropIndicatorRender: DropIndicator,\n    allowDrop: function allowDrop() {\n      return true;\n    }\n  }),\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      slots = _ref.slots,\n      expose = _ref.expose;\n    var destroyed = ref(false);\n    var delayedDragEnterLogic = {};\n    var indent = ref();\n    var selectedKeys = shallowRef([]);\n    var checkedKeys = shallowRef([]);\n    var halfCheckedKeys = shallowRef([]);\n    var loadedKeys = shallowRef([]);\n    var loadingKeys = shallowRef([]);\n    var expandedKeys = shallowRef([]);\n    var loadingRetryTimes = {};\n    var dragState = reactive({\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null\n    });\n    var treeData = shallowRef([]);\n    watch([function () {\n      return props.treeData;\n    }, function () {\n      return props.children;\n    }], function () {\n      treeData.value = props.treeData !== undefined ? toRaw(props.treeData).slice() : convertTreeToData(toRaw(props.children));\n    }, {\n      immediate: true,\n      deep: true\n    });\n    var keyEntities = shallowRef({});\n    var focused = ref(false);\n    var activeKey = ref(null);\n    var listChanging = ref(false);\n    var fieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames);\n    });\n    var listRef = ref();\n    var dragStartMousePosition = null;\n    var dragNode = null;\n    var currentMouseOverDroppableNodeKey = null;\n    var treeNodeRequiredProps = computed(function () {\n      return {\n        expandedKeysSet: expandedKeysSet.value,\n        selectedKeysSet: selectedKeysSet.value,\n        loadedKeysSet: loadedKeysSet.value,\n        loadingKeysSet: loadingKeysSet.value,\n        checkedKeysSet: checkedKeysSet.value,\n        halfCheckedKeysSet: halfCheckedKeysSet.value,\n        dragOverNodeKey: dragState.dragOverNodeKey,\n        dropPosition: dragState.dropPosition,\n        keyEntities: keyEntities.value\n      };\n    });\n    var expandedKeysSet = computed(function () {\n      return new Set(expandedKeys.value);\n    });\n    var selectedKeysSet = computed(function () {\n      return new Set(selectedKeys.value);\n    });\n    var loadedKeysSet = computed(function () {\n      return new Set(loadedKeys.value);\n    });\n    var loadingKeysSet = computed(function () {\n      return new Set(loadingKeys.value);\n    });\n    var checkedKeysSet = computed(function () {\n      return new Set(checkedKeys.value);\n    });\n    var halfCheckedKeysSet = computed(function () {\n      return new Set(halfCheckedKeys.value);\n    });\n    watchEffect(function () {\n      if (treeData.value) {\n        var entitiesMap = convertDataToEntities(treeData.value, {\n          fieldNames: fieldNames.value\n        });\n        keyEntities.value = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities);\n      }\n    });\n    var init = false; // 处理 defaultXxxx api, 仅仅首次有效\n    watch([function () {\n      return props.expandedKeys;\n    }, function () {\n      return props.autoExpandParent;\n    }, keyEntities],\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function (_ref2, _ref3) {\n      var _ref4 = _slicedToArray(_ref2, 2),\n        _newKeys = _ref4[0],\n        newAutoExpandParent = _ref4[1];\n      var _ref5 = _slicedToArray(_ref3, 2),\n        _oldKeys = _ref5[0],\n        oldAutoExpandParent = _ref5[1];\n      var keys = expandedKeys.value;\n      // ================ expandedKeys =================\n      if (props.expandedKeys !== undefined || init && newAutoExpandParent !== oldAutoExpandParent) {\n        keys = props.autoExpandParent || !init && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities.value) : props.expandedKeys;\n      } else if (!init && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities.value);\n        delete cloneKeyEntities[MOTION_KEY];\n        keys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!init && props.defaultExpandedKeys) {\n        keys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities.value) : props.defaultExpandedKeys;\n      }\n      if (keys) {\n        expandedKeys.value = keys;\n      }\n      init = true;\n    }, {\n      immediate: true\n    });\n    // ================ flattenNodes =================\n    var flattenNodes = shallowRef([]);\n    watchEffect(function () {\n      flattenNodes.value = flattenTreeData(treeData.value, expandedKeys.value, fieldNames.value);\n    });\n    // ================ selectedKeys =================\n    watchEffect(function () {\n      if (props.selectable) {\n        if (props.selectedKeys !== undefined) {\n          selectedKeys.value = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!init && props.defaultSelectedKeys) {\n          selectedKeys.value = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n    });\n    var _useMaxLevel = useMaxLevel(keyEntities),\n      maxLevel = _useMaxLevel.maxLevel,\n      levelEntities = _useMaxLevel.levelEntities;\n    // ================= checkedKeys =================\n    watchEffect(function () {\n      if (props.checkable) {\n        var checkedKeyEntity;\n        if (props.checkedKeys !== undefined) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!init && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData.value) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: checkedKeys.value,\n            halfCheckedKeys: halfCheckedKeys.value\n          };\n        }\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n            _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n            newCheckedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n            _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n            newHalfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(newCheckedKeys, true, keyEntities.value, maxLevel.value, levelEntities.value);\n            newCheckedKeys = conductKeys.checkedKeys;\n            newHalfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n          checkedKeys.value = newCheckedKeys;\n          halfCheckedKeys.value = newHalfCheckedKeys;\n        }\n      }\n    });\n    // ================= loadedKeys ==================\n    watchEffect(function () {\n      if (props.loadedKeys) {\n        loadedKeys.value = props.loadedKeys;\n      }\n    });\n    var resetDragState = function resetDragState() {\n      _extends(dragState, {\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    };\n    var scrollTo = function scrollTo(scroll) {\n      listRef.value.scrollTo(scroll);\n    };\n    watch(function () {\n      return props.activeKey;\n    }, function () {\n      if (props.activeKey !== undefined) {\n        activeKey.value = props.activeKey;\n      }\n    }, {\n      immediate: true\n    });\n    watch(activeKey, function (val) {\n      nextTick(function () {\n        if (val !== null) {\n          scrollTo({\n            key: val\n          });\n        }\n      });\n    }, {\n      immediate: true,\n      flush: 'post'\n    });\n    // =========================== Expanded ===========================\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n    var setExpandedKeys = function setExpandedKeys(keys) {\n      if (props.expandedKeys === undefined) {\n        expandedKeys.value = keys;\n      }\n    };\n    var cleanDragState = function cleanDragState() {\n      if (dragState.draggingNodeKey !== null) {\n        _extends(dragState, {\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n      dragStartMousePosition = null;\n      currentMouseOverDroppableNodeKey = null;\n    };\n    // if onNodeDragEnd is called, onWindowDragEnd won't be called since stopPropagation() is called\n    var onNodeDragEnd = function onNodeDragEnd(event, node) {\n      var onDragend = props.onDragend;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      onDragend === null || onDragend === void 0 ? void 0 : onDragend({\n        event: event,\n        node: node.eventData\n      });\n      dragNode = null;\n    };\n    // since stopPropagation() is called in treeNode\n    // if onWindowDrag is called, whice means state is keeped, drag state should be cleared\n    var onWindowDragEnd = function onWindowDragEnd(event) {\n      onNodeDragEnd(event, null, true);\n      window.removeEventListener('dragend', onWindowDragEnd);\n    };\n    var onNodeDragStart = function onNodeDragStart(event, node) {\n      var onDragstart = props.onDragstart;\n      var eventKey = node.eventKey,\n        eventData = node.eventData;\n      dragNode = node;\n      dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys.value, eventKey);\n      dragState.draggingNodeKey = eventKey;\n      dragState.dragChildrenKeys = getDragChildrenKeys(eventKey, keyEntities.value);\n      indent.value = listRef.value.getIndentWidth();\n      setExpandedKeys(newExpandedKeys);\n      window.addEventListener('dragend', onWindowDragEnd);\n      if (onDragstart) {\n        onDragstart({\n          event: event,\n          node: eventData\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is smaller than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    var onNodeDragEnter = function onNodeDragEnter(event, node) {\n      var onDragenter = props.onDragenter,\n        onExpand = props.onExpand,\n        allowDrop = props.allowDrop,\n        direction = props.direction;\n      var pos = node.pos,\n        eventKey = node.eventKey;\n      // record the key of node which is latest entered, used in dragleave event.\n      if (currentMouseOverDroppableNodeKey !== eventKey) {\n        currentMouseOverDroppableNodeKey = eventKey;\n      }\n      if (!dragNode) {\n        resetDragState();\n        return;\n      }\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction),\n        dropPosition = _calcDropPosition.dropPosition,\n        dropLevelOffset = _calcDropPosition.dropLevelOffset,\n        dropTargetKey = _calcDropPosition.dropTargetKey,\n        dropContainerKey = _calcDropPosition.dropContainerKey,\n        dropTargetPos = _calcDropPosition.dropTargetPos,\n        dropAllowed = _calcDropPosition.dropAllowed,\n        dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n      if (\n      // don't allow drop inside its children\n      dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 ||\n      // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        resetDragState();\n        return;\n      }\n      // Side effect for delay drag\n      if (!delayedDragEnterLogic) {\n        delayedDragEnterLogic = {};\n      }\n      Object.keys(delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(delayedDragEnterLogic[key]);\n      });\n      if (dragNode.eventKey !== node.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (dragState.draggingNodeKey === null) return;\n          var newExpandedKeys = expandedKeys.value.slice();\n          var entity = keyEntities.value[node.eventKey];\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys.value, node.eventKey);\n          }\n          setExpandedKeys(newExpandedKeys);\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: node.eventData,\n              expanded: true,\n              nativeEvent: event\n            });\n          }\n        }, 800);\n      }\n      // Skip if drag node is self\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        resetDragState();\n        return;\n      }\n      // Update drag over node and drag state\n      _extends(dragState, {\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n      if (onDragenter) {\n        onDragenter({\n          event: event,\n          node: node.eventData,\n          expandedKeys: expandedKeys.value\n        });\n      }\n    };\n    var onNodeDragOver = function onNodeDragOver(event, node) {\n      var onDragover = props.onDragover,\n        allowDrop = props.allowDrop,\n        direction = props.direction;\n      if (!dragNode) {\n        return;\n      }\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction),\n        dropPosition = _calcDropPosition2.dropPosition,\n        dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n        dropTargetKey = _calcDropPosition2.dropTargetKey,\n        dropContainerKey = _calcDropPosition2.dropContainerKey,\n        dropAllowed = _calcDropPosition2.dropAllowed,\n        dropTargetPos = _calcDropPosition2.dropTargetPos,\n        dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n      if (dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      }\n      // Update drag position\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(dragState.dropPosition === null && dragState.dropLevelOffset === null && dragState.dropTargetKey === null && dragState.dropContainerKey === null && dragState.dropTargetPos === null && dragState.dropAllowed === false && dragState.dragOverNodeKey === null)) {\n          resetDragState();\n        }\n      } else if (!(dropPosition === dragState.dropPosition && dropLevelOffset === dragState.dropLevelOffset && dropTargetKey === dragState.dropTargetKey && dropContainerKey === dragState.dropContainerKey && dropTargetPos === dragState.dropTargetPos && dropAllowed === dragState.dropAllowed && dragOverNodeKey === dragState.dragOverNodeKey)) {\n        _extends(dragState, {\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n      if (onDragover) {\n        onDragover({\n          event: event,\n          node: node.eventData\n        });\n      }\n    };\n    var onNodeDragLeave = function onNodeDragLeave(event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (currentMouseOverDroppableNodeKey === node.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        resetDragState();\n        currentMouseOverDroppableNodeKey = null;\n      }\n      var onDragleave = props.onDragleave;\n      if (onDragleave) {\n        onDragleave({\n          event: event,\n          node: node.eventData\n        });\n      }\n    };\n    var onNodeDrop = function onNodeDrop(event, _node) {\n      var _activeItem$value;\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var dragChildrenKeys = dragState.dragChildrenKeys,\n        dropPosition = dragState.dropPosition,\n        dropTargetKey = dragState.dropTargetKey,\n        dropTargetPos = dragState.dropTargetPos,\n        dropAllowed = dragState.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = props.onDrop;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      if (dropTargetKey === null) return;\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, toRaw(treeNodeRequiredProps.value))), {}, {\n        active: ((_activeItem$value = activeItem.value) === null || _activeItem$value === void 0 ? void 0 : _activeItem$value.key) === dropTargetKey,\n        data: keyEntities.value[dropTargetKey].node\n      });\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. Maybe this is a bug of ant-design-vue. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: dragNode ? dragNode.eventData : null,\n        dragNodesKeys: [dragNode.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n      if (!outsideTree) {\n        onDrop === null || onDrop === void 0 ? void 0 : onDrop(dropResult);\n      }\n      dragNode = null;\n    };\n    var onNodeClick = function onNodeClick(e, treeNode) {\n      var onClick = props.onClick;\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n    var onNodeDoubleClick = function onNodeDoubleClick(e, treeNode) {\n      var onDblclick = props.onDblclick;\n      if (onDblclick) {\n        onDblclick(e, treeNode);\n      }\n    };\n    var onNodeSelect = function onNodeSelect(e, treeNode) {\n      var newSelectedKeys = selectedKeys.value;\n      var onSelect = props.onSelect,\n        multiple = props.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.value.key];\n      var targetSelected = !selected;\n      // Update selected keys\n      if (!targetSelected) {\n        newSelectedKeys = arrDel(newSelectedKeys, key);\n      } else if (!multiple) {\n        newSelectedKeys = [key];\n      } else {\n        newSelectedKeys = arrAdd(newSelectedKeys, key);\n      }\n      // [Legacy] Not found related usage in doc or upper libs\n      var keyEntitiesValue = keyEntities.value;\n      var selectedNodes = newSelectedKeys.map(function (selectedKey) {\n        var entity = keyEntitiesValue[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      if (props.selectedKeys === undefined) {\n        selectedKeys.value = newSelectedKeys;\n      }\n      if (onSelect) {\n        onSelect(newSelectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e\n        });\n      }\n    };\n    var onNodeCheck = function onNodeCheck(e, treeNode, checked) {\n      var checkStrictly = props.checkStrictly,\n        onCheck = props.onCheck;\n      var key = treeNode[fieldNames.value.key];\n      // Prepare trigger arguments\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n      var keyEntitiesValue = keyEntities.value;\n      if (checkStrictly) {\n        var newCheckedKeys = checked ? arrAdd(checkedKeys.value, key) : arrDel(checkedKeys.value, key);\n        var newHalfCheckedKeys = arrDel(halfCheckedKeys.value, key);\n        checkedObj = {\n          checked: newCheckedKeys,\n          halfChecked: newHalfCheckedKeys\n        };\n        eventObj.checkedNodes = newCheckedKeys.map(function (checkedKey) {\n          return keyEntitiesValue[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = newCheckedKeys;\n        }\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(checkedKeys.value), [key]), true, keyEntitiesValue, maxLevel.value, levelEntities.value),\n          _newCheckedKeys = _conductCheck.checkedKeys,\n          _newHalfCheckedKeys = _conductCheck.halfCheckedKeys;\n        // If remove, we do it again to correction\n        if (!checked) {\n          var keySet = new Set(_newCheckedKeys);\n          keySet.delete(key);\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _newHalfCheckedKeys\n          }, keyEntitiesValue, maxLevel.value, levelEntities.value);\n          _newCheckedKeys = _conductCheck2.checkedKeys;\n          _newHalfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n        checkedObj = _newCheckedKeys;\n        // [Legacy] This is used for vc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _newHalfCheckedKeys;\n        _newCheckedKeys.forEach(function (checkedKey) {\n          var entity = keyEntitiesValue[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n            pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = _newCheckedKeys;\n          halfCheckedKeys.value = _newHalfCheckedKeys;\n        }\n      }\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n    var onNodeLoad = function onNodeLoad(treeNode) {\n      var key = treeNode[fieldNames.value.key];\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        var loadData = props.loadData,\n          onLoad = props.onLoad;\n        if (!loadData || loadedKeysSet.value.has(key) || loadingKeysSet.value.has(key)) {\n          return null;\n        }\n        // Process load data\n        var promise = loadData(treeNode);\n        promise.then(function () {\n          var newLoadedKeys = arrAdd(loadedKeys.value, key);\n          var newLoadingKeys = arrDel(loadingKeys.value, key);\n          // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n          // https://github.com/ant-design/ant-design/issues/12464\n          if (onLoad) {\n            onLoad(newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n          }\n          if (props.loadedKeys === undefined) {\n            loadedKeys.value = newLoadedKeys;\n          }\n          loadingKeys.value = newLoadingKeys;\n          resolve();\n        }).catch(function (e) {\n          var newLoadingKeys = arrDel(loadingKeys.value, key);\n          loadingKeys.value = newLoadingKeys;\n          // If exceed max retry times, we give up retry\n          loadingRetryTimes[key] = (loadingRetryTimes[key] || 0) + 1;\n          if (loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n            warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n            var newLoadedKeys = arrAdd(loadedKeys.value, key);\n            if (props.loadedKeys === undefined) {\n              loadedKeys.value = newLoadedKeys;\n            }\n            resolve();\n          }\n          reject(e);\n        });\n        loadingKeys.value = arrAdd(loadingKeys.value, key);\n      });\n      // Not care warning if we ignore this\n      loadPromise.catch(function () {});\n      return loadPromise;\n    };\n    var onNodeMouseEnter = function onNodeMouseEnter(event, node) {\n      var onMouseenter = props.onMouseenter;\n      if (onMouseenter) {\n        onMouseenter({\n          event: event,\n          node: node\n        });\n      }\n    };\n    var onNodeMouseLeave = function onNodeMouseLeave(event, node) {\n      var onMouseleave = props.onMouseleave;\n      if (onMouseleave) {\n        onMouseleave({\n          event: event,\n          node: node\n        });\n      }\n    };\n    var onNodeContextMenu = function onNodeContextMenu(event, node) {\n      var onRightClick = props.onRightClick;\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n    var onFocus = function onFocus(e) {\n      var onFocus = props.onFocus;\n      focused.value = true;\n      if (onFocus) {\n        onFocus(e);\n      }\n    };\n    var onBlur = function onBlur(e) {\n      var onBlur = props.onBlur;\n      focused.value = false;\n      onActiveChange(null);\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n    var onNodeExpand = function onNodeExpand(e, treeNode) {\n      var newExpandedKeys = expandedKeys.value;\n      var onExpand = props.onExpand,\n        loadData = props.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.value.key];\n      // Do nothing when motion is in progress\n      if (listChanging.value) {\n        return;\n      }\n      // Update selected keys\n      var index = newExpandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        newExpandedKeys = arrAdd(newExpandedKeys, key);\n      } else {\n        newExpandedKeys = arrDel(newExpandedKeys, key);\n      }\n      setExpandedKeys(newExpandedKeys);\n      if (onExpand) {\n        onExpand(newExpandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e\n        });\n      }\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = onNodeLoad(treeNode);\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            // const newFlattenTreeData = flattenTreeData(\n            //   treeData.value,\n            //   newExpandedKeys,\n            //   fieldNames.value,\n            // );\n            // flattenNodes.value = newFlattenTreeData;\n          }).catch(function (e) {\n            var expandedKeysToRestore = arrDel(expandedKeys.value, key);\n            setExpandedKeys(expandedKeysToRestore);\n            Promise.reject(e);\n          });\n        }\n      }\n    };\n    var onListChangeStart = function onListChangeStart() {\n      listChanging.value = true;\n    };\n    var onListChangeEnd = function onListChangeEnd() {\n      setTimeout(function () {\n        listChanging.value = false;\n      });\n    };\n    // =========================== Keyboard ===========================\n    var onActiveChange = function onActiveChange(newActiveKey) {\n      var onActiveChange = props.onActiveChange;\n      if (activeKey.value === newActiveKey) {\n        return;\n      }\n      if (props.activeKey !== undefined) {\n        activeKey.value = newActiveKey;\n      }\n      if (newActiveKey !== null) {\n        scrollTo({\n          key: newActiveKey\n        });\n      }\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n    var activeItem = computed(function () {\n      if (activeKey.value === null) {\n        return null;\n      }\n      return flattenNodes.value.find(function (_ref6) {\n        var key = _ref6.key;\n        return key === activeKey.value;\n      }) || null;\n    });\n    var offsetActiveKey = function offsetActiveKey(offset) {\n      var index = flattenNodes.value.findIndex(function (_ref7) {\n        var key = _ref7.key;\n        return key === activeKey.value;\n      });\n      // Align with index\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.value.length;\n      }\n      index = (index + offset + flattenNodes.value.length) % flattenNodes.value.length;\n      var item = flattenNodes.value[index];\n      if (item) {\n        var key = item.key;\n        onActiveChange(key);\n      } else {\n        onActiveChange(null);\n      }\n    };\n    var activeItemEventNode = computed(function () {\n      return convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey.value, treeNodeRequiredProps.value)), {}, {\n        data: activeItem.value.data,\n        active: true\n      }));\n    });\n    var onKeydown = function onKeydown(event) {\n      var onKeydown = props.onKeydown,\n        checkable = props.checkable,\n        selectable = props.selectable;\n      // >>>>>>>>>> Direction\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            offsetActiveKey(-1);\n            event.preventDefault();\n            break;\n          }\n        case KeyCode.DOWN:\n          {\n            offsetActiveKey(1);\n            event.preventDefault();\n            break;\n          }\n      }\n      // >>>>>>>>>> Expand & Selection\n      var item = activeItem.value;\n      if (item && item.data) {\n        var expandable = item.data.isLeaf === false || !!(item.data.children || []).length;\n        var eventNode = activeItemEventNode.value;\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.parent) {\n                onActiveChange(item.parent.key);\n              }\n              event.preventDefault();\n              break;\n            }\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.children && item.children.length) {\n                onActiveChange(item.children[0].key);\n              }\n              event.preventDefault();\n              break;\n            }\n          // Selection\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                onNodeCheck({}, eventNode, !checkedKeysSet.value.has(activeKey.value));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                onNodeSelect({}, eventNode);\n              }\n              break;\n            }\n        }\n      }\n      if (onKeydown) {\n        onKeydown(event);\n      }\n    };\n    expose({\n      onNodeExpand: onNodeExpand,\n      scrollTo: scrollTo,\n      onKeydown: onKeydown,\n      selectedKeys: computed(function () {\n        return selectedKeys.value;\n      }),\n      checkedKeys: computed(function () {\n        return checkedKeys.value;\n      }),\n      halfCheckedKeys: computed(function () {\n        return halfCheckedKeys.value;\n      }),\n      loadedKeys: computed(function () {\n        return loadedKeys.value;\n      }),\n      loadingKeys: computed(function () {\n        return loadingKeys.value;\n      }),\n      expandedKeys: computed(function () {\n        return expandedKeys.value;\n      })\n    });\n    onUnmounted(function () {\n      window.removeEventListener('dragend', onWindowDragEnd);\n      destroyed.value = true;\n    });\n    useProvideKeysState({\n      expandedKeys: expandedKeys,\n      selectedKeys: selectedKeys,\n      loadedKeys: loadedKeys,\n      loadingKeys: loadingKeys,\n      checkedKeys: checkedKeys,\n      halfCheckedKeys: halfCheckedKeys,\n      expandedKeysSet: expandedKeysSet,\n      selectedKeysSet: selectedKeysSet,\n      loadedKeysSet: loadedKeysSet,\n      loadingKeysSet: loadingKeysSet,\n      checkedKeysSet: checkedKeysSet,\n      halfCheckedKeysSet: halfCheckedKeysSet,\n      flattenNodes: flattenNodes\n    });\n    return function () {\n      var _classNames;\n      var draggingNodeKey = dragState.draggingNodeKey,\n        dropLevelOffset = dragState.dropLevelOffset,\n        dropContainerKey = dragState.dropContainerKey,\n        dropTargetKey = dragState.dropTargetKey,\n        dropPosition = dragState.dropPosition,\n        dragOverNodeKey = dragState.dragOverNodeKey;\n      var prefixCls = props.prefixCls,\n        showLine = props.showLine,\n        focusable = props.focusable,\n        _props$tabindex = props.tabindex,\n        tabindex = _props$tabindex === void 0 ? 0 : _props$tabindex,\n        selectable = props.selectable,\n        showIcon = props.showIcon,\n        _props$icon = props.icon,\n        icon = _props$icon === void 0 ? slots.icon : _props$icon,\n        switcherIcon = props.switcherIcon,\n        draggable = props.draggable,\n        checkable = props.checkable,\n        checkStrictly = props.checkStrictly,\n        disabled = props.disabled,\n        motion = props.motion,\n        loadData = props.loadData,\n        filterTreeNode = props.filterTreeNode,\n        height = props.height,\n        itemHeight = props.itemHeight,\n        virtual = props.virtual,\n        dropIndicatorRender = props.dropIndicatorRender,\n        onContextmenu = props.onContextmenu,\n        onScroll = props.onScroll,\n        direction = props.direction;\n      var className = attrs.class,\n        style = attrs.style;\n      var domProps = pickAttrs(_objectSpread(_objectSpread({}, props), attrs), {\n        aria: true,\n        data: true\n      });\n      // It's better move to hooks but we just simply keep here\n      var draggableConfig;\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      }\n      return _createVNode(TreeContext, {\n        \"value\": {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          customCheckable: slots.checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities.value,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          dragging: draggingNodeKey !== null,\n          indent: indent.value,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          onNodeClick: onNodeClick,\n          onNodeDoubleClick: onNodeDoubleClick,\n          onNodeExpand: onNodeExpand,\n          onNodeSelect: onNodeSelect,\n          onNodeCheck: onNodeCheck,\n          onNodeLoad: onNodeLoad,\n          onNodeMouseEnter: onNodeMouseEnter,\n          onNodeMouseLeave: onNodeMouseLeave,\n          onNodeContextMenu: onNodeContextMenu,\n          onNodeDragStart: onNodeDragStart,\n          onNodeDragEnter: onNodeDragEnter,\n          onNodeDragOver: onNodeDragOver,\n          onNodeDragLeave: onNodeDragLeave,\n          onNodeDragEnd: onNodeDragEnd,\n          onNodeDrop: onNodeDrop,\n          slots: slots\n        }\n      }, {\n        default: function _default() {\n          return [_createVNode(\"div\", {\n            \"role\": \"tree\",\n            \"class\": classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused.value), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey.value !== null), _classNames))\n          }, [_createVNode(NodeList, _objectSpread({\n            \"ref\": listRef,\n            \"prefixCls\": prefixCls,\n            \"style\": style,\n            \"disabled\": disabled,\n            \"selectable\": selectable,\n            \"checkable\": !!checkable,\n            \"motion\": motion,\n            \"height\": height,\n            \"itemHeight\": itemHeight,\n            \"virtual\": virtual,\n            \"focusable\": focusable,\n            \"focused\": focused.value,\n            \"tabindex\": tabindex,\n            \"activeItem\": activeItem.value,\n            \"onFocus\": onFocus,\n            \"onBlur\": onBlur,\n            \"onKeydown\": onKeydown,\n            \"onActiveChange\": onActiveChange,\n            \"onListChangeStart\": onListChangeStart,\n            \"onListChangeEnd\": onListChangeEnd,\n            \"onContextmenu\": onContextmenu,\n            \"onScroll\": onScroll\n          }, domProps), null)])];\n        }\n      });\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}