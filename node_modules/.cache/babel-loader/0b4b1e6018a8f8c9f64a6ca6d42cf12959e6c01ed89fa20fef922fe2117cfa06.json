{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport padEnd from 'lodash-es/padEnd';\nvar StatisticNumber = function StatisticNumber(props) {\n  var value = props.value,\n    formatter = props.formatter,\n    precision = props.precision,\n    decimalSeparator = props.decimalSeparator,\n    _props$groupSeparator = props.groupSeparator,\n    groupSeparator = _props$groupSeparator === void 0 ? '' : _props$groupSeparator,\n    prefixCls = props.prefixCls;\n  var valueNode;\n  if (typeof formatter === 'function') {\n    // Customize formatter\n    valueNode = formatter({\n      value: value\n    });\n  } else {\n    // Internal formatter\n    var val = String(value);\n    var cells = val.match(/^(-?)(\\d*)(\\.(\\d+))?$/);\n    // Process if illegal number\n    if (!cells) {\n      valueNode = val;\n    } else {\n      var negative = cells[1];\n      var int = cells[2] || '0';\n      var decimal = cells[4] || '';\n      int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n      if (typeof precision === 'number') {\n        decimal = padEnd(decimal, precision, '0').slice(0, precision);\n      }\n      if (decimal) {\n        decimal = \"\".concat(decimalSeparator).concat(decimal);\n      }\n      valueNode = [_createVNode(\"span\", {\n        \"key\": \"int\",\n        \"class\": \"\".concat(prefixCls, \"-content-value-int\")\n      }, [negative, int]), decimal && _createVNode(\"span\", {\n        \"key\": \"decimal\",\n        \"class\": \"\".concat(prefixCls, \"-content-value-decimal\")\n      }, [decimal])];\n    }\n  }\n  return _createVNode(\"span\", {\n    \"class\": \"\".concat(prefixCls, \"-content-value\")\n  }, [valueNode]);\n};\nStatisticNumber.displayName = 'StatisticNumber';\nexport default StatisticNumber;","map":{"version":3,"names":["createVNode","_createVNode","padEnd","StatisticNumber","props","value","formatter","precision","decimalSeparator","_props$groupSeparator","groupSeparator","prefixCls","valueNode","val","String","cells","match","negative","int","decimal","replace","slice","concat","displayName"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/statistic/Number.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport padEnd from 'lodash-es/padEnd';\nvar StatisticNumber = function StatisticNumber(props) {\n  var value = props.value,\n    formatter = props.formatter,\n    precision = props.precision,\n    decimalSeparator = props.decimalSeparator,\n    _props$groupSeparator = props.groupSeparator,\n    groupSeparator = _props$groupSeparator === void 0 ? '' : _props$groupSeparator,\n    prefixCls = props.prefixCls;\n  var valueNode;\n  if (typeof formatter === 'function') {\n    // Customize formatter\n    valueNode = formatter({\n      value: value\n    });\n  } else {\n    // Internal formatter\n    var val = String(value);\n    var cells = val.match(/^(-?)(\\d*)(\\.(\\d+))?$/);\n    // Process if illegal number\n    if (!cells) {\n      valueNode = val;\n    } else {\n      var negative = cells[1];\n      var int = cells[2] || '0';\n      var decimal = cells[4] || '';\n      int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n      if (typeof precision === 'number') {\n        decimal = padEnd(decimal, precision, '0').slice(0, precision);\n      }\n      if (decimal) {\n        decimal = \"\".concat(decimalSeparator).concat(decimal);\n      }\n      valueNode = [_createVNode(\"span\", {\n        \"key\": \"int\",\n        \"class\": \"\".concat(prefixCls, \"-content-value-int\")\n      }, [negative, int]), decimal && _createVNode(\"span\", {\n        \"key\": \"decimal\",\n        \"class\": \"\".concat(prefixCls, \"-content-value-decimal\")\n      }, [decimal])];\n    }\n  }\n  return _createVNode(\"span\", {\n    \"class\": \"\".concat(prefixCls, \"-content-value\")\n  }, [valueNode]);\n};\nStatisticNumber.displayName = 'StatisticNumber';\nexport default StatisticNumber;"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAACC,KAAK,EAAE;EACpD,IAAIC,KAAK,GAAGD,KAAK,CAACC,KAAK;IACrBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,SAAS,GAAGH,KAAK,CAACG,SAAS;IAC3BC,gBAAgB,GAAGJ,KAAK,CAACI,gBAAgB;IACzCC,qBAAqB,GAAGL,KAAK,CAACM,cAAc;IAC5CA,cAAc,GAAGD,qBAAqB,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,qBAAqB;IAC9EE,SAAS,GAAGP,KAAK,CAACO,SAAS;EAC7B,IAAIC,SAAS;EACb,IAAI,OAAON,SAAS,KAAK,UAAU,EAAE;IACnC;IACAM,SAAS,GAAGN,SAAS,CAAC;MACpBD,KAAK,EAAEA;IACT,CAAC,CAAC;EACJ,CAAC,MAAM;IACL;IACA,IAAIQ,GAAG,GAAGC,MAAM,CAACT,KAAK,CAAC;IACvB,IAAIU,KAAK,GAAGF,GAAG,CAACG,KAAK,CAAC,uBAAuB,CAAC;IAC9C;IACA,IAAI,CAACD,KAAK,EAAE;MACVH,SAAS,GAAGC,GAAG;IACjB,CAAC,MAAM;MACL,IAAII,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC;MACvB,IAAIG,GAAG,GAAGH,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG;MACzB,IAAII,OAAO,GAAGJ,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;MAC5BG,GAAG,GAAGA,GAAG,CAACE,OAAO,CAAC,uBAAuB,EAAEV,cAAc,CAAC;MAC1D,IAAI,OAAOH,SAAS,KAAK,QAAQ,EAAE;QACjCY,OAAO,GAAGjB,MAAM,CAACiB,OAAO,EAAEZ,SAAS,EAAE,GAAG,CAAC,CAACc,KAAK,CAAC,CAAC,EAAEd,SAAS,CAAC;MAC/D;MACA,IAAIY,OAAO,EAAE;QACXA,OAAO,GAAG,EAAE,CAACG,MAAM,CAACd,gBAAgB,CAAC,CAACc,MAAM,CAACH,OAAO,CAAC;MACvD;MACAP,SAAS,GAAG,CAACX,YAAY,CAAC,MAAM,EAAE;QAChC,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,EAAE,CAACqB,MAAM,CAACX,SAAS,EAAE,oBAAoB;MACpD,CAAC,EAAE,CAACM,QAAQ,EAAEC,GAAG,CAAC,CAAC,EAAEC,OAAO,IAAIlB,YAAY,CAAC,MAAM,EAAE;QACnD,KAAK,EAAE,SAAS;QAChB,OAAO,EAAE,EAAE,CAACqB,MAAM,CAACX,SAAS,EAAE,wBAAwB;MACxD,CAAC,EAAE,CAACQ,OAAO,CAAC,CAAC,CAAC;IAChB;EACF;EACA,OAAOlB,YAAY,CAAC,MAAM,EAAE;IAC1B,OAAO,EAAE,EAAE,CAACqB,MAAM,CAACX,SAAS,EAAE,gBAAgB;EAChD,CAAC,EAAE,CAACC,SAAS,CAAC,CAAC;AACjB,CAAC;AACDT,eAAe,CAACoB,WAAW,GAAG,iBAAiB;AAC/C,eAAepB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}