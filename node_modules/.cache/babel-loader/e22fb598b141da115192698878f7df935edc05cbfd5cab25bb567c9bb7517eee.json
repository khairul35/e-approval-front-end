{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { ref, onBeforeUnmount, onMounted } from 'vue';\nimport useState from '../../../_util/hooks/useState';\nvar MIN_SWIPE_DISTANCE = 0.1;\nvar STOP_SWIPE_DISTANCE = 0.01;\nvar REFRESH_INTERVAL = 20;\nvar SPEED_OFF_MULTIPLE = Math.pow(0.995, REFRESH_INTERVAL);\n// ================================= Hook =================================\nexport default function useTouchMove(domRef, onOffset) {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    touchPosition = _useState2[0],\n    setTouchPosition = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastTimestamp = _useState4[0],\n    setLastTimestamp = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastTimeDiff = _useState6[0],\n    setLastTimeDiff = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    lastOffset = _useState8[0],\n    setLastOffset = _useState8[1];\n  var motionInterval = ref();\n  // ========================= Events =========================\n  // >>> Touch events\n  function onTouchStart(e) {\n    var _e$touches$ = e.touches[0],\n      screenX = _e$touches$.screenX,\n      screenY = _e$touches$.screenY;\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    clearInterval(motionInterval.value);\n  }\n  function onTouchMove(e) {\n    if (!touchPosition.value) return;\n    e.preventDefault();\n    var _e$touches$2 = e.touches[0],\n      screenX = _e$touches$2.screenX,\n      screenY = _e$touches$2.screenY;\n    var offsetX = screenX - touchPosition.value.x;\n    var offsetY = screenY - touchPosition.value.y;\n    onOffset(offsetX, offsetY);\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    var now = Date.now();\n    setLastTimeDiff(now - lastTimestamp.value);\n    setLastTimestamp(now);\n    setLastOffset({\n      x: offsetX,\n      y: offsetY\n    });\n  }\n  function onTouchEnd() {\n    if (!touchPosition.value) return;\n    var lastOffsetValue = lastOffset.value;\n    setTouchPosition(null);\n    setLastOffset(null);\n    // Swipe if needed\n    if (lastOffsetValue) {\n      var distanceX = lastOffsetValue.x / lastTimeDiff.value;\n      var distanceY = lastOffsetValue.y / lastTimeDiff.value;\n      var absX = Math.abs(distanceX);\n      var absY = Math.abs(distanceY);\n      // Skip swipe if low distance\n      if (Math.max(absX, absY) < MIN_SWIPE_DISTANCE) return;\n      var currentX = distanceX;\n      var currentY = distanceY;\n      motionInterval.value = setInterval(function () {\n        if (Math.abs(currentX) < STOP_SWIPE_DISTANCE && Math.abs(currentY) < STOP_SWIPE_DISTANCE) {\n          clearInterval(motionInterval.value);\n          return;\n        }\n        currentX *= SPEED_OFF_MULTIPLE;\n        currentY *= SPEED_OFF_MULTIPLE;\n        onOffset(currentX * REFRESH_INTERVAL, currentY * REFRESH_INTERVAL);\n      }, REFRESH_INTERVAL);\n    }\n  }\n  // >>> Wheel event\n  var lastWheelDirectionRef = ref();\n  function onWheel(e) {\n    var deltaX = e.deltaX,\n      deltaY = e.deltaY;\n    // Convert both to x & y since wheel only happened on PC\n    var mixed = 0;\n    var absX = Math.abs(deltaX);\n    var absY = Math.abs(deltaY);\n    if (absX === absY) {\n      mixed = lastWheelDirectionRef.value === 'x' ? deltaX : deltaY;\n    } else if (absX > absY) {\n      mixed = deltaX;\n      lastWheelDirectionRef.value = 'x';\n    } else {\n      mixed = deltaY;\n      lastWheelDirectionRef.value = 'y';\n    }\n    if (onOffset(-mixed, -mixed)) {\n      e.preventDefault();\n    }\n  }\n  // ========================= Effect =========================\n  var touchEventsRef = ref({\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd,\n    onWheel: onWheel\n  });\n  function onProxyTouchStart(e) {\n    touchEventsRef.value.onTouchStart(e);\n  }\n  function onProxyTouchMove(e) {\n    touchEventsRef.value.onTouchMove(e);\n  }\n  function onProxyTouchEnd(e) {\n    touchEventsRef.value.onTouchEnd(e);\n  }\n  function onProxyWheel(e) {\n    touchEventsRef.value.onWheel(e);\n  }\n  onMounted(function () {\n    var _domRef$value, _domRef$value2;\n    document.addEventListener('touchmove', onProxyTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onProxyTouchEnd, {\n      passive: false\n    });\n    // No need to clean up since element removed\n    (_domRef$value = domRef.value) === null || _domRef$value === void 0 ? void 0 : _domRef$value.addEventListener('touchstart', onProxyTouchStart, {\n      passive: false\n    });\n    (_domRef$value2 = domRef.value) === null || _domRef$value2 === void 0 ? void 0 : _domRef$value2.addEventListener('wheel', onProxyWheel, {\n      passive: false\n    });\n  });\n  onBeforeUnmount(function () {\n    document.removeEventListener('touchmove', onProxyTouchMove);\n    document.removeEventListener('touchend', onProxyTouchEnd);\n  });\n}","map":{"version":3,"names":["_slicedToArray","ref","onBeforeUnmount","onMounted","useState","MIN_SWIPE_DISTANCE","STOP_SWIPE_DISTANCE","REFRESH_INTERVAL","SPEED_OFF_MULTIPLE","Math","pow","useTouchMove","domRef","onOffset","_useState","_useState2","touchPosition","setTouchPosition","_useState3","_useState4","lastTimestamp","setLastTimestamp","_useState5","_useState6","lastTimeDiff","setLastTimeDiff","_useState7","_useState8","lastOffset","setLastOffset","motionInterval","onTouchStart","e","_e$touches$","touches","screenX","screenY","x","y","clearInterval","value","onTouchMove","preventDefault","_e$touches$2","offsetX","offsetY","now","Date","onTouchEnd","lastOffsetValue","distanceX","distanceY","absX","abs","absY","max","currentX","currentY","setInterval","lastWheelDirectionRef","onWheel","deltaX","deltaY","mixed","touchEventsRef","onProxyTouchStart","onProxyTouchMove","onProxyTouchEnd","onProxyWheel","_domRef$value","_domRef$value2","document","addEventListener","passive","removeEventListener"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/tabs/src/hooks/useTouchMove.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { ref, onBeforeUnmount, onMounted } from 'vue';\nimport useState from '../../../_util/hooks/useState';\nvar MIN_SWIPE_DISTANCE = 0.1;\nvar STOP_SWIPE_DISTANCE = 0.01;\nvar REFRESH_INTERVAL = 20;\nvar SPEED_OFF_MULTIPLE = Math.pow(0.995, REFRESH_INTERVAL);\n// ================================= Hook =================================\nexport default function useTouchMove(domRef, onOffset) {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    touchPosition = _useState2[0],\n    setTouchPosition = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastTimestamp = _useState4[0],\n    setLastTimestamp = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastTimeDiff = _useState6[0],\n    setLastTimeDiff = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    lastOffset = _useState8[0],\n    setLastOffset = _useState8[1];\n  var motionInterval = ref();\n  // ========================= Events =========================\n  // >>> Touch events\n  function onTouchStart(e) {\n    var _e$touches$ = e.touches[0],\n      screenX = _e$touches$.screenX,\n      screenY = _e$touches$.screenY;\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    clearInterval(motionInterval.value);\n  }\n  function onTouchMove(e) {\n    if (!touchPosition.value) return;\n    e.preventDefault();\n    var _e$touches$2 = e.touches[0],\n      screenX = _e$touches$2.screenX,\n      screenY = _e$touches$2.screenY;\n    var offsetX = screenX - touchPosition.value.x;\n    var offsetY = screenY - touchPosition.value.y;\n    onOffset(offsetX, offsetY);\n    setTouchPosition({\n      x: screenX,\n      y: screenY\n    });\n    var now = Date.now();\n    setLastTimeDiff(now - lastTimestamp.value);\n    setLastTimestamp(now);\n    setLastOffset({\n      x: offsetX,\n      y: offsetY\n    });\n  }\n  function onTouchEnd() {\n    if (!touchPosition.value) return;\n    var lastOffsetValue = lastOffset.value;\n    setTouchPosition(null);\n    setLastOffset(null);\n    // Swipe if needed\n    if (lastOffsetValue) {\n      var distanceX = lastOffsetValue.x / lastTimeDiff.value;\n      var distanceY = lastOffsetValue.y / lastTimeDiff.value;\n      var absX = Math.abs(distanceX);\n      var absY = Math.abs(distanceY);\n      // Skip swipe if low distance\n      if (Math.max(absX, absY) < MIN_SWIPE_DISTANCE) return;\n      var currentX = distanceX;\n      var currentY = distanceY;\n      motionInterval.value = setInterval(function () {\n        if (Math.abs(currentX) < STOP_SWIPE_DISTANCE && Math.abs(currentY) < STOP_SWIPE_DISTANCE) {\n          clearInterval(motionInterval.value);\n          return;\n        }\n        currentX *= SPEED_OFF_MULTIPLE;\n        currentY *= SPEED_OFF_MULTIPLE;\n        onOffset(currentX * REFRESH_INTERVAL, currentY * REFRESH_INTERVAL);\n      }, REFRESH_INTERVAL);\n    }\n  }\n  // >>> Wheel event\n  var lastWheelDirectionRef = ref();\n  function onWheel(e) {\n    var deltaX = e.deltaX,\n      deltaY = e.deltaY;\n    // Convert both to x & y since wheel only happened on PC\n    var mixed = 0;\n    var absX = Math.abs(deltaX);\n    var absY = Math.abs(deltaY);\n    if (absX === absY) {\n      mixed = lastWheelDirectionRef.value === 'x' ? deltaX : deltaY;\n    } else if (absX > absY) {\n      mixed = deltaX;\n      lastWheelDirectionRef.value = 'x';\n    } else {\n      mixed = deltaY;\n      lastWheelDirectionRef.value = 'y';\n    }\n    if (onOffset(-mixed, -mixed)) {\n      e.preventDefault();\n    }\n  }\n  // ========================= Effect =========================\n  var touchEventsRef = ref({\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd,\n    onWheel: onWheel\n  });\n  function onProxyTouchStart(e) {\n    touchEventsRef.value.onTouchStart(e);\n  }\n  function onProxyTouchMove(e) {\n    touchEventsRef.value.onTouchMove(e);\n  }\n  function onProxyTouchEnd(e) {\n    touchEventsRef.value.onTouchEnd(e);\n  }\n  function onProxyWheel(e) {\n    touchEventsRef.value.onWheel(e);\n  }\n  onMounted(function () {\n    var _domRef$value, _domRef$value2;\n    document.addEventListener('touchmove', onProxyTouchMove, {\n      passive: false\n    });\n    document.addEventListener('touchend', onProxyTouchEnd, {\n      passive: false\n    });\n    // No need to clean up since element removed\n    (_domRef$value = domRef.value) === null || _domRef$value === void 0 ? void 0 : _domRef$value.addEventListener('touchstart', onProxyTouchStart, {\n      passive: false\n    });\n    (_domRef$value2 = domRef.value) === null || _domRef$value2 === void 0 ? void 0 : _domRef$value2.addEventListener('wheel', onProxyWheel, {\n      passive: false\n    });\n  });\n  onBeforeUnmount(function () {\n    document.removeEventListener('touchmove', onProxyTouchMove);\n    document.removeEventListener('touchend', onProxyTouchEnd);\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}