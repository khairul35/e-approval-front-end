{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nvar _excluded = [\"type\", \"disabled\", \"content\", \"class\", \"style\"];\nimport { Fragment as _Fragment, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport warning from '../_util/warning';\nimport TransButton from '../_util/transButton';\nimport raf from '../_util/raf';\nimport { isStyleSupport } from '../_util/styleChecker';\nimport Editable from './Editable';\nimport measure from './util';\nimport Typography from './Typography';\nimport ResizeObserver from '../vc-resize-observer';\nimport Tooltip from '../tooltip';\nimport copy from '../_util/copy-to-clipboard';\nimport CheckOutlined from \"@ant-design/icons-vue/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons-vue/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons-vue/es/icons/EditOutlined\";\nimport { defineComponent, reactive, ref, onMounted, onBeforeUnmount, watch, watchEffect, nextTick, computed, toRaw } from 'vue';\nimport useConfigInject from '../_util/hooks/useConfigInject';\nimport omit from '../_util/omit';\nimport useMergedState from '../_util/hooks/useMergedState';\nvar isLineClampSupport = isStyleSupport('webkitLineClamp');\nvar isTextOverflowSupport = isStyleSupport('textOverflow');\nvar ELLIPSIS_STR = '...';\nexport var baseProps = function baseProps() {\n  return {\n    editable: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    copyable: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    prefixCls: String,\n    component: String,\n    type: String,\n    disabled: {\n      type: Boolean,\n      default: undefined\n    },\n    ellipsis: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    code: {\n      type: Boolean,\n      default: undefined\n    },\n    mark: {\n      type: Boolean,\n      default: undefined\n    },\n    underline: {\n      type: Boolean,\n      default: undefined\n    },\n    delete: {\n      type: Boolean,\n      default: undefined\n    },\n    strong: {\n      type: Boolean,\n      default: undefined\n    },\n    keyboard: {\n      type: Boolean,\n      default: undefined\n    },\n    content: String,\n    'onUpdate:content': Function\n  };\n};\nvar Base = defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Base',\n  inheritAttrs: false,\n  props: baseProps(),\n  // emits: ['update:content'],\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      attrs = _ref.attrs,\n      emit = _ref.emit;\n    var _useConfigInject = useConfigInject('typography', props),\n      prefixCls = _useConfigInject.prefixCls,\n      direction = _useConfigInject.direction;\n    var state = reactive({\n      copied: false,\n      ellipsisText: '',\n      ellipsisContent: null,\n      isEllipsis: false,\n      expanded: false,\n      clientRendered: false,\n      //locale\n      expandStr: '',\n      copyStr: '',\n      copiedStr: '',\n      editStr: '',\n      copyId: undefined,\n      rafId: undefined,\n      prevProps: undefined,\n      originContent: ''\n    });\n    var contentRef = ref();\n    var editIcon = ref();\n    var ellipsis = computed(function () {\n      var ellipsis = props.ellipsis;\n      if (!ellipsis) return {};\n      return _objectSpread({\n        rows: 1,\n        expandable: false\n      }, _typeof(ellipsis) === 'object' ? ellipsis : null);\n    });\n    onMounted(function () {\n      state.clientRendered = true;\n    });\n    onBeforeUnmount(function () {\n      clearTimeout(state.copyId);\n      raf.cancel(state.rafId);\n    });\n    watch([function () {\n      return ellipsis.value.rows;\n    }, function () {\n      return props.content;\n    }], function () {\n      nextTick(function () {\n        resizeOnNextFrame();\n      });\n    }, {\n      flush: 'post',\n      deep: true,\n      immediate: true\n    });\n    watchEffect(function () {\n      if (props.content === undefined) {\n        warning(!props.editable, 'Typography', 'When `editable` is enabled, please use `content` instead of children');\n        warning(!props.ellipsis, 'Typography', 'When `ellipsis` is enabled, please use `content` instead of children');\n      }\n    });\n    function getChildrenText() {\n      var _contentRef$value, _contentRef$value$$el;\n      return props.ellipsis || props.editable ? props.content : (_contentRef$value = contentRef.value) === null || _contentRef$value === void 0 ? void 0 : (_contentRef$value$$el = _contentRef$value.$el) === null || _contentRef$value$$el === void 0 ? void 0 : _contentRef$value$$el.innerText;\n    }\n    // =============== Expand ===============\n    function onExpandClick(e) {\n      var onExpand = ellipsis.value.onExpand;\n      state.expanded = true;\n      onExpand === null || onExpand === void 0 ? void 0 : onExpand(e);\n    }\n    // ================ Edit ================\n    function onEditClick(e) {\n      e.preventDefault();\n      state.originContent = props.content;\n      triggerEdit(true);\n    }\n    function onEditChange(value) {\n      onContentChange(value);\n      triggerEdit(false);\n    }\n    function onContentChange(value) {\n      var onChange = editable.value.onChange;\n      if (value !== props.content) {\n        emit('update:content', value);\n        onChange === null || onChange === void 0 ? void 0 : onChange(value);\n      }\n    }\n    function onEditCancel() {\n      var _editable$value$onCan, _editable$value;\n      (_editable$value$onCan = (_editable$value = editable.value).onCancel) === null || _editable$value$onCan === void 0 ? void 0 : _editable$value$onCan.call(_editable$value);\n      triggerEdit(false);\n    }\n    // ================ Copy ================\n    function onCopyClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var copyable = props.copyable;\n      var copyConfig = _objectSpread({}, _typeof(copyable) === 'object' ? copyable : null);\n      if (copyConfig.text === undefined) {\n        copyConfig.text = getChildrenText();\n      }\n      copy(copyConfig.text || '');\n      state.copied = true;\n      nextTick(function () {\n        if (copyConfig.onCopy) {\n          copyConfig.onCopy();\n        }\n        state.copyId = setTimeout(function () {\n          state.copied = false;\n        }, 3000);\n      });\n    }\n    var editable = computed(function () {\n      var editable = props.editable;\n      if (!editable) return {\n        editing: false\n      };\n      return _objectSpread({}, _typeof(editable) === 'object' ? editable : null);\n    });\n    var _useMergedState = useMergedState(false, {\n        value: computed(function () {\n          return editable.value.editing;\n        })\n      }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      editing = _useMergedState2[0],\n      setEditing = _useMergedState2[1];\n    function triggerEdit(edit) {\n      var onStart = editable.value.onStart;\n      if (edit && onStart) {\n        onStart();\n      }\n      setEditing(edit);\n    }\n    watch(editing, function (val) {\n      if (!val) {\n        var _editIcon$value;\n        (_editIcon$value = editIcon.value) === null || _editIcon$value === void 0 ? void 0 : _editIcon$value.focus();\n      }\n    }, {\n      flush: 'post'\n    });\n    // ============== Ellipsis ==============\n    function resizeOnNextFrame() {\n      raf.cancel(state.rafId);\n      state.rafId = raf(function () {\n        // Do not bind `syncEllipsis`. It need for test usage on prototype\n        syncEllipsis();\n      });\n    }\n    var canUseCSSEllipsis = computed(function () {\n      var _ellipsis$value = ellipsis.value,\n        rows = _ellipsis$value.rows,\n        expandable = _ellipsis$value.expandable,\n        suffix = _ellipsis$value.suffix,\n        onEllipsis = _ellipsis$value.onEllipsis,\n        tooltip = _ellipsis$value.tooltip;\n      if (suffix || tooltip) return false;\n      // Can't use css ellipsis since we need to provide the place for button\n      if (props.editable || props.copyable || expandable || onEllipsis) {\n        return false;\n      }\n      if (rows === 1) {\n        return isTextOverflowSupport;\n      }\n      return isLineClampSupport;\n    });\n    var syncEllipsis = function syncEllipsis() {\n      var _contentRef$value2, _contentRef$value3;\n      var ellipsisText = state.ellipsisText,\n        isEllipsis = state.isEllipsis;\n      var _ellipsis$value2 = ellipsis.value,\n        rows = _ellipsis$value2.rows,\n        suffix = _ellipsis$value2.suffix,\n        onEllipsis = _ellipsis$value2.onEllipsis;\n      if (!rows || rows < 0 || !((_contentRef$value2 = contentRef.value) !== null && _contentRef$value2 !== void 0 && _contentRef$value2.$el) || state.expanded || props.content === undefined) return;\n      // Do not measure if css already support ellipsis\n      if (canUseCSSEllipsis.value) return;\n      var _measure = measure((_contentRef$value3 = contentRef.value) === null || _contentRef$value3 === void 0 ? void 0 : _contentRef$value3.$el, {\n          rows: rows,\n          suffix: suffix\n        }, props.content, renderOperations(true), ELLIPSIS_STR),\n        content = _measure.content,\n        text = _measure.text,\n        ell = _measure.ellipsis;\n      if (ellipsisText !== text || state.isEllipsis !== ell) {\n        state.ellipsisText = text;\n        state.ellipsisContent = content;\n        state.isEllipsis = ell;\n        if (isEllipsis !== ell && onEllipsis) {\n          onEllipsis(ell);\n        }\n      }\n    };\n    function wrapperDecorations(_ref2, content) {\n      var mark = _ref2.mark,\n        code = _ref2.code,\n        underline = _ref2.underline,\n        del = _ref2.delete,\n        strong = _ref2.strong,\n        keyboard = _ref2.keyboard;\n      var currentContent = content;\n      function wrap(needed, Tag) {\n        if (!needed) return;\n        var _currentContent = function () {\n          return currentContent;\n        }();\n        currentContent = _createVNode(Tag, null, {\n          default: function _default() {\n            return [_currentContent];\n          }\n        });\n      }\n      wrap(strong, 'strong');\n      wrap(underline, 'u');\n      wrap(del, 'del');\n      wrap(code, 'code');\n      wrap(mark, 'mark');\n      wrap(keyboard, 'kbd');\n      return currentContent;\n    }\n    function renderExpand(forceRender) {\n      var _ellipsis$value3 = ellipsis.value,\n        expandable = _ellipsis$value3.expandable,\n        symbol = _ellipsis$value3.symbol;\n      if (!expandable) return null;\n      // force render expand icon for measure usage or it will cause dead loop\n      if (!forceRender && (state.expanded || !state.isEllipsis)) return null;\n      var expandContent = (slots.ellipsisSymbol ? slots.ellipsisSymbol() : symbol) || state.expandStr;\n      return _createVNode(\"a\", {\n        \"key\": \"expand\",\n        \"class\": \"\".concat(prefixCls.value, \"-expand\"),\n        \"onClick\": onExpandClick,\n        \"aria-label\": state.expandStr\n      }, [expandContent]);\n    }\n    function renderEdit() {\n      if (!props.editable) return;\n      var _props$editable = props.editable,\n        tooltip = _props$editable.tooltip,\n        _props$editable$trigg = _props$editable.triggerType,\n        triggerType = _props$editable$trigg === void 0 ? ['icon'] : _props$editable$trigg;\n      var icon = slots.editableIcon ? slots.editableIcon() : _createVNode(EditOutlined, {\n        \"role\": \"button\"\n      }, null);\n      var title = slots.editableTooltip ? slots.editableTooltip() : state.editStr;\n      var ariaLabel = typeof title === 'string' ? title : '';\n      return triggerType.indexOf('icon') !== -1 ? _createVNode(Tooltip, {\n        \"key\": \"edit\",\n        \"title\": tooltip === false ? '' : title\n      }, {\n        default: function _default() {\n          return [_createVNode(TransButton, {\n            \"ref\": editIcon,\n            \"class\": \"\".concat(prefixCls.value, \"-edit\"),\n            \"onClick\": onEditClick,\n            \"aria-label\": ariaLabel\n          }, {\n            default: function _default() {\n              return [icon];\n            }\n          })];\n        }\n      }) : null;\n    }\n    function renderCopy() {\n      if (!props.copyable) return;\n      var tooltip = props.copyable.tooltip;\n      var defaultTitle = state.copied ? state.copiedStr : state.copyStr;\n      var title = slots.copyableTooltip ? slots.copyableTooltip({\n        copied: state.copied\n      }) : defaultTitle;\n      var ariaLabel = typeof title === 'string' ? title : '';\n      var defaultIcon = state.copied ? _createVNode(CheckOutlined, null, null) : _createVNode(CopyOutlined, null, null);\n      var icon = slots.copyableIcon ? slots.copyableIcon({\n        copied: !!state.copied\n      }) : defaultIcon;\n      return _createVNode(Tooltip, {\n        \"key\": \"copy\",\n        \"title\": tooltip === false ? '' : title\n      }, {\n        default: function _default() {\n          return [_createVNode(TransButton, {\n            \"class\": [\"\".concat(prefixCls.value, \"-copy\"), _defineProperty({}, \"\".concat(prefixCls.value, \"-copy-success\"), state.copied)],\n            \"onClick\": onCopyClick,\n            \"aria-label\": ariaLabel\n          }, {\n            default: function _default() {\n              return [icon];\n            }\n          })];\n        }\n      });\n    }\n    function renderEditInput() {\n      var className = attrs.class,\n        style = attrs.style;\n      var _editable$value2 = editable.value,\n        maxlength = _editable$value2.maxlength,\n        autoSize = _editable$value2.autoSize,\n        onEnd = _editable$value2.onEnd;\n      return _createVNode(Editable, {\n        \"class\": className,\n        \"style\": style,\n        \"prefixCls\": prefixCls.value,\n        \"value\": props.content,\n        \"originContent\": state.originContent,\n        \"maxlength\": maxlength,\n        \"autoSize\": autoSize,\n        \"onSave\": onEditChange,\n        \"onChange\": onContentChange,\n        \"onCancel\": onEditCancel,\n        \"onEnd\": onEnd,\n        \"direction\": direction.value\n      }, {\n        enterIcon: slots.editableEnterIcon\n      });\n    }\n    function renderOperations(forceRenderExpanded) {\n      return [renderExpand(forceRenderExpanded), renderEdit(), renderCopy()].filter(function (node) {\n        return node;\n      });\n    }\n    return function () {\n      var _slots$default;\n      var _editable$value$trigg = editable.value.triggerType,\n        triggerType = _editable$value$trigg === void 0 ? ['icon'] : _editable$value$trigg;\n      var _children = props.ellipsis || props.editable ? props.content !== undefined ? props.content : (_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots) : slots.default ? slots.default() : props.content;\n      if (editing.value) {\n        return renderEditInput();\n      }\n      return _createVNode(LocaleReceiver, {\n        \"componentName\": \"Text\",\n        \"children\": function children(locale) {\n          var _ref4;\n          var _props$attrs = _objectSpread(_objectSpread({}, props), attrs),\n            type = _props$attrs.type,\n            disabled = _props$attrs.disabled,\n            content = _props$attrs.content,\n            className = _props$attrs.class,\n            style = _props$attrs.style,\n            restProps = _objectWithoutProperties(_props$attrs, _excluded);\n          var _ellipsis$value4 = ellipsis.value,\n            rows = _ellipsis$value4.rows,\n            suffix = _ellipsis$value4.suffix,\n            tooltip = _ellipsis$value4.tooltip;\n          var edit = locale.edit,\n            copyStr = locale.copy,\n            copied = locale.copied,\n            expand = locale.expand;\n          state.editStr = edit;\n          state.copyStr = copyStr;\n          state.copiedStr = copied;\n          state.expandStr = expand;\n          var textProps = omit(restProps, ['prefixCls', 'editable', 'copyable', 'ellipsis', 'mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'onUpdate:content']);\n          var cssEllipsis = canUseCSSEllipsis.value;\n          var cssTextOverflow = rows === 1 && cssEllipsis;\n          var cssLineClamp = rows && rows > 1 && cssEllipsis;\n          var textNode = _children;\n          var ariaLabel;\n          // Only use js ellipsis when css ellipsis not support\n          if (rows && state.isEllipsis && !state.expanded && !cssEllipsis) {\n            var _restContent;\n            var _title = restProps.title;\n            var restContent = _title || '';\n            if (!_title && (typeof _children === 'string' || typeof _children === 'number')) {\n              restContent = String(_children);\n            }\n            // show rest content as title on symbol\n            restContent = (_restContent = restContent) === null || _restContent === void 0 ? void 0 : _restContent.slice(String(state.ellipsisContent || '').length);\n            // We move full content to outer element to avoid repeat read the content by accessibility\n            textNode = _createVNode(_Fragment, null, [toRaw(state.ellipsisContent), _createVNode(\"span\", {\n              \"title\": restContent,\n              \"aria-hidden\": \"true\"\n            }, [ELLIPSIS_STR]), suffix]);\n          } else {\n            textNode = _createVNode(_Fragment, null, [_children, suffix]);\n          }\n          textNode = wrapperDecorations(props, textNode);\n          var showTooltip = tooltip && rows && state.isEllipsis && !state.expanded && !cssEllipsis;\n          var title = slots.ellipsisTooltip ? slots.ellipsisTooltip() : tooltip;\n          return _createVNode(ResizeObserver, {\n            \"onResize\": resizeOnNextFrame,\n            \"disabled\": !rows\n          }, {\n            default: function _default() {\n              return [_createVNode(Typography, _objectSpread({\n                \"ref\": contentRef,\n                \"class\": [(_ref4 = {}, _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-\").concat(type), type), _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-disabled\"), disabled), _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-ellipsis\"), rows), _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-single-line\"), rows === 1 && !state.isEllipsis), _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-ellipsis-multiple-line\"), cssLineClamp), _ref4), className],\n                \"style\": _objectSpread(_objectSpread({}, style), {}, {\n                  WebkitLineClamp: cssLineClamp ? rows : undefined\n                }),\n                \"aria-label\": ariaLabel,\n                \"direction\": direction.value,\n                \"onClick\": triggerType.indexOf('text') !== -1 ? onEditClick : function () {}\n              }, textProps), {\n                default: function _default() {\n                  return [showTooltip ? _createVNode(Tooltip, {\n                    \"title\": tooltip === true ? _children : title\n                  }, {\n                    default: function _default() {\n                      return [_createVNode(\"span\", null, [textNode])];\n                    }\n                  }) : textNode, renderOperations()];\n                }\n              })];\n            }\n          });\n        }\n      }, null);\n    };\n  }\n});\nexport default Base;","map":{"version":3,"names":["_objectWithoutProperties","_defineProperty","_slicedToArray","_typeof","_objectSpread","_excluded","Fragment","_Fragment","resolveDirective","_resolveDirective","createVNode","_createVNode","LocaleReceiver","warning","TransButton","raf","isStyleSupport","Editable","measure","Typography","ResizeObserver","Tooltip","copy","CheckOutlined","CopyOutlined","EditOutlined","defineComponent","reactive","ref","onMounted","onBeforeUnmount","watch","watchEffect","nextTick","computed","toRaw","useConfigInject","omit","useMergedState","isLineClampSupport","isTextOverflowSupport","ELLIPSIS_STR","baseProps","editable","type","Boolean","Object","default","undefined","copyable","prefixCls","String","component","disabled","ellipsis","code","mark","underline","delete","strong","keyboard","content","Function","Base","compatConfig","MODE","name","inheritAttrs","props","setup","_ref","slots","attrs","emit","_useConfigInject","direction","state","copied","ellipsisText","ellipsisContent","isEllipsis","expanded","clientRendered","expandStr","copyStr","copiedStr","editStr","copyId","rafId","prevProps","originContent","contentRef","editIcon","rows","expandable","clearTimeout","cancel","value","resizeOnNextFrame","flush","deep","immediate","getChildrenText","_contentRef$value","_contentRef$value$$el","$el","innerText","onExpandClick","e","onExpand","onEditClick","preventDefault","triggerEdit","onEditChange","onContentChange","onChange","onEditCancel","_editable$value$onCan","_editable$value","onCancel","call","onCopyClick","stopPropagation","copyConfig","text","onCopy","setTimeout","editing","_useMergedState","_useMergedState2","setEditing","edit","onStart","val","_editIcon$value","focus","syncEllipsis","canUseCSSEllipsis","_ellipsis$value","suffix","onEllipsis","tooltip","_contentRef$value2","_contentRef$value3","_ellipsis$value2","_measure","renderOperations","ell","wrapperDecorations","_ref2","del","currentContent","wrap","needed","Tag","_currentContent","_default","renderExpand","forceRender","_ellipsis$value3","symbol","expandContent","ellipsisSymbol","concat","renderEdit","_props$editable","_props$editable$trigg","triggerType","icon","editableIcon","title","editableTooltip","ariaLabel","indexOf","renderCopy","defaultTitle","copyableTooltip","defaultIcon","copyableIcon","renderEditInput","className","class","style","_editable$value2","maxlength","autoSize","onEnd","enterIcon","editableEnterIcon","forceRenderExpanded","filter","node","_slots$default","_editable$value$trigg","_children","children","locale","_ref4","_props$attrs","restProps","_ellipsis$value4","expand","textProps","cssEllipsis","cssTextOverflow","cssLineClamp","textNode","_restContent","_title","restContent","slice","length","showTooltip","ellipsisTooltip","WebkitLineClamp"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/typography/Base.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nvar _excluded = [\"type\", \"disabled\", \"content\", \"class\", \"style\"];\nimport { Fragment as _Fragment, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport warning from '../_util/warning';\nimport TransButton from '../_util/transButton';\nimport raf from '../_util/raf';\nimport { isStyleSupport } from '../_util/styleChecker';\nimport Editable from './Editable';\nimport measure from './util';\nimport Typography from './Typography';\nimport ResizeObserver from '../vc-resize-observer';\nimport Tooltip from '../tooltip';\nimport copy from '../_util/copy-to-clipboard';\nimport CheckOutlined from \"@ant-design/icons-vue/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons-vue/es/icons/CopyOutlined\";\nimport EditOutlined from \"@ant-design/icons-vue/es/icons/EditOutlined\";\nimport { defineComponent, reactive, ref, onMounted, onBeforeUnmount, watch, watchEffect, nextTick, computed, toRaw } from 'vue';\nimport useConfigInject from '../_util/hooks/useConfigInject';\nimport omit from '../_util/omit';\nimport useMergedState from '../_util/hooks/useMergedState';\nvar isLineClampSupport = isStyleSupport('webkitLineClamp');\nvar isTextOverflowSupport = isStyleSupport('textOverflow');\nvar ELLIPSIS_STR = '...';\nexport var baseProps = function baseProps() {\n  return {\n    editable: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    copyable: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    prefixCls: String,\n    component: String,\n    type: String,\n    disabled: {\n      type: Boolean,\n      default: undefined\n    },\n    ellipsis: {\n      type: [Boolean, Object],\n      default: undefined\n    },\n    code: {\n      type: Boolean,\n      default: undefined\n    },\n    mark: {\n      type: Boolean,\n      default: undefined\n    },\n    underline: {\n      type: Boolean,\n      default: undefined\n    },\n    delete: {\n      type: Boolean,\n      default: undefined\n    },\n    strong: {\n      type: Boolean,\n      default: undefined\n    },\n    keyboard: {\n      type: Boolean,\n      default: undefined\n    },\n    content: String,\n    'onUpdate:content': Function\n  };\n};\nvar Base = defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Base',\n  inheritAttrs: false,\n  props: baseProps(),\n  // emits: ['update:content'],\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      attrs = _ref.attrs,\n      emit = _ref.emit;\n    var _useConfigInject = useConfigInject('typography', props),\n      prefixCls = _useConfigInject.prefixCls,\n      direction = _useConfigInject.direction;\n    var state = reactive({\n      copied: false,\n      ellipsisText: '',\n      ellipsisContent: null,\n      isEllipsis: false,\n      expanded: false,\n      clientRendered: false,\n      //locale\n      expandStr: '',\n      copyStr: '',\n      copiedStr: '',\n      editStr: '',\n      copyId: undefined,\n      rafId: undefined,\n      prevProps: undefined,\n      originContent: ''\n    });\n    var contentRef = ref();\n    var editIcon = ref();\n    var ellipsis = computed(function () {\n      var ellipsis = props.ellipsis;\n      if (!ellipsis) return {};\n      return _objectSpread({\n        rows: 1,\n        expandable: false\n      }, _typeof(ellipsis) === 'object' ? ellipsis : null);\n    });\n    onMounted(function () {\n      state.clientRendered = true;\n    });\n    onBeforeUnmount(function () {\n      clearTimeout(state.copyId);\n      raf.cancel(state.rafId);\n    });\n    watch([function () {\n      return ellipsis.value.rows;\n    }, function () {\n      return props.content;\n    }], function () {\n      nextTick(function () {\n        resizeOnNextFrame();\n      });\n    }, {\n      flush: 'post',\n      deep: true,\n      immediate: true\n    });\n    watchEffect(function () {\n      if (props.content === undefined) {\n        warning(!props.editable, 'Typography', 'When `editable` is enabled, please use `content` instead of children');\n        warning(!props.ellipsis, 'Typography', 'When `ellipsis` is enabled, please use `content` instead of children');\n      }\n    });\n    function getChildrenText() {\n      var _contentRef$value, _contentRef$value$$el;\n      return props.ellipsis || props.editable ? props.content : (_contentRef$value = contentRef.value) === null || _contentRef$value === void 0 ? void 0 : (_contentRef$value$$el = _contentRef$value.$el) === null || _contentRef$value$$el === void 0 ? void 0 : _contentRef$value$$el.innerText;\n    }\n    // =============== Expand ===============\n    function onExpandClick(e) {\n      var onExpand = ellipsis.value.onExpand;\n      state.expanded = true;\n      onExpand === null || onExpand === void 0 ? void 0 : onExpand(e);\n    }\n    // ================ Edit ================\n    function onEditClick(e) {\n      e.preventDefault();\n      state.originContent = props.content;\n      triggerEdit(true);\n    }\n    function onEditChange(value) {\n      onContentChange(value);\n      triggerEdit(false);\n    }\n    function onContentChange(value) {\n      var onChange = editable.value.onChange;\n      if (value !== props.content) {\n        emit('update:content', value);\n        onChange === null || onChange === void 0 ? void 0 : onChange(value);\n      }\n    }\n    function onEditCancel() {\n      var _editable$value$onCan, _editable$value;\n      (_editable$value$onCan = (_editable$value = editable.value).onCancel) === null || _editable$value$onCan === void 0 ? void 0 : _editable$value$onCan.call(_editable$value);\n      triggerEdit(false);\n    }\n    // ================ Copy ================\n    function onCopyClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var copyable = props.copyable;\n      var copyConfig = _objectSpread({}, _typeof(copyable) === 'object' ? copyable : null);\n      if (copyConfig.text === undefined) {\n        copyConfig.text = getChildrenText();\n      }\n      copy(copyConfig.text || '');\n      state.copied = true;\n      nextTick(function () {\n        if (copyConfig.onCopy) {\n          copyConfig.onCopy();\n        }\n        state.copyId = setTimeout(function () {\n          state.copied = false;\n        }, 3000);\n      });\n    }\n    var editable = computed(function () {\n      var editable = props.editable;\n      if (!editable) return {\n        editing: false\n      };\n      return _objectSpread({}, _typeof(editable) === 'object' ? editable : null);\n    });\n    var _useMergedState = useMergedState(false, {\n        value: computed(function () {\n          return editable.value.editing;\n        })\n      }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      editing = _useMergedState2[0],\n      setEditing = _useMergedState2[1];\n    function triggerEdit(edit) {\n      var onStart = editable.value.onStart;\n      if (edit && onStart) {\n        onStart();\n      }\n      setEditing(edit);\n    }\n    watch(editing, function (val) {\n      if (!val) {\n        var _editIcon$value;\n        (_editIcon$value = editIcon.value) === null || _editIcon$value === void 0 ? void 0 : _editIcon$value.focus();\n      }\n    }, {\n      flush: 'post'\n    });\n    // ============== Ellipsis ==============\n    function resizeOnNextFrame() {\n      raf.cancel(state.rafId);\n      state.rafId = raf(function () {\n        // Do not bind `syncEllipsis`. It need for test usage on prototype\n        syncEllipsis();\n      });\n    }\n    var canUseCSSEllipsis = computed(function () {\n      var _ellipsis$value = ellipsis.value,\n        rows = _ellipsis$value.rows,\n        expandable = _ellipsis$value.expandable,\n        suffix = _ellipsis$value.suffix,\n        onEllipsis = _ellipsis$value.onEllipsis,\n        tooltip = _ellipsis$value.tooltip;\n      if (suffix || tooltip) return false;\n      // Can't use css ellipsis since we need to provide the place for button\n      if (props.editable || props.copyable || expandable || onEllipsis) {\n        return false;\n      }\n      if (rows === 1) {\n        return isTextOverflowSupport;\n      }\n      return isLineClampSupport;\n    });\n    var syncEllipsis = function syncEllipsis() {\n      var _contentRef$value2, _contentRef$value3;\n      var ellipsisText = state.ellipsisText,\n        isEllipsis = state.isEllipsis;\n      var _ellipsis$value2 = ellipsis.value,\n        rows = _ellipsis$value2.rows,\n        suffix = _ellipsis$value2.suffix,\n        onEllipsis = _ellipsis$value2.onEllipsis;\n      if (!rows || rows < 0 || !((_contentRef$value2 = contentRef.value) !== null && _contentRef$value2 !== void 0 && _contentRef$value2.$el) || state.expanded || props.content === undefined) return;\n      // Do not measure if css already support ellipsis\n      if (canUseCSSEllipsis.value) return;\n      var _measure = measure((_contentRef$value3 = contentRef.value) === null || _contentRef$value3 === void 0 ? void 0 : _contentRef$value3.$el, {\n          rows: rows,\n          suffix: suffix\n        }, props.content, renderOperations(true), ELLIPSIS_STR),\n        content = _measure.content,\n        text = _measure.text,\n        ell = _measure.ellipsis;\n      if (ellipsisText !== text || state.isEllipsis !== ell) {\n        state.ellipsisText = text;\n        state.ellipsisContent = content;\n        state.isEllipsis = ell;\n        if (isEllipsis !== ell && onEllipsis) {\n          onEllipsis(ell);\n        }\n      }\n    };\n    function wrapperDecorations(_ref2, content) {\n      var mark = _ref2.mark,\n        code = _ref2.code,\n        underline = _ref2.underline,\n        del = _ref2.delete,\n        strong = _ref2.strong,\n        keyboard = _ref2.keyboard;\n      var currentContent = content;\n      function wrap(needed, Tag) {\n        if (!needed) return;\n        var _currentContent = function () {\n          return currentContent;\n        }();\n        currentContent = _createVNode(Tag, null, {\n          default: function _default() {\n            return [_currentContent];\n          }\n        });\n      }\n      wrap(strong, 'strong');\n      wrap(underline, 'u');\n      wrap(del, 'del');\n      wrap(code, 'code');\n      wrap(mark, 'mark');\n      wrap(keyboard, 'kbd');\n      return currentContent;\n    }\n    function renderExpand(forceRender) {\n      var _ellipsis$value3 = ellipsis.value,\n        expandable = _ellipsis$value3.expandable,\n        symbol = _ellipsis$value3.symbol;\n      if (!expandable) return null;\n      // force render expand icon for measure usage or it will cause dead loop\n      if (!forceRender && (state.expanded || !state.isEllipsis)) return null;\n      var expandContent = (slots.ellipsisSymbol ? slots.ellipsisSymbol() : symbol) || state.expandStr;\n      return _createVNode(\"a\", {\n        \"key\": \"expand\",\n        \"class\": \"\".concat(prefixCls.value, \"-expand\"),\n        \"onClick\": onExpandClick,\n        \"aria-label\": state.expandStr\n      }, [expandContent]);\n    }\n    function renderEdit() {\n      if (!props.editable) return;\n      var _props$editable = props.editable,\n        tooltip = _props$editable.tooltip,\n        _props$editable$trigg = _props$editable.triggerType,\n        triggerType = _props$editable$trigg === void 0 ? ['icon'] : _props$editable$trigg;\n      var icon = slots.editableIcon ? slots.editableIcon() : _createVNode(EditOutlined, {\n        \"role\": \"button\"\n      }, null);\n      var title = slots.editableTooltip ? slots.editableTooltip() : state.editStr;\n      var ariaLabel = typeof title === 'string' ? title : '';\n      return triggerType.indexOf('icon') !== -1 ? _createVNode(Tooltip, {\n        \"key\": \"edit\",\n        \"title\": tooltip === false ? '' : title\n      }, {\n        default: function _default() {\n          return [_createVNode(TransButton, {\n            \"ref\": editIcon,\n            \"class\": \"\".concat(prefixCls.value, \"-edit\"),\n            \"onClick\": onEditClick,\n            \"aria-label\": ariaLabel\n          }, {\n            default: function _default() {\n              return [icon];\n            }\n          })];\n        }\n      }) : null;\n    }\n    function renderCopy() {\n      if (!props.copyable) return;\n      var tooltip = props.copyable.tooltip;\n      var defaultTitle = state.copied ? state.copiedStr : state.copyStr;\n      var title = slots.copyableTooltip ? slots.copyableTooltip({\n        copied: state.copied\n      }) : defaultTitle;\n      var ariaLabel = typeof title === 'string' ? title : '';\n      var defaultIcon = state.copied ? _createVNode(CheckOutlined, null, null) : _createVNode(CopyOutlined, null, null);\n      var icon = slots.copyableIcon ? slots.copyableIcon({\n        copied: !!state.copied\n      }) : defaultIcon;\n      return _createVNode(Tooltip, {\n        \"key\": \"copy\",\n        \"title\": tooltip === false ? '' : title\n      }, {\n        default: function _default() {\n          return [_createVNode(TransButton, {\n            \"class\": [\"\".concat(prefixCls.value, \"-copy\"), _defineProperty({}, \"\".concat(prefixCls.value, \"-copy-success\"), state.copied)],\n            \"onClick\": onCopyClick,\n            \"aria-label\": ariaLabel\n          }, {\n            default: function _default() {\n              return [icon];\n            }\n          })];\n        }\n      });\n    }\n    function renderEditInput() {\n      var className = attrs.class,\n        style = attrs.style;\n      var _editable$value2 = editable.value,\n        maxlength = _editable$value2.maxlength,\n        autoSize = _editable$value2.autoSize,\n        onEnd = _editable$value2.onEnd;\n      return _createVNode(Editable, {\n        \"class\": className,\n        \"style\": style,\n        \"prefixCls\": prefixCls.value,\n        \"value\": props.content,\n        \"originContent\": state.originContent,\n        \"maxlength\": maxlength,\n        \"autoSize\": autoSize,\n        \"onSave\": onEditChange,\n        \"onChange\": onContentChange,\n        \"onCancel\": onEditCancel,\n        \"onEnd\": onEnd,\n        \"direction\": direction.value\n      }, {\n        enterIcon: slots.editableEnterIcon\n      });\n    }\n    function renderOperations(forceRenderExpanded) {\n      return [renderExpand(forceRenderExpanded), renderEdit(), renderCopy()].filter(function (node) {\n        return node;\n      });\n    }\n    return function () {\n      var _slots$default;\n      var _editable$value$trigg = editable.value.triggerType,\n        triggerType = _editable$value$trigg === void 0 ? ['icon'] : _editable$value$trigg;\n      var _children = props.ellipsis || props.editable ? props.content !== undefined ? props.content : (_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots) : slots.default ? slots.default() : props.content;\n      if (editing.value) {\n        return renderEditInput();\n      }\n      return _createVNode(LocaleReceiver, {\n        \"componentName\": \"Text\",\n        \"children\": function children(locale) {\n          var _ref4;\n          var _props$attrs = _objectSpread(_objectSpread({}, props), attrs),\n            type = _props$attrs.type,\n            disabled = _props$attrs.disabled,\n            content = _props$attrs.content,\n            className = _props$attrs.class,\n            style = _props$attrs.style,\n            restProps = _objectWithoutProperties(_props$attrs, _excluded);\n          var _ellipsis$value4 = ellipsis.value,\n            rows = _ellipsis$value4.rows,\n            suffix = _ellipsis$value4.suffix,\n            tooltip = _ellipsis$value4.tooltip;\n          var edit = locale.edit,\n            copyStr = locale.copy,\n            copied = locale.copied,\n            expand = locale.expand;\n          state.editStr = edit;\n          state.copyStr = copyStr;\n          state.copiedStr = copied;\n          state.expandStr = expand;\n          var textProps = omit(restProps, ['prefixCls', 'editable', 'copyable', 'ellipsis', 'mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'onUpdate:content']);\n          var cssEllipsis = canUseCSSEllipsis.value;\n          var cssTextOverflow = rows === 1 && cssEllipsis;\n          var cssLineClamp = rows && rows > 1 && cssEllipsis;\n          var textNode = _children;\n          var ariaLabel;\n          // Only use js ellipsis when css ellipsis not support\n          if (rows && state.isEllipsis && !state.expanded && !cssEllipsis) {\n            var _restContent;\n            var _title = restProps.title;\n            var restContent = _title || '';\n            if (!_title && (typeof _children === 'string' || typeof _children === 'number')) {\n              restContent = String(_children);\n            }\n            // show rest content as title on symbol\n            restContent = (_restContent = restContent) === null || _restContent === void 0 ? void 0 : _restContent.slice(String(state.ellipsisContent || '').length);\n            // We move full content to outer element to avoid repeat read the content by accessibility\n            textNode = _createVNode(_Fragment, null, [toRaw(state.ellipsisContent), _createVNode(\"span\", {\n              \"title\": restContent,\n              \"aria-hidden\": \"true\"\n            }, [ELLIPSIS_STR]), suffix]);\n          } else {\n            textNode = _createVNode(_Fragment, null, [_children, suffix]);\n          }\n          textNode = wrapperDecorations(props, textNode);\n          var showTooltip = tooltip && rows && state.isEllipsis && !state.expanded && !cssEllipsis;\n          var title = slots.ellipsisTooltip ? slots.ellipsisTooltip() : tooltip;\n          return _createVNode(ResizeObserver, {\n            \"onResize\": resizeOnNextFrame,\n            \"disabled\": !rows\n          }, {\n            default: function _default() {\n              return [_createVNode(Typography, _objectSpread({\n                \"ref\": contentRef,\n                \"class\": [(_ref4 = {}, _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-\").concat(type), type), _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-disabled\"), disabled), _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-ellipsis\"), rows), _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-single-line\"), rows === 1 && !state.isEllipsis), _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_ref4, \"\".concat(prefixCls.value, \"-ellipsis-multiple-line\"), cssLineClamp), _ref4), className],\n                \"style\": _objectSpread(_objectSpread({}, style), {}, {\n                  WebkitLineClamp: cssLineClamp ? rows : undefined\n                }),\n                \"aria-label\": ariaLabel,\n                \"direction\": direction.value,\n                \"onClick\": triggerType.indexOf('text') !== -1 ? onEditClick : function () {}\n              }, textProps), {\n                default: function _default() {\n                  return [showTooltip ? _createVNode(Tooltip, {\n                    \"title\": tooltip === true ? _children : title\n                  }, {\n                    default: function _default() {\n                      return [_createVNode(\"span\", null, [textNode])];\n                    }\n                  }) : textNode, renderOperations()];\n                }\n              })];\n            }\n          });\n        }\n      }, null);\n    };\n  }\n});\nexport default Base;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}