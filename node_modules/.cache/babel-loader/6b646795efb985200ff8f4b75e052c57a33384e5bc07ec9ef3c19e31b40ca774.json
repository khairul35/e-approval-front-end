{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabindex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\nimport BaseSelect, { baseSelectPropsWithoutPrivate, isMultiple } from './BaseSelect';\nimport OptionList from './OptionList';\nimport useOptions from './hooks/useOptions';\nimport { useProvideSelectProps } from './SelectContext';\nimport useId from './hooks/useId';\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from './utils/valueUtil';\nimport warningProps from './utils/warningPropsUtil';\nimport { toArray } from './utils/commonUtil';\nimport useFilterOptions from './hooks/useFilterOptions';\nimport useCache from './hooks/useCache';\nimport { computed, defineComponent, ref, shallowRef, toRef, watchEffect } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { initDefaultProps } from '../_util/props-util';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport useState from '../_util/hooks/useState';\nimport { toReactive } from '../_util/toReactive';\nimport omit from '../_util/omit';\nvar OMIT_DOM_PROPS = ['inputValue'];\nexport function selectProps() {\n  return _objectSpread(_objectSpread({}, baseSelectPropsWithoutPrivate()), {}, {\n    prefixCls: String,\n    id: String,\n    backfill: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Field Names\n    fieldNames: Object,\n    // >>> Search\n    /** @deprecated Use `searchValue` instead */\n    inputValue: String,\n    searchValue: String,\n    onSearch: Function,\n    autoClearSearchValue: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Select\n    onSelect: Function,\n    onDeselect: Function,\n    // >>> Options\n    /**\n     * In Select, `false` means do nothing.\n     * In TreeSelect, `false` will highlight match item.\n     * It's by design.\n     */\n    filterOption: {\n      type: [Boolean, Function],\n      default: undefined\n    },\n    filterSort: Function,\n    optionFilterProp: String,\n    optionLabelProp: String,\n    options: Array,\n    defaultActiveFirstOption: {\n      type: Boolean,\n      default: undefined\n    },\n    virtual: {\n      type: Boolean,\n      default: undefined\n    },\n    listHeight: Number,\n    listItemHeight: Number,\n    // >>> Icon\n    menuItemSelectedIcon: PropTypes.any,\n    mode: String,\n    labelInValue: {\n      type: Boolean,\n      default: undefined\n    },\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    onChange: Function,\n    children: Array\n  });\n}\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Select',\n  inheritAttrs: false,\n  props: initDefaultProps(selectProps(), {\n    prefixCls: 'vc-select',\n    autoClearSearchValue: true,\n    listHeight: 200,\n    listItemHeight: 20,\n    dropdownMatchSelectWidth: true\n  }),\n  setup: function setup(props, _ref) {\n    var expose = _ref.expose,\n      attrs = _ref.attrs,\n      slots = _ref.slots;\n    var mergedId = useId(toRef(props, 'id'));\n    var multiple = computed(function () {\n      return isMultiple(props.mode);\n    });\n    var childrenAsData = computed(function () {\n      return !!(!props.options && props.children);\n    });\n    var mergedFilterOption = computed(function () {\n      if (props.filterOption === undefined && props.mode === 'combobox') {\n        return false;\n      }\n      return props.filterOption;\n    });\n    // ========================= FieldNames =========================\n    var mergedFieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames, childrenAsData.value);\n    });\n    // =========================== Search ===========================\n    var _useMergedState = useMergedState('', {\n        value: computed(function () {\n          return props.searchValue !== undefined ? props.searchValue : props.inputValue;\n        }),\n        postState: function postState(search) {\n          return search || '';\n        }\n      }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1];\n    // =========================== Option ===========================\n    var parsedOptions = useOptions(toRef(props, 'options'), toRef(props, 'children'), mergedFieldNames);\n    var valueOptions = parsedOptions.valueOptions,\n      labelOptions = parsedOptions.labelOptions,\n      mergedOptions = parsedOptions.options;\n    // ========================= Wrap Value =========================\n    var convert2LabelValues = function convert2LabelValues(draftValues) {\n      // Convert to array\n      var valueList = toArray(draftValues);\n      // Convert to labelInValue type\n      return valueList.map(function (val) {\n        var rawValue;\n        var rawLabel;\n        var rawKey;\n        var rawDisabled;\n        // Fill label & value\n        if (isRawValue(val)) {\n          rawValue = val;\n        } else {\n          var _val$value;\n          rawKey = val.key;\n          rawLabel = val.label;\n          rawValue = (_val$value = val.value) !== null && _val$value !== void 0 ? _val$value : rawKey;\n        }\n        var option = valueOptions.value.get(rawValue);\n        if (option) {\n          var _option$key;\n          // Fill missing props\n          if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[props.optionLabelProp || mergedFieldNames.value.label];\n          if (rawKey === undefined) rawKey = (_option$key = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key !== void 0 ? _option$key : rawValue;\n          rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n          // Warning if label not same as provided\n          // if (process.env.NODE_ENV !== 'production' && !isRawValue(val)) {\n          //   const optionLabel = option?.[mergedFieldNames.value.label];\n          //   if (optionLabel !== undefined && optionLabel !== rawLabel) {\n          //     warning(false, '`label` of `value` is not same as `label` in Select options.');\n          //   }\n          // }\n        }\n\n        return {\n          label: rawLabel,\n          value: rawValue,\n          key: rawKey,\n          disabled: rawDisabled,\n          option: option\n        };\n      });\n    };\n    // =========================== Values ===========================\n    var _useMergedState3 = useMergedState(props.defaultValue, {\n        value: toRef(props, 'value')\n      }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      internalValue = _useMergedState4[0],\n      setInternalValue = _useMergedState4[1];\n    // Merged value with LabelValueType\n    var rawLabeledValues = computed(function () {\n      var _values$;\n      var values = convert2LabelValues(internalValue.value);\n      // combobox no need save value when it's empty\n      if (props.mode === 'combobox' && !((_values$ = values[0]) !== null && _values$ !== void 0 && _values$.value)) {\n        return [];\n      }\n      return values;\n    });\n    // Fill label with cache to avoid option remove\n    var _useCache = useCache(rawLabeledValues, valueOptions),\n      _useCache2 = _slicedToArray(_useCache, 2),\n      mergedValues = _useCache2[0],\n      getMixedOption = _useCache2[1];\n    var displayValues = computed(function () {\n      // `null` need show as placeholder instead\n      // https://github.com/ant-design/ant-design/issues/25057\n      if (!props.mode && mergedValues.value.length === 1) {\n        var firstValue = mergedValues.value[0];\n        if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n          return [];\n        }\n      }\n      return mergedValues.value.map(function (item) {\n        var _ref2;\n        return _objectSpread(_objectSpread({}, item), {}, {\n          label: (_ref2 = typeof item.label === 'function' ? item.label() : item.label) !== null && _ref2 !== void 0 ? _ref2 : item.value\n        });\n      });\n    });\n    /** Convert `displayValues` to raw value type set */\n    var rawValues = computed(function () {\n      return new Set(mergedValues.value.map(function (val) {\n        return val.value;\n      }));\n    });\n    watchEffect(function () {\n      if (props.mode === 'combobox') {\n        var _mergedValues$value$;\n        var strValue = (_mergedValues$value$ = mergedValues.value[0]) === null || _mergedValues$value$ === void 0 ? void 0 : _mergedValues$value$.value;\n        if (strValue !== undefined && strValue !== null) {\n          setSearchValue(String(strValue));\n        }\n      }\n    }, {\n      flush: 'post'\n    });\n    // ======================= Display Option =======================\n    // Create a placeholder item if not exist in `options`\n    var createTagOption = function createTagOption(val, label) {\n      var _ref3;\n      var mergedLabel = label !== null && label !== void 0 ? label : val;\n      return _ref3 = {}, _defineProperty(_ref3, mergedFieldNames.value.value, val), _defineProperty(_ref3, mergedFieldNames.value.label, mergedLabel), _ref3;\n    };\n    // Fill tag as option if mode is `tags`\n    var filledTagOptions = shallowRef();\n    watchEffect(function () {\n      if (props.mode !== 'tags') {\n        filledTagOptions.value = mergedOptions.value;\n        return;\n      }\n      // >>> Tag mode\n      var cloneOptions = mergedOptions.value.slice();\n      // Check if value exist in options (include new patch item)\n      var existOptions = function existOptions(val) {\n        return valueOptions.value.has(val);\n      };\n      // Fill current value as option\n      _toConsumableArray(mergedValues.value).sort(function (a, b) {\n        return a.value < b.value ? -1 : 1;\n      }).forEach(function (item) {\n        var val = item.value;\n        if (!existOptions(val)) {\n          cloneOptions.push(createTagOption(val, item.label));\n        }\n      });\n      filledTagOptions.value = cloneOptions;\n    });\n    var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, toRef(props, 'optionFilterProp'));\n    // Fill options with search value if needed\n    var filledSearchOptions = computed(function () {\n      if (props.mode !== 'tags' || !mergedSearchValue.value || filteredOptions.value.some(function (item) {\n        return item[props.optionFilterProp || 'value'] === mergedSearchValue.value;\n      })) {\n        return filteredOptions.value;\n      }\n      // Fill search value as option\n      return [createTagOption(mergedSearchValue.value)].concat(_toConsumableArray(filteredOptions.value));\n    });\n    var orderedFilteredOptions = computed(function () {\n      if (!props.filterSort) {\n        return filledSearchOptions.value;\n      }\n      return _toConsumableArray(filledSearchOptions.value).sort(function (a, b) {\n        return props.filterSort(a, b);\n      });\n    });\n    var displayOptions = computed(function () {\n      return flattenOptions(orderedFilteredOptions.value, {\n        fieldNames: mergedFieldNames.value,\n        childrenAsData: childrenAsData.value\n      });\n    });\n    // =========================== Change ===========================\n    var triggerChange = function triggerChange(values) {\n      var labeledValues = convert2LabelValues(values);\n      setInternalValue(labeledValues);\n      if (props.onChange && (\n      // Trigger event only when value changed\n      labeledValues.length !== mergedValues.value.length || labeledValues.some(function (newVal, index) {\n        var _mergedValues$value$i;\n        return ((_mergedValues$value$i = mergedValues.value[index]) === null || _mergedValues$value$i === void 0 ? void 0 : _mergedValues$value$i.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n      }))) {\n        var returnValues = props.labelInValue ? labeledValues.map(function (v) {\n          return _objectSpread(_objectSpread({}, v), {}, {\n            originLabel: v.label,\n            label: typeof v.label === 'function' ? v.label() : v.label\n          });\n        }) : labeledValues.map(function (v) {\n          return v.value;\n        });\n        var returnOptions = labeledValues.map(function (v) {\n          return injectPropsWithOption(getMixedOption(v.value));\n        });\n        props.onChange(\n        // Value\n        multiple.value ? returnValues : returnValues[0],\n        // Option\n        multiple.value ? returnOptions : returnOptions[0]);\n      }\n    };\n    // ======================= Accessibility ========================\n    var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeValue = _useState2[0],\n      setActiveValue = _useState2[1];\n    var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      accessibilityIndex = _useState4[0],\n      setAccessibilityIndex = _useState4[1];\n    var mergedDefaultActiveFirstOption = computed(function () {\n      return props.defaultActiveFirstOption !== undefined ? props.defaultActiveFirstOption : props.mode !== 'combobox';\n    });\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref4$source = _ref4.source,\n        source = _ref4$source === void 0 ? 'keyboard' : _ref4$source;\n      setAccessibilityIndex(index);\n      if (props.backfill && props.mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    };\n    // ========================= OptionList =========================\n    var triggerSelect = function triggerSelect(val, selected) {\n      var getSelectEnt = function getSelectEnt() {\n        var _option$key2;\n        var option = getMixedOption(val);\n        var originLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.value.label];\n        return [props.labelInValue ? {\n          label: typeof originLabel === 'function' ? originLabel() : originLabel,\n          originLabel: originLabel,\n          value: val,\n          key: (_option$key2 = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key2 !== void 0 ? _option$key2 : val\n        } : val, injectPropsWithOption(option)];\n      };\n      if (selected && props.onSelect) {\n        var _getSelectEnt = getSelectEnt(),\n          _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n          wrappedValue = _getSelectEnt2[0],\n          option = _getSelectEnt2[1];\n        props.onSelect(wrappedValue, option);\n      } else if (!selected && props.onDeselect) {\n        var _getSelectEnt3 = getSelectEnt(),\n          _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n          _wrappedValue = _getSelectEnt4[0],\n          _option = _getSelectEnt4[1];\n        props.onDeselect(_wrappedValue, _option);\n      }\n    };\n    // Used for OptionList selection\n    var onInternalSelect = function onInternalSelect(val, info) {\n      var cloneValues;\n      // Single mode always trigger select only with option list\n      var mergedSelect = multiple.value ? info.selected : true;\n      if (mergedSelect) {\n        cloneValues = multiple.value ? [].concat(_toConsumableArray(mergedValues.value), [val]) : [val];\n      } else {\n        cloneValues = mergedValues.value.filter(function (v) {\n          return v.value !== val;\n        });\n      }\n      triggerChange(cloneValues);\n      triggerSelect(val, mergedSelect);\n      // Clean search value if single or configured\n      if (props.mode === 'combobox') {\n        // setSearchValue(String(val));\n        setActiveValue('');\n      } else if (!multiple.value || props.autoClearSearchValue) {\n        setSearchValue('');\n        setActiveValue('');\n      }\n    };\n    // ======================= Display Change =======================\n    // BaseSelect display values change\n    var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n      triggerChange(nextValues);\n      if (info.type === 'remove' || info.type === 'clear') {\n        info.values.forEach(function (item) {\n          triggerSelect(item.value, false);\n        });\n      }\n    };\n    // =========================== Search ===========================\n    var onInternalSearch = function onInternalSearch(searchText, info) {\n      setSearchValue(searchText);\n      setActiveValue(null);\n      // [Submit] Tag mode should flush input\n      if (info.source === 'submit') {\n        var formatted = (searchText || '').trim();\n        // prevent empty tags from appearing when you click the Enter button\n        if (formatted) {\n          var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), [formatted])));\n          triggerChange(newRawValues);\n          triggerSelect(formatted, true);\n          setSearchValue('');\n        }\n        return;\n      }\n      if (info.source !== 'blur') {\n        var _props$onSearch;\n        if (props.mode === 'combobox') {\n          triggerChange(searchText);\n        }\n        (_props$onSearch = props.onSearch) === null || _props$onSearch === void 0 ? void 0 : _props$onSearch.call(props, searchText);\n      }\n    };\n    var onInternalSearchSplit = function onInternalSearchSplit(words) {\n      var patchValues = words;\n      if (props.mode !== 'tags') {\n        patchValues = words.map(function (word) {\n          var opt = labelOptions.value.get(word);\n          return opt === null || opt === void 0 ? void 0 : opt.value;\n        }).filter(function (val) {\n          return val !== undefined;\n        });\n      }\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), _toConsumableArray(patchValues))));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true);\n      });\n    };\n    var realVirtual = computed(function () {\n      return props.virtual !== false && props.dropdownMatchSelectWidth !== false;\n    });\n    useProvideSelectProps(toReactive(_objectSpread(_objectSpread({}, parsedOptions), {}, {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: toRef(props, 'menuItemSelectedIcon'),\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      listHeight: toRef(props, 'listHeight'),\n      listItemHeight: toRef(props, 'listItemHeight'),\n      childrenAsData: childrenAsData\n    })));\n    // ========================== Warning ===========================\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(function () {\n        warningProps(props);\n      }, {\n        flush: 'post'\n      });\n    }\n    var selectRef = ref();\n    expose({\n      focus: function focus() {\n        var _selectRef$value;\n        (_selectRef$value = selectRef.value) === null || _selectRef$value === void 0 ? void 0 : _selectRef$value.focus();\n      },\n      blur: function blur() {\n        var _selectRef$value2;\n        (_selectRef$value2 = selectRef.value) === null || _selectRef$value2 === void 0 ? void 0 : _selectRef$value2.blur();\n      },\n      scrollTo: function scrollTo(arg) {\n        var _selectRef$value3;\n        (_selectRef$value3 = selectRef.value) === null || _selectRef$value3 === void 0 ? void 0 : _selectRef$value3.scrollTo(arg);\n      }\n    });\n    var pickProps = computed(function () {\n      return omit(props, ['id', 'mode', 'prefixCls', 'backfill', 'fieldNames',\n      // Search\n      'inputValue', 'searchValue', 'onSearch', 'autoClearSearchValue',\n      // Select\n      'onSelect', 'onDeselect', 'dropdownMatchSelectWidth',\n      // Options\n      'filterOption', 'filterSort', 'optionFilterProp', 'optionLabelProp', 'options', 'children', 'defaultActiveFirstOption', 'menuItemSelectedIcon', 'virtual', 'listHeight', 'listItemHeight',\n      // Value\n      'value', 'defaultValue', 'labelInValue', 'onChange']);\n    });\n    return function () {\n      return _createVNode(BaseSelect, _objectSpread(_objectSpread(_objectSpread({}, pickProps.value), attrs), {}, {\n        \"id\": mergedId,\n        \"prefixCls\": props.prefixCls,\n        \"ref\": selectRef,\n        \"omitDomProps\": OMIT_DOM_PROPS,\n        \"mode\": props.mode,\n        \"displayValues\": displayValues.value,\n        \"onDisplayValuesChange\": onDisplayValuesChange,\n        \"searchValue\": mergedSearchValue.value,\n        \"onSearch\": onInternalSearch,\n        \"onSearchSplit\": onInternalSearchSplit,\n        \"dropdownMatchSelectWidth\": props.dropdownMatchSelectWidth,\n        \"OptionList\": OptionList,\n        \"emptyOptions\": !displayOptions.value.length,\n        \"activeValue\": activeValue.value,\n        \"activeDescendantId\": \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex.value)\n      }), slots);\n    };\n  }\n});","map":{"version":3,"names":["_toConsumableArray","_defineProperty","_slicedToArray","_typeof","_objectSpread","createVNode","_createVNode","resolveDirective","_resolveDirective","BaseSelect","baseSelectPropsWithoutPrivate","isMultiple","OptionList","useOptions","useProvideSelectProps","useId","fillFieldNames","flattenOptions","injectPropsWithOption","warningProps","toArray","useFilterOptions","useCache","computed","defineComponent","ref","shallowRef","toRef","watchEffect","PropTypes","initDefaultProps","useMergedState","useState","toReactive","omit","OMIT_DOM_PROPS","selectProps","prefixCls","String","id","backfill","type","Boolean","default","undefined","fieldNames","Object","inputValue","searchValue","onSearch","Function","autoClearSearchValue","onSelect","onDeselect","filterOption","filterSort","optionFilterProp","optionLabelProp","options","Array","defaultActiveFirstOption","virtual","listHeight","Number","listItemHeight","menuItemSelectedIcon","any","mode","labelInValue","value","defaultValue","onChange","children","isRawValue","compatConfig","MODE","name","inheritAttrs","props","dropdownMatchSelectWidth","setup","_ref","expose","attrs","slots","mergedId","multiple","childrenAsData","mergedFilterOption","mergedFieldNames","_useMergedState","postState","search","_useMergedState2","mergedSearchValue","setSearchValue","parsedOptions","valueOptions","labelOptions","mergedOptions","convert2LabelValues","draftValues","valueList","map","val","rawValue","rawLabel","rawKey","rawDisabled","_val$value","key","label","option","get","_option$key","disabled","_useMergedState3","_useMergedState4","internalValue","setInternalValue","rawLabeledValues","_values$","values","_useCache","_useCache2","mergedValues","getMixedOption","displayValues","length","firstValue","item","_ref2","rawValues","Set","_mergedValues$value$","strValue","flush","createTagOption","_ref3","mergedLabel","filledTagOptions","cloneOptions","slice","existOptions","has","sort","a","b","forEach","push","filteredOptions","filledSearchOptions","some","concat","orderedFilteredOptions","displayOptions","triggerChange","labeledValues","newVal","index","_mergedValues$value$i","returnValues","v","originLabel","returnOptions","_useState","_useState2","activeValue","setActiveValue","_useState3","_useState4","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_ref4","arguments","_ref4$source","source","triggerSelect","selected","getSelectEnt","_option$key2","_getSelectEnt","_getSelectEnt2","wrappedValue","_getSelectEnt3","_getSelectEnt4","_wrappedValue","_option","onInternalSelect","info","cloneValues","mergedSelect","filter","onDisplayValuesChange","nextValues","onInternalSearch","searchText","formatted","trim","newRawValues","from","_props$onSearch","call","onInternalSearchSplit","words","patchValues","word","opt","newRawValue","realVirtual","process","env","NODE_ENV","selectRef","focus","_selectRef$value","blur","_selectRef$value2","scrollTo","arg","_selectRef$value3","pickProps"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/vc-select/Select.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabindex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\nimport BaseSelect, { baseSelectPropsWithoutPrivate, isMultiple } from './BaseSelect';\nimport OptionList from './OptionList';\nimport useOptions from './hooks/useOptions';\nimport { useProvideSelectProps } from './SelectContext';\nimport useId from './hooks/useId';\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from './utils/valueUtil';\nimport warningProps from './utils/warningPropsUtil';\nimport { toArray } from './utils/commonUtil';\nimport useFilterOptions from './hooks/useFilterOptions';\nimport useCache from './hooks/useCache';\nimport { computed, defineComponent, ref, shallowRef, toRef, watchEffect } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { initDefaultProps } from '../_util/props-util';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport useState from '../_util/hooks/useState';\nimport { toReactive } from '../_util/toReactive';\nimport omit from '../_util/omit';\nvar OMIT_DOM_PROPS = ['inputValue'];\nexport function selectProps() {\n  return _objectSpread(_objectSpread({}, baseSelectPropsWithoutPrivate()), {}, {\n    prefixCls: String,\n    id: String,\n    backfill: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Field Names\n    fieldNames: Object,\n    // >>> Search\n    /** @deprecated Use `searchValue` instead */\n    inputValue: String,\n    searchValue: String,\n    onSearch: Function,\n    autoClearSearchValue: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Select\n    onSelect: Function,\n    onDeselect: Function,\n    // >>> Options\n    /**\n     * In Select, `false` means do nothing.\n     * In TreeSelect, `false` will highlight match item.\n     * It's by design.\n     */\n    filterOption: {\n      type: [Boolean, Function],\n      default: undefined\n    },\n    filterSort: Function,\n    optionFilterProp: String,\n    optionLabelProp: String,\n    options: Array,\n    defaultActiveFirstOption: {\n      type: Boolean,\n      default: undefined\n    },\n    virtual: {\n      type: Boolean,\n      default: undefined\n    },\n    listHeight: Number,\n    listItemHeight: Number,\n    // >>> Icon\n    menuItemSelectedIcon: PropTypes.any,\n    mode: String,\n    labelInValue: {\n      type: Boolean,\n      default: undefined\n    },\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    onChange: Function,\n    children: Array\n  });\n}\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Select',\n  inheritAttrs: false,\n  props: initDefaultProps(selectProps(), {\n    prefixCls: 'vc-select',\n    autoClearSearchValue: true,\n    listHeight: 200,\n    listItemHeight: 20,\n    dropdownMatchSelectWidth: true\n  }),\n  setup: function setup(props, _ref) {\n    var expose = _ref.expose,\n      attrs = _ref.attrs,\n      slots = _ref.slots;\n    var mergedId = useId(toRef(props, 'id'));\n    var multiple = computed(function () {\n      return isMultiple(props.mode);\n    });\n    var childrenAsData = computed(function () {\n      return !!(!props.options && props.children);\n    });\n    var mergedFilterOption = computed(function () {\n      if (props.filterOption === undefined && props.mode === 'combobox') {\n        return false;\n      }\n      return props.filterOption;\n    });\n    // ========================= FieldNames =========================\n    var mergedFieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames, childrenAsData.value);\n    });\n    // =========================== Search ===========================\n    var _useMergedState = useMergedState('', {\n        value: computed(function () {\n          return props.searchValue !== undefined ? props.searchValue : props.inputValue;\n        }),\n        postState: function postState(search) {\n          return search || '';\n        }\n      }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1];\n    // =========================== Option ===========================\n    var parsedOptions = useOptions(toRef(props, 'options'), toRef(props, 'children'), mergedFieldNames);\n    var valueOptions = parsedOptions.valueOptions,\n      labelOptions = parsedOptions.labelOptions,\n      mergedOptions = parsedOptions.options;\n    // ========================= Wrap Value =========================\n    var convert2LabelValues = function convert2LabelValues(draftValues) {\n      // Convert to array\n      var valueList = toArray(draftValues);\n      // Convert to labelInValue type\n      return valueList.map(function (val) {\n        var rawValue;\n        var rawLabel;\n        var rawKey;\n        var rawDisabled;\n        // Fill label & value\n        if (isRawValue(val)) {\n          rawValue = val;\n        } else {\n          var _val$value;\n          rawKey = val.key;\n          rawLabel = val.label;\n          rawValue = (_val$value = val.value) !== null && _val$value !== void 0 ? _val$value : rawKey;\n        }\n        var option = valueOptions.value.get(rawValue);\n        if (option) {\n          var _option$key;\n          // Fill missing props\n          if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[props.optionLabelProp || mergedFieldNames.value.label];\n          if (rawKey === undefined) rawKey = (_option$key = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key !== void 0 ? _option$key : rawValue;\n          rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n          // Warning if label not same as provided\n          // if (process.env.NODE_ENV !== 'production' && !isRawValue(val)) {\n          //   const optionLabel = option?.[mergedFieldNames.value.label];\n          //   if (optionLabel !== undefined && optionLabel !== rawLabel) {\n          //     warning(false, '`label` of `value` is not same as `label` in Select options.');\n          //   }\n          // }\n        }\n\n        return {\n          label: rawLabel,\n          value: rawValue,\n          key: rawKey,\n          disabled: rawDisabled,\n          option: option\n        };\n      });\n    };\n    // =========================== Values ===========================\n    var _useMergedState3 = useMergedState(props.defaultValue, {\n        value: toRef(props, 'value')\n      }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      internalValue = _useMergedState4[0],\n      setInternalValue = _useMergedState4[1];\n    // Merged value with LabelValueType\n    var rawLabeledValues = computed(function () {\n      var _values$;\n      var values = convert2LabelValues(internalValue.value);\n      // combobox no need save value when it's empty\n      if (props.mode === 'combobox' && !((_values$ = values[0]) !== null && _values$ !== void 0 && _values$.value)) {\n        return [];\n      }\n      return values;\n    });\n    // Fill label with cache to avoid option remove\n    var _useCache = useCache(rawLabeledValues, valueOptions),\n      _useCache2 = _slicedToArray(_useCache, 2),\n      mergedValues = _useCache2[0],\n      getMixedOption = _useCache2[1];\n    var displayValues = computed(function () {\n      // `null` need show as placeholder instead\n      // https://github.com/ant-design/ant-design/issues/25057\n      if (!props.mode && mergedValues.value.length === 1) {\n        var firstValue = mergedValues.value[0];\n        if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n          return [];\n        }\n      }\n      return mergedValues.value.map(function (item) {\n        var _ref2;\n        return _objectSpread(_objectSpread({}, item), {}, {\n          label: (_ref2 = typeof item.label === 'function' ? item.label() : item.label) !== null && _ref2 !== void 0 ? _ref2 : item.value\n        });\n      });\n    });\n    /** Convert `displayValues` to raw value type set */\n    var rawValues = computed(function () {\n      return new Set(mergedValues.value.map(function (val) {\n        return val.value;\n      }));\n    });\n    watchEffect(function () {\n      if (props.mode === 'combobox') {\n        var _mergedValues$value$;\n        var strValue = (_mergedValues$value$ = mergedValues.value[0]) === null || _mergedValues$value$ === void 0 ? void 0 : _mergedValues$value$.value;\n        if (strValue !== undefined && strValue !== null) {\n          setSearchValue(String(strValue));\n        }\n      }\n    }, {\n      flush: 'post'\n    });\n    // ======================= Display Option =======================\n    // Create a placeholder item if not exist in `options`\n    var createTagOption = function createTagOption(val, label) {\n      var _ref3;\n      var mergedLabel = label !== null && label !== void 0 ? label : val;\n      return _ref3 = {}, _defineProperty(_ref3, mergedFieldNames.value.value, val), _defineProperty(_ref3, mergedFieldNames.value.label, mergedLabel), _ref3;\n    };\n    // Fill tag as option if mode is `tags`\n    var filledTagOptions = shallowRef();\n    watchEffect(function () {\n      if (props.mode !== 'tags') {\n        filledTagOptions.value = mergedOptions.value;\n        return;\n      }\n      // >>> Tag mode\n      var cloneOptions = mergedOptions.value.slice();\n      // Check if value exist in options (include new patch item)\n      var existOptions = function existOptions(val) {\n        return valueOptions.value.has(val);\n      };\n      // Fill current value as option\n      _toConsumableArray(mergedValues.value).sort(function (a, b) {\n        return a.value < b.value ? -1 : 1;\n      }).forEach(function (item) {\n        var val = item.value;\n        if (!existOptions(val)) {\n          cloneOptions.push(createTagOption(val, item.label));\n        }\n      });\n      filledTagOptions.value = cloneOptions;\n    });\n    var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, toRef(props, 'optionFilterProp'));\n    // Fill options with search value if needed\n    var filledSearchOptions = computed(function () {\n      if (props.mode !== 'tags' || !mergedSearchValue.value || filteredOptions.value.some(function (item) {\n        return item[props.optionFilterProp || 'value'] === mergedSearchValue.value;\n      })) {\n        return filteredOptions.value;\n      }\n      // Fill search value as option\n      return [createTagOption(mergedSearchValue.value)].concat(_toConsumableArray(filteredOptions.value));\n    });\n    var orderedFilteredOptions = computed(function () {\n      if (!props.filterSort) {\n        return filledSearchOptions.value;\n      }\n      return _toConsumableArray(filledSearchOptions.value).sort(function (a, b) {\n        return props.filterSort(a, b);\n      });\n    });\n    var displayOptions = computed(function () {\n      return flattenOptions(orderedFilteredOptions.value, {\n        fieldNames: mergedFieldNames.value,\n        childrenAsData: childrenAsData.value\n      });\n    });\n    // =========================== Change ===========================\n    var triggerChange = function triggerChange(values) {\n      var labeledValues = convert2LabelValues(values);\n      setInternalValue(labeledValues);\n      if (props.onChange && (\n      // Trigger event only when value changed\n      labeledValues.length !== mergedValues.value.length || labeledValues.some(function (newVal, index) {\n        var _mergedValues$value$i;\n        return ((_mergedValues$value$i = mergedValues.value[index]) === null || _mergedValues$value$i === void 0 ? void 0 : _mergedValues$value$i.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n      }))) {\n        var returnValues = props.labelInValue ? labeledValues.map(function (v) {\n          return _objectSpread(_objectSpread({}, v), {}, {\n            originLabel: v.label,\n            label: typeof v.label === 'function' ? v.label() : v.label\n          });\n        }) : labeledValues.map(function (v) {\n          return v.value;\n        });\n        var returnOptions = labeledValues.map(function (v) {\n          return injectPropsWithOption(getMixedOption(v.value));\n        });\n        props.onChange(\n        // Value\n        multiple.value ? returnValues : returnValues[0],\n        // Option\n        multiple.value ? returnOptions : returnOptions[0]);\n      }\n    };\n    // ======================= Accessibility ========================\n    var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeValue = _useState2[0],\n      setActiveValue = _useState2[1];\n    var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      accessibilityIndex = _useState4[0],\n      setAccessibilityIndex = _useState4[1];\n    var mergedDefaultActiveFirstOption = computed(function () {\n      return props.defaultActiveFirstOption !== undefined ? props.defaultActiveFirstOption : props.mode !== 'combobox';\n    });\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref4$source = _ref4.source,\n        source = _ref4$source === void 0 ? 'keyboard' : _ref4$source;\n      setAccessibilityIndex(index);\n      if (props.backfill && props.mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    };\n    // ========================= OptionList =========================\n    var triggerSelect = function triggerSelect(val, selected) {\n      var getSelectEnt = function getSelectEnt() {\n        var _option$key2;\n        var option = getMixedOption(val);\n        var originLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.value.label];\n        return [props.labelInValue ? {\n          label: typeof originLabel === 'function' ? originLabel() : originLabel,\n          originLabel: originLabel,\n          value: val,\n          key: (_option$key2 = option === null || option === void 0 ? void 0 : option.key) !== null && _option$key2 !== void 0 ? _option$key2 : val\n        } : val, injectPropsWithOption(option)];\n      };\n      if (selected && props.onSelect) {\n        var _getSelectEnt = getSelectEnt(),\n          _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n          wrappedValue = _getSelectEnt2[0],\n          option = _getSelectEnt2[1];\n        props.onSelect(wrappedValue, option);\n      } else if (!selected && props.onDeselect) {\n        var _getSelectEnt3 = getSelectEnt(),\n          _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n          _wrappedValue = _getSelectEnt4[0],\n          _option = _getSelectEnt4[1];\n        props.onDeselect(_wrappedValue, _option);\n      }\n    };\n    // Used for OptionList selection\n    var onInternalSelect = function onInternalSelect(val, info) {\n      var cloneValues;\n      // Single mode always trigger select only with option list\n      var mergedSelect = multiple.value ? info.selected : true;\n      if (mergedSelect) {\n        cloneValues = multiple.value ? [].concat(_toConsumableArray(mergedValues.value), [val]) : [val];\n      } else {\n        cloneValues = mergedValues.value.filter(function (v) {\n          return v.value !== val;\n        });\n      }\n      triggerChange(cloneValues);\n      triggerSelect(val, mergedSelect);\n      // Clean search value if single or configured\n      if (props.mode === 'combobox') {\n        // setSearchValue(String(val));\n        setActiveValue('');\n      } else if (!multiple.value || props.autoClearSearchValue) {\n        setSearchValue('');\n        setActiveValue('');\n      }\n    };\n    // ======================= Display Change =======================\n    // BaseSelect display values change\n    var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n      triggerChange(nextValues);\n      if (info.type === 'remove' || info.type === 'clear') {\n        info.values.forEach(function (item) {\n          triggerSelect(item.value, false);\n        });\n      }\n    };\n    // =========================== Search ===========================\n    var onInternalSearch = function onInternalSearch(searchText, info) {\n      setSearchValue(searchText);\n      setActiveValue(null);\n      // [Submit] Tag mode should flush input\n      if (info.source === 'submit') {\n        var formatted = (searchText || '').trim();\n        // prevent empty tags from appearing when you click the Enter button\n        if (formatted) {\n          var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), [formatted])));\n          triggerChange(newRawValues);\n          triggerSelect(formatted, true);\n          setSearchValue('');\n        }\n        return;\n      }\n      if (info.source !== 'blur') {\n        var _props$onSearch;\n        if (props.mode === 'combobox') {\n          triggerChange(searchText);\n        }\n        (_props$onSearch = props.onSearch) === null || _props$onSearch === void 0 ? void 0 : _props$onSearch.call(props, searchText);\n      }\n    };\n    var onInternalSearchSplit = function onInternalSearchSplit(words) {\n      var patchValues = words;\n      if (props.mode !== 'tags') {\n        patchValues = words.map(function (word) {\n          var opt = labelOptions.value.get(word);\n          return opt === null || opt === void 0 ? void 0 : opt.value;\n        }).filter(function (val) {\n          return val !== undefined;\n        });\n      }\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), _toConsumableArray(patchValues))));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true);\n      });\n    };\n    var realVirtual = computed(function () {\n      return props.virtual !== false && props.dropdownMatchSelectWidth !== false;\n    });\n    useProvideSelectProps(toReactive(_objectSpread(_objectSpread({}, parsedOptions), {}, {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: toRef(props, 'menuItemSelectedIcon'),\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      listHeight: toRef(props, 'listHeight'),\n      listItemHeight: toRef(props, 'listItemHeight'),\n      childrenAsData: childrenAsData\n    })));\n    // ========================== Warning ===========================\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(function () {\n        warningProps(props);\n      }, {\n        flush: 'post'\n      });\n    }\n    var selectRef = ref();\n    expose({\n      focus: function focus() {\n        var _selectRef$value;\n        (_selectRef$value = selectRef.value) === null || _selectRef$value === void 0 ? void 0 : _selectRef$value.focus();\n      },\n      blur: function blur() {\n        var _selectRef$value2;\n        (_selectRef$value2 = selectRef.value) === null || _selectRef$value2 === void 0 ? void 0 : _selectRef$value2.blur();\n      },\n      scrollTo: function scrollTo(arg) {\n        var _selectRef$value3;\n        (_selectRef$value3 = selectRef.value) === null || _selectRef$value3 === void 0 ? void 0 : _selectRef$value3.scrollTo(arg);\n      }\n    });\n    var pickProps = computed(function () {\n      return omit(props, ['id', 'mode', 'prefixCls', 'backfill', 'fieldNames',\n      // Search\n      'inputValue', 'searchValue', 'onSearch', 'autoClearSearchValue',\n      // Select\n      'onSelect', 'onDeselect', 'dropdownMatchSelectWidth',\n      // Options\n      'filterOption', 'filterSort', 'optionFilterProp', 'optionLabelProp', 'options', 'children', 'defaultActiveFirstOption', 'menuItemSelectedIcon', 'virtual', 'listHeight', 'listItemHeight',\n      // Value\n      'value', 'defaultValue', 'labelInValue', 'onChange']);\n    });\n    return function () {\n      return _createVNode(BaseSelect, _objectSpread(_objectSpread(_objectSpread({}, pickProps.value), attrs), {}, {\n        \"id\": mergedId,\n        \"prefixCls\": props.prefixCls,\n        \"ref\": selectRef,\n        \"omitDomProps\": OMIT_DOM_PROPS,\n        \"mode\": props.mode,\n        \"displayValues\": displayValues.value,\n        \"onDisplayValuesChange\": onDisplayValuesChange,\n        \"searchValue\": mergedSearchValue.value,\n        \"onSearch\": onInternalSearch,\n        \"onSearchSplit\": onInternalSearchSplit,\n        \"dropdownMatchSelectWidth\": props.dropdownMatchSelectWidth,\n        \"OptionList\": OptionList,\n        \"emptyOptions\": !displayOptions.value.length,\n        \"activeValue\": activeValue.value,\n        \"activeDescendantId\": \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex.value)\n      }), slots);\n    };\n  }\n});"],"mappings":";AAAA,OAAOA,kBAAkB,MAAM,8CAA8C;AAC7E,OAAOC,eAAe,MAAM,2CAA2C;AACvE,OAAOC,cAAc,MAAM,0CAA0C;AACrE,OAAOC,OAAO,MAAM,mCAAmC;AACvD,OAAOC,aAAa,MAAM,0CAA0C;AACpE,SAASC,WAAW,IAAIC,YAAY,EAAEC,gBAAgB,IAAIC,iBAAiB,QAAQ,KAAK;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOC,UAAU,IAAIC,6BAA6B,EAAEC,UAAU,QAAQ,cAAc;AACpF,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,SAASC,qBAAqB,QAAQ,iBAAiB;AACvD,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,cAAc,EAAEC,cAAc,EAAEC,qBAAqB,QAAQ,mBAAmB;AACzF,OAAOC,YAAY,MAAM,0BAA0B;AACnD,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,gBAAgB,MAAM,0BAA0B;AACvD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,EAAEC,eAAe,EAAEC,GAAG,EAAEC,UAAU,EAAEC,KAAK,EAAEC,WAAW,QAAQ,KAAK;AACpF,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,OAAOC,cAAc,MAAM,+BAA+B;AAC1D,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAOC,IAAI,MAAM,eAAe;AAChC,IAAIC,cAAc,GAAG,CAAC,YAAY,CAAC;AACnC,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,OAAOhC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEM,6BAA6B,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IAC3E2B,SAAS,EAAEC,MAAM;IACjBC,EAAE,EAAED,MAAM;IACVE,QAAQ,EAAE;MACRC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAEC;IACX,CAAC;IACD;IACAC,UAAU,EAAEC,MAAM;IAClB;IACA;IACAC,UAAU,EAAET,MAAM;IAClBU,WAAW,EAAEV,MAAM;IACnBW,QAAQ,EAAEC,QAAQ;IAClBC,oBAAoB,EAAE;MACpBV,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAEC;IACX,CAAC;IACD;IACAQ,QAAQ,EAAEF,QAAQ;IAClBG,UAAU,EAAEH,QAAQ;IACpB;IACA;AACJ;AACA;AACA;AACA;IACII,YAAY,EAAE;MACZb,IAAI,EAAE,CAACC,OAAO,EAAEQ,QAAQ,CAAC;MACzBP,OAAO,EAAEC;IACX,CAAC;IACDW,UAAU,EAAEL,QAAQ;IACpBM,gBAAgB,EAAElB,MAAM;IACxBmB,eAAe,EAAEnB,MAAM;IACvBoB,OAAO,EAAEC,KAAK;IACdC,wBAAwB,EAAE;MACxBnB,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAEC;IACX,CAAC;IACDiB,OAAO,EAAE;MACPpB,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAEC;IACX,CAAC;IACDkB,UAAU,EAAEC,MAAM;IAClBC,cAAc,EAAED,MAAM;IACtB;IACAE,oBAAoB,EAAEpC,SAAS,CAACqC,GAAG;IACnCC,IAAI,EAAE7B,MAAM;IACZ8B,YAAY,EAAE;MACZ3B,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAEC;IACX,CAAC;IACDyB,KAAK,EAAExC,SAAS,CAACqC,GAAG;IACpBI,YAAY,EAAEzC,SAAS,CAACqC,GAAG;IAC3BK,QAAQ,EAAErB,QAAQ;IAClBsB,QAAQ,EAAEb;EACZ,CAAC,CAAC;AACJ;AACA,SAASc,UAAUA,CAACJ,KAAK,EAAE;EACzB,OAAO,CAACA,KAAK,IAAIlE,OAAO,CAACkE,KAAK,CAAC,KAAK,QAAQ;AAC9C;AACA,eAAe7C,eAAe,CAAC;EAC7BkD,YAAY,EAAE;IACZC,IAAI,EAAE;EACR,CAAC;EACDC,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAEhD,gBAAgB,CAACM,WAAW,EAAE,EAAE;IACrCC,SAAS,EAAE,WAAW;IACtBc,oBAAoB,EAAE,IAAI;IAC1BW,UAAU,EAAE,GAAG;IACfE,cAAc,EAAE,EAAE;IAClBe,wBAAwB,EAAE;EAC5B,CAAC,CAAC;EACFC,KAAK,EAAE,SAASA,KAAKA,CAACF,KAAK,EAAEG,IAAI,EAAE;IACjC,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;MACtBC,KAAK,GAAGF,IAAI,CAACE,KAAK;MAClBC,KAAK,GAAGH,IAAI,CAACG,KAAK;IACpB,IAAIC,QAAQ,GAAGtE,KAAK,CAACY,KAAK,CAACmD,KAAK,EAAE,IAAI,CAAC,CAAC;IACxC,IAAIQ,QAAQ,GAAG/D,QAAQ,CAAC,YAAY;MAClC,OAAOZ,UAAU,CAACmE,KAAK,CAACX,IAAI,CAAC;IAC/B,CAAC,CAAC;IACF,IAAIoB,cAAc,GAAGhE,QAAQ,CAAC,YAAY;MACxC,OAAO,CAAC,EAAE,CAACuD,KAAK,CAACpB,OAAO,IAAIoB,KAAK,CAACN,QAAQ,CAAC;IAC7C,CAAC,CAAC;IACF,IAAIgB,kBAAkB,GAAGjE,QAAQ,CAAC,YAAY;MAC5C,IAAIuD,KAAK,CAACxB,YAAY,KAAKV,SAAS,IAAIkC,KAAK,CAACX,IAAI,KAAK,UAAU,EAAE;QACjE,OAAO,KAAK;MACd;MACA,OAAOW,KAAK,CAACxB,YAAY;IAC3B,CAAC,CAAC;IACF;IACA,IAAImC,gBAAgB,GAAGlE,QAAQ,CAAC,YAAY;MAC1C,OAAOP,cAAc,CAAC8D,KAAK,CAACjC,UAAU,EAAE0C,cAAc,CAAClB,KAAK,CAAC;IAC/D,CAAC,CAAC;IACF;IACA,IAAIqB,eAAe,GAAG3D,cAAc,CAAC,EAAE,EAAE;QACrCsC,KAAK,EAAE9C,QAAQ,CAAC,YAAY;UAC1B,OAAOuD,KAAK,CAAC9B,WAAW,KAAKJ,SAAS,GAAGkC,KAAK,CAAC9B,WAAW,GAAG8B,KAAK,CAAC/B,UAAU;QAC/E,CAAC,CAAC;QACF4C,SAAS,EAAE,SAASA,SAASA,CAACC,MAAM,EAAE;UACpC,OAAOA,MAAM,IAAI,EAAE;QACrB;MACF,CAAC,CAAC;MACFC,gBAAgB,GAAG3F,cAAc,CAACwF,eAAe,EAAE,CAAC,CAAC;MACrDI,iBAAiB,GAAGD,gBAAgB,CAAC,CAAC,CAAC;MACvCE,cAAc,GAAGF,gBAAgB,CAAC,CAAC,CAAC;IACtC;IACA,IAAIG,aAAa,GAAGnF,UAAU,CAACc,KAAK,CAACmD,KAAK,EAAE,SAAS,CAAC,EAAEnD,KAAK,CAACmD,KAAK,EAAE,UAAU,CAAC,EAAEW,gBAAgB,CAAC;IACnG,IAAIQ,YAAY,GAAGD,aAAa,CAACC,YAAY;MAC3CC,YAAY,GAAGF,aAAa,CAACE,YAAY;MACzCC,aAAa,GAAGH,aAAa,CAACtC,OAAO;IACvC;IACA,IAAI0C,mBAAmB,GAAG,SAASA,mBAAmBA,CAACC,WAAW,EAAE;MAClE;MACA,IAAIC,SAAS,GAAGlF,OAAO,CAACiF,WAAW,CAAC;MACpC;MACA,OAAOC,SAAS,CAACC,GAAG,CAAC,UAAUC,GAAG,EAAE;QAClC,IAAIC,QAAQ;QACZ,IAAIC,QAAQ;QACZ,IAAIC,MAAM;QACV,IAAIC,WAAW;QACf;QACA,IAAInC,UAAU,CAAC+B,GAAG,CAAC,EAAE;UACnBC,QAAQ,GAAGD,GAAG;QAChB,CAAC,MAAM;UACL,IAAIK,UAAU;UACdF,MAAM,GAAGH,GAAG,CAACM,GAAG;UAChBJ,QAAQ,GAAGF,GAAG,CAACO,KAAK;UACpBN,QAAQ,GAAG,CAACI,UAAU,GAAGL,GAAG,CAACnC,KAAK,MAAM,IAAI,IAAIwC,UAAU,KAAK,KAAK,CAAC,GAAGA,UAAU,GAAGF,MAAM;QAC7F;QACA,IAAIK,MAAM,GAAGf,YAAY,CAAC5B,KAAK,CAAC4C,GAAG,CAACR,QAAQ,CAAC;QAC7C,IAAIO,MAAM,EAAE;UACV,IAAIE,WAAW;UACf;UACA,IAAIR,QAAQ,KAAK9D,SAAS,EAAE8D,QAAQ,GAAGM,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAClC,KAAK,CAACrB,eAAe,IAAIgC,gBAAgB,CAACpB,KAAK,CAAC0C,KAAK,CAAC;UACpJ,IAAIJ,MAAM,KAAK/D,SAAS,EAAE+D,MAAM,GAAG,CAACO,WAAW,GAAGF,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACF,GAAG,MAAM,IAAI,IAAII,WAAW,KAAK,KAAK,CAAC,GAAGA,WAAW,GAAGT,QAAQ;UACzKG,WAAW,GAAGI,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACG,QAAQ;UAC7E;UACA;UACA;UACA;UACA;UACA;UACA;QACF;;QAEA,OAAO;UACLJ,KAAK,EAAEL,QAAQ;UACfrC,KAAK,EAAEoC,QAAQ;UACfK,GAAG,EAAEH,MAAM;UACXQ,QAAQ,EAAEP,WAAW;UACrBI,MAAM,EAAEA;QACV,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IACD;IACA,IAAII,gBAAgB,GAAGrF,cAAc,CAAC+C,KAAK,CAACR,YAAY,EAAE;QACtDD,KAAK,EAAE1C,KAAK,CAACmD,KAAK,EAAE,OAAO;MAC7B,CAAC,CAAC;MACFuC,gBAAgB,GAAGnH,cAAc,CAACkH,gBAAgB,EAAE,CAAC,CAAC;MACtDE,aAAa,GAAGD,gBAAgB,CAAC,CAAC,CAAC;MACnCE,gBAAgB,GAAGF,gBAAgB,CAAC,CAAC,CAAC;IACxC;IACA,IAAIG,gBAAgB,GAAGjG,QAAQ,CAAC,YAAY;MAC1C,IAAIkG,QAAQ;MACZ,IAAIC,MAAM,GAAGtB,mBAAmB,CAACkB,aAAa,CAACjD,KAAK,CAAC;MACrD;MACA,IAAIS,KAAK,CAACX,IAAI,KAAK,UAAU,IAAI,EAAE,CAACsD,QAAQ,GAAGC,MAAM,CAAC,CAAC,CAAC,MAAM,IAAI,IAAID,QAAQ,KAAK,KAAK,CAAC,IAAIA,QAAQ,CAACpD,KAAK,CAAC,EAAE;QAC5G,OAAO,EAAE;MACX;MACA,OAAOqD,MAAM;IACf,CAAC,CAAC;IACF;IACA,IAAIC,SAAS,GAAGrG,QAAQ,CAACkG,gBAAgB,EAAEvB,YAAY,CAAC;MACtD2B,UAAU,GAAG1H,cAAc,CAACyH,SAAS,EAAE,CAAC,CAAC;MACzCE,YAAY,GAAGD,UAAU,CAAC,CAAC,CAAC;MAC5BE,cAAc,GAAGF,UAAU,CAAC,CAAC,CAAC;IAChC,IAAIG,aAAa,GAAGxG,QAAQ,CAAC,YAAY;MACvC;MACA;MACA,IAAI,CAACuD,KAAK,CAACX,IAAI,IAAI0D,YAAY,CAACxD,KAAK,CAAC2D,MAAM,KAAK,CAAC,EAAE;QAClD,IAAIC,UAAU,GAAGJ,YAAY,CAACxD,KAAK,CAAC,CAAC,CAAC;QACtC,IAAI4D,UAAU,CAAC5D,KAAK,KAAK,IAAI,KAAK4D,UAAU,CAAClB,KAAK,KAAK,IAAI,IAAIkB,UAAU,CAAClB,KAAK,KAAKnE,SAAS,CAAC,EAAE;UAC9F,OAAO,EAAE;QACX;MACF;MACA,OAAOiF,YAAY,CAACxD,KAAK,CAACkC,GAAG,CAAC,UAAU2B,IAAI,EAAE;QAC5C,IAAIC,KAAK;QACT,OAAO/H,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAE8H,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;UAChDnB,KAAK,EAAE,CAACoB,KAAK,GAAG,OAAOD,IAAI,CAACnB,KAAK,KAAK,UAAU,GAAGmB,IAAI,CAACnB,KAAK,EAAE,GAAGmB,IAAI,CAACnB,KAAK,MAAM,IAAI,IAAIoB,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAGD,IAAI,CAAC7D;QAC5H,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;IACA,IAAI+D,SAAS,GAAG7G,QAAQ,CAAC,YAAY;MACnC,OAAO,IAAI8G,GAAG,CAACR,YAAY,CAACxD,KAAK,CAACkC,GAAG,CAAC,UAAUC,GAAG,EAAE;QACnD,OAAOA,GAAG,CAACnC,KAAK;MAClB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IACFzC,WAAW,CAAC,YAAY;MACtB,IAAIkD,KAAK,CAACX,IAAI,KAAK,UAAU,EAAE;QAC7B,IAAImE,oBAAoB;QACxB,IAAIC,QAAQ,GAAG,CAACD,oBAAoB,GAAGT,YAAY,CAACxD,KAAK,CAAC,CAAC,CAAC,MAAM,IAAI,IAAIiE,oBAAoB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,oBAAoB,CAACjE,KAAK;QAC/I,IAAIkE,QAAQ,KAAK3F,SAAS,IAAI2F,QAAQ,KAAK,IAAI,EAAE;UAC/CxC,cAAc,CAACzD,MAAM,CAACiG,QAAQ,CAAC,CAAC;QAClC;MACF;IACF,CAAC,EAAE;MACDC,KAAK,EAAE;IACT,CAAC,CAAC;IACF;IACA;IACA,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAACjC,GAAG,EAAEO,KAAK,EAAE;MACzD,IAAI2B,KAAK;MACT,IAAIC,WAAW,GAAG5B,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAGP,GAAG;MAClE,OAAOkC,KAAK,GAAG,CAAC,CAAC,EAAEzI,eAAe,CAACyI,KAAK,EAAEjD,gBAAgB,CAACpB,KAAK,CAACA,KAAK,EAAEmC,GAAG,CAAC,EAAEvG,eAAe,CAACyI,KAAK,EAAEjD,gBAAgB,CAACpB,KAAK,CAAC0C,KAAK,EAAE4B,WAAW,CAAC,EAAED,KAAK;IACxJ,CAAC;IACD;IACA,IAAIE,gBAAgB,GAAGlH,UAAU,EAAE;IACnCE,WAAW,CAAC,YAAY;MACtB,IAAIkD,KAAK,CAACX,IAAI,KAAK,MAAM,EAAE;QACzByE,gBAAgB,CAACvE,KAAK,GAAG8B,aAAa,CAAC9B,KAAK;QAC5C;MACF;MACA;MACA,IAAIwE,YAAY,GAAG1C,aAAa,CAAC9B,KAAK,CAACyE,KAAK,EAAE;MAC9C;MACA,IAAIC,YAAY,GAAG,SAASA,YAAYA,CAACvC,GAAG,EAAE;QAC5C,OAAOP,YAAY,CAAC5B,KAAK,CAAC2E,GAAG,CAACxC,GAAG,CAAC;MACpC,CAAC;MACD;MACAxG,kBAAkB,CAAC6H,YAAY,CAACxD,KAAK,CAAC,CAAC4E,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;QAC1D,OAAOD,CAAC,CAAC7E,KAAK,GAAG8E,CAAC,CAAC9E,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;MACnC,CAAC,CAAC,CAAC+E,OAAO,CAAC,UAAUlB,IAAI,EAAE;QACzB,IAAI1B,GAAG,GAAG0B,IAAI,CAAC7D,KAAK;QACpB,IAAI,CAAC0E,YAAY,CAACvC,GAAG,CAAC,EAAE;UACtBqC,YAAY,CAACQ,IAAI,CAACZ,eAAe,CAACjC,GAAG,EAAE0B,IAAI,CAACnB,KAAK,CAAC,CAAC;QACrD;MACF,CAAC,CAAC;MACF6B,gBAAgB,CAACvE,KAAK,GAAGwE,YAAY;IACvC,CAAC,CAAC;IACF,IAAIS,eAAe,GAAGjI,gBAAgB,CAACuH,gBAAgB,EAAEnD,gBAAgB,EAAEK,iBAAiB,EAAEN,kBAAkB,EAAE7D,KAAK,CAACmD,KAAK,EAAE,kBAAkB,CAAC,CAAC;IACnJ;IACA,IAAIyE,mBAAmB,GAAGhI,QAAQ,CAAC,YAAY;MAC7C,IAAIuD,KAAK,CAACX,IAAI,KAAK,MAAM,IAAI,CAAC2B,iBAAiB,CAACzB,KAAK,IAAIiF,eAAe,CAACjF,KAAK,CAACmF,IAAI,CAAC,UAAUtB,IAAI,EAAE;QAClG,OAAOA,IAAI,CAACpD,KAAK,CAACtB,gBAAgB,IAAI,OAAO,CAAC,KAAKsC,iBAAiB,CAACzB,KAAK;MAC5E,CAAC,CAAC,EAAE;QACF,OAAOiF,eAAe,CAACjF,KAAK;MAC9B;MACA;MACA,OAAO,CAACoE,eAAe,CAAC3C,iBAAiB,CAACzB,KAAK,CAAC,CAAC,CAACoF,MAAM,CAACzJ,kBAAkB,CAACsJ,eAAe,CAACjF,KAAK,CAAC,CAAC;IACrG,CAAC,CAAC;IACF,IAAIqF,sBAAsB,GAAGnI,QAAQ,CAAC,YAAY;MAChD,IAAI,CAACuD,KAAK,CAACvB,UAAU,EAAE;QACrB,OAAOgG,mBAAmB,CAAClF,KAAK;MAClC;MACA,OAAOrE,kBAAkB,CAACuJ,mBAAmB,CAAClF,KAAK,CAAC,CAAC4E,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;QACxE,OAAOrE,KAAK,CAACvB,UAAU,CAAC2F,CAAC,EAAEC,CAAC,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAIQ,cAAc,GAAGpI,QAAQ,CAAC,YAAY;MACxC,OAAON,cAAc,CAACyI,sBAAsB,CAACrF,KAAK,EAAE;QAClDxB,UAAU,EAAE4C,gBAAgB,CAACpB,KAAK;QAClCkB,cAAc,EAAEA,cAAc,CAAClB;MACjC,CAAC,CAAC;IACJ,CAAC,CAAC;IACF;IACA,IAAIuF,aAAa,GAAG,SAASA,aAAaA,CAAClC,MAAM,EAAE;MACjD,IAAImC,aAAa,GAAGzD,mBAAmB,CAACsB,MAAM,CAAC;MAC/CH,gBAAgB,CAACsC,aAAa,CAAC;MAC/B,IAAI/E,KAAK,CAACP,QAAQ;MAClB;MACAsF,aAAa,CAAC7B,MAAM,KAAKH,YAAY,CAACxD,KAAK,CAAC2D,MAAM,IAAI6B,aAAa,CAACL,IAAI,CAAC,UAAUM,MAAM,EAAEC,KAAK,EAAE;QAChG,IAAIC,qBAAqB;QACzB,OAAO,CAAC,CAACA,qBAAqB,GAAGnC,YAAY,CAACxD,KAAK,CAAC0F,KAAK,CAAC,MAAM,IAAI,IAAIC,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAAC3F,KAAK,OAAOyF,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACzF,KAAK,CAAC;MACrN,CAAC,CAAC,CAAC,EAAE;QACH,IAAI4F,YAAY,GAAGnF,KAAK,CAACV,YAAY,GAAGyF,aAAa,CAACtD,GAAG,CAAC,UAAU2D,CAAC,EAAE;UACrE,OAAO9J,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAE8J,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;YAC7CC,WAAW,EAAED,CAAC,CAACnD,KAAK;YACpBA,KAAK,EAAE,OAAOmD,CAAC,CAACnD,KAAK,KAAK,UAAU,GAAGmD,CAAC,CAACnD,KAAK,EAAE,GAAGmD,CAAC,CAACnD;UACvD,CAAC,CAAC;QACJ,CAAC,CAAC,GAAG8C,aAAa,CAACtD,GAAG,CAAC,UAAU2D,CAAC,EAAE;UAClC,OAAOA,CAAC,CAAC7F,KAAK;QAChB,CAAC,CAAC;QACF,IAAI+F,aAAa,GAAGP,aAAa,CAACtD,GAAG,CAAC,UAAU2D,CAAC,EAAE;UACjD,OAAOhJ,qBAAqB,CAAC4G,cAAc,CAACoC,CAAC,CAAC7F,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC;QACFS,KAAK,CAACP,QAAQ;QACd;QACAe,QAAQ,CAACjB,KAAK,GAAG4F,YAAY,GAAGA,YAAY,CAAC,CAAC,CAAC;QAC/C;QACA3E,QAAQ,CAACjB,KAAK,GAAG+F,aAAa,GAAGA,aAAa,CAAC,CAAC,CAAC,CAAC;MACpD;IACF,CAAC;IACD;IACA,IAAIC,SAAS,GAAGrI,QAAQ,CAAC,IAAI,CAAC;MAC5BsI,UAAU,GAAGpK,cAAc,CAACmK,SAAS,EAAE,CAAC,CAAC;MACzCE,WAAW,GAAGD,UAAU,CAAC,CAAC,CAAC;MAC3BE,cAAc,GAAGF,UAAU,CAAC,CAAC,CAAC;IAChC,IAAIG,UAAU,GAAGzI,QAAQ,CAAC,CAAC,CAAC;MAC1B0I,UAAU,GAAGxK,cAAc,CAACuK,UAAU,EAAE,CAAC,CAAC;MAC1CE,kBAAkB,GAAGD,UAAU,CAAC,CAAC,CAAC;MAClCE,qBAAqB,GAAGF,UAAU,CAAC,CAAC,CAAC;IACvC,IAAIG,8BAA8B,GAAGtJ,QAAQ,CAAC,YAAY;MACxD,OAAOuD,KAAK,CAAClB,wBAAwB,KAAKhB,SAAS,GAAGkC,KAAK,CAAClB,wBAAwB,GAAGkB,KAAK,CAACX,IAAI,KAAK,UAAU;IAClH,CAAC,CAAC;IACF,IAAI2G,aAAa,GAAG,SAASA,aAAaA,CAACC,MAAM,EAAEhB,KAAK,EAAE;MACxD,IAAIiB,KAAK,GAAGC,SAAS,CAACjD,MAAM,GAAG,CAAC,IAAIiD,SAAS,CAAC,CAAC,CAAC,KAAKrI,SAAS,GAAGqI,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAChFC,YAAY,GAAGF,KAAK,CAACG,MAAM;QAC3BA,MAAM,GAAGD,YAAY,KAAK,KAAK,CAAC,GAAG,UAAU,GAAGA,YAAY;MAC9DN,qBAAqB,CAACb,KAAK,CAAC;MAC5B,IAAIjF,KAAK,CAACtC,QAAQ,IAAIsC,KAAK,CAACX,IAAI,KAAK,UAAU,IAAI4G,MAAM,KAAK,IAAI,IAAII,MAAM,KAAK,UAAU,EAAE;QAC3FX,cAAc,CAAClI,MAAM,CAACyI,MAAM,CAAC,CAAC;MAChC;IACF,CAAC;IACD;IACA,IAAIK,aAAa,GAAG,SAASA,aAAaA,CAAC5E,GAAG,EAAE6E,QAAQ,EAAE;MACxD,IAAIC,YAAY,GAAG,SAASA,YAAYA,CAAA,EAAG;QACzC,IAAIC,YAAY;QAChB,IAAIvE,MAAM,GAAGc,cAAc,CAACtB,GAAG,CAAC;QAChC,IAAI2D,WAAW,GAAGnD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACvB,gBAAgB,CAACpB,KAAK,CAAC0C,KAAK,CAAC;QACtG,OAAO,CAACjC,KAAK,CAACV,YAAY,GAAG;UAC3B2C,KAAK,EAAE,OAAOoD,WAAW,KAAK,UAAU,GAAGA,WAAW,EAAE,GAAGA,WAAW;UACtEA,WAAW,EAAEA,WAAW;UACxB9F,KAAK,EAAEmC,GAAG;UACVM,GAAG,EAAE,CAACyE,YAAY,GAAGvE,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACF,GAAG,MAAM,IAAI,IAAIyE,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAG/E;QACxI,CAAC,GAAGA,GAAG,EAAEtF,qBAAqB,CAAC8F,MAAM,CAAC,CAAC;MACzC,CAAC;MACD,IAAIqE,QAAQ,IAAIvG,KAAK,CAAC1B,QAAQ,EAAE;QAC9B,IAAIoI,aAAa,GAAGF,YAAY,EAAE;UAChCG,cAAc,GAAGvL,cAAc,CAACsL,aAAa,EAAE,CAAC,CAAC;UACjDE,YAAY,GAAGD,cAAc,CAAC,CAAC,CAAC;UAChCzE,MAAM,GAAGyE,cAAc,CAAC,CAAC,CAAC;QAC5B3G,KAAK,CAAC1B,QAAQ,CAACsI,YAAY,EAAE1E,MAAM,CAAC;MACtC,CAAC,MAAM,IAAI,CAACqE,QAAQ,IAAIvG,KAAK,CAACzB,UAAU,EAAE;QACxC,IAAIsI,cAAc,GAAGL,YAAY,EAAE;UACjCM,cAAc,GAAG1L,cAAc,CAACyL,cAAc,EAAE,CAAC,CAAC;UAClDE,aAAa,GAAGD,cAAc,CAAC,CAAC,CAAC;UACjCE,OAAO,GAAGF,cAAc,CAAC,CAAC,CAAC;QAC7B9G,KAAK,CAACzB,UAAU,CAACwI,aAAa,EAAEC,OAAO,CAAC;MAC1C;IACF,CAAC;IACD;IACA,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAACvF,GAAG,EAAEwF,IAAI,EAAE;MAC1D,IAAIC,WAAW;MACf;MACA,IAAIC,YAAY,GAAG5G,QAAQ,CAACjB,KAAK,GAAG2H,IAAI,CAACX,QAAQ,GAAG,IAAI;MACxD,IAAIa,YAAY,EAAE;QAChBD,WAAW,GAAG3G,QAAQ,CAACjB,KAAK,GAAG,EAAE,CAACoF,MAAM,CAACzJ,kBAAkB,CAAC6H,YAAY,CAACxD,KAAK,CAAC,EAAE,CAACmC,GAAG,CAAC,CAAC,GAAG,CAACA,GAAG,CAAC;MACjG,CAAC,MAAM;QACLyF,WAAW,GAAGpE,YAAY,CAACxD,KAAK,CAAC8H,MAAM,CAAC,UAAUjC,CAAC,EAAE;UACnD,OAAOA,CAAC,CAAC7F,KAAK,KAAKmC,GAAG;QACxB,CAAC,CAAC;MACJ;MACAoD,aAAa,CAACqC,WAAW,CAAC;MAC1Bb,aAAa,CAAC5E,GAAG,EAAE0F,YAAY,CAAC;MAChC;MACA,IAAIpH,KAAK,CAACX,IAAI,KAAK,UAAU,EAAE;QAC7B;QACAqG,cAAc,CAAC,EAAE,CAAC;MACpB,CAAC,MAAM,IAAI,CAAClF,QAAQ,CAACjB,KAAK,IAAIS,KAAK,CAAC3B,oBAAoB,EAAE;QACxD4C,cAAc,CAAC,EAAE,CAAC;QAClByE,cAAc,CAAC,EAAE,CAAC;MACpB;IACF,CAAC;IACD;IACA;IACA,IAAI4B,qBAAqB,GAAG,SAASA,qBAAqBA,CAACC,UAAU,EAAEL,IAAI,EAAE;MAC3EpC,aAAa,CAACyC,UAAU,CAAC;MACzB,IAAIL,IAAI,CAACvJ,IAAI,KAAK,QAAQ,IAAIuJ,IAAI,CAACvJ,IAAI,KAAK,OAAO,EAAE;QACnDuJ,IAAI,CAACtE,MAAM,CAAC0B,OAAO,CAAC,UAAUlB,IAAI,EAAE;UAClCkD,aAAa,CAAClD,IAAI,CAAC7D,KAAK,EAAE,KAAK,CAAC;QAClC,CAAC,CAAC;MACJ;IACF,CAAC;IACD;IACA,IAAIiI,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,UAAU,EAAEP,IAAI,EAAE;MACjEjG,cAAc,CAACwG,UAAU,CAAC;MAC1B/B,cAAc,CAAC,IAAI,CAAC;MACpB;MACA,IAAIwB,IAAI,CAACb,MAAM,KAAK,QAAQ,EAAE;QAC5B,IAAIqB,SAAS,GAAG,CAACD,UAAU,IAAI,EAAE,EAAEE,IAAI,EAAE;QACzC;QACA,IAAID,SAAS,EAAE;UACb,IAAIE,YAAY,GAAG/I,KAAK,CAACgJ,IAAI,CAAC,IAAItE,GAAG,CAAC,EAAE,CAACoB,MAAM,CAACzJ,kBAAkB,CAACoI,SAAS,CAAC/D,KAAK,CAAC,EAAE,CAACmI,SAAS,CAAC,CAAC,CAAC,CAAC;UACnG5C,aAAa,CAAC8C,YAAY,CAAC;UAC3BtB,aAAa,CAACoB,SAAS,EAAE,IAAI,CAAC;UAC9BzG,cAAc,CAAC,EAAE,CAAC;QACpB;QACA;MACF;MACA,IAAIiG,IAAI,CAACb,MAAM,KAAK,MAAM,EAAE;QAC1B,IAAIyB,eAAe;QACnB,IAAI9H,KAAK,CAACX,IAAI,KAAK,UAAU,EAAE;UAC7ByF,aAAa,CAAC2C,UAAU,CAAC;QAC3B;QACA,CAACK,eAAe,GAAG9H,KAAK,CAAC7B,QAAQ,MAAM,IAAI,IAAI2J,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACC,IAAI,CAAC/H,KAAK,EAAEyH,UAAU,CAAC;MAC9H;IACF,CAAC;IACD,IAAIO,qBAAqB,GAAG,SAASA,qBAAqBA,CAACC,KAAK,EAAE;MAChE,IAAIC,WAAW,GAAGD,KAAK;MACvB,IAAIjI,KAAK,CAACX,IAAI,KAAK,MAAM,EAAE;QACzB6I,WAAW,GAAGD,KAAK,CAACxG,GAAG,CAAC,UAAU0G,IAAI,EAAE;UACtC,IAAIC,GAAG,GAAGhH,YAAY,CAAC7B,KAAK,CAAC4C,GAAG,CAACgG,IAAI,CAAC;UACtC,OAAOC,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,GAAG,CAAC7I,KAAK;QAC5D,CAAC,CAAC,CAAC8H,MAAM,CAAC,UAAU3F,GAAG,EAAE;UACvB,OAAOA,GAAG,KAAK5D,SAAS;QAC1B,CAAC,CAAC;MACJ;MACA,IAAI8J,YAAY,GAAG/I,KAAK,CAACgJ,IAAI,CAAC,IAAItE,GAAG,CAAC,EAAE,CAACoB,MAAM,CAACzJ,kBAAkB,CAACoI,SAAS,CAAC/D,KAAK,CAAC,EAAErE,kBAAkB,CAACgN,WAAW,CAAC,CAAC,CAAC,CAAC;MACvHpD,aAAa,CAAC8C,YAAY,CAAC;MAC3BA,YAAY,CAACtD,OAAO,CAAC,UAAU+D,WAAW,EAAE;QAC1C/B,aAAa,CAAC+B,WAAW,EAAE,IAAI,CAAC;MAClC,CAAC,CAAC;IACJ,CAAC;IACD,IAAIC,WAAW,GAAG7L,QAAQ,CAAC,YAAY;MACrC,OAAOuD,KAAK,CAACjB,OAAO,KAAK,KAAK,IAAIiB,KAAK,CAACC,wBAAwB,KAAK,KAAK;IAC5E,CAAC,CAAC;IACFjE,qBAAqB,CAACmB,UAAU,CAAC7B,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAE4F,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE;MACnF/E,cAAc,EAAE0I,cAAc;MAC9BmB,aAAa,EAAEA,aAAa;MAC5BlH,wBAAwB,EAAEiH,8BAA8B;MACxDzH,QAAQ,EAAE2I,gBAAgB;MAC1B9H,oBAAoB,EAAEtC,KAAK,CAACmD,KAAK,EAAE,sBAAsB,CAAC;MAC1DsD,SAAS,EAAEA,SAAS;MACpBvF,UAAU,EAAE4C,gBAAgB;MAC5B5B,OAAO,EAAEuJ,WAAW;MACpBtJ,UAAU,EAAEnC,KAAK,CAACmD,KAAK,EAAE,YAAY,CAAC;MACtCd,cAAc,EAAErC,KAAK,CAACmD,KAAK,EAAE,gBAAgB,CAAC;MAC9CS,cAAc,EAAEA;IAClB,CAAC,CAAC,CAAC,CAAC;IACJ;IACA,IAAI8H,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC3L,WAAW,CAAC,YAAY;QACtBT,YAAY,CAAC2D,KAAK,CAAC;MACrB,CAAC,EAAE;QACD0D,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IACA,IAAIgF,SAAS,GAAG/L,GAAG,EAAE;IACrByD,MAAM,CAAC;MACLuI,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;QACtB,IAAIC,gBAAgB;QACpB,CAACA,gBAAgB,GAAGF,SAAS,CAACnJ,KAAK,MAAM,IAAI,IAAIqJ,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACD,KAAK,EAAE;MAClH,CAAC;MACDE,IAAI,EAAE,SAASA,IAAIA,CAAA,EAAG;QACpB,IAAIC,iBAAiB;QACrB,CAACA,iBAAiB,GAAGJ,SAAS,CAACnJ,KAAK,MAAM,IAAI,IAAIuJ,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACD,IAAI,EAAE;MACpH,CAAC;MACDE,QAAQ,EAAE,SAASA,QAAQA,CAACC,GAAG,EAAE;QAC/B,IAAIC,iBAAiB;QACrB,CAACA,iBAAiB,GAAGP,SAAS,CAACnJ,KAAK,MAAM,IAAI,IAAI0J,iBAAiB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,iBAAiB,CAACF,QAAQ,CAACC,GAAG,CAAC;MAC3H;IACF,CAAC,CAAC;IACF,IAAIE,SAAS,GAAGzM,QAAQ,CAAC,YAAY;MACnC,OAAOW,IAAI,CAAC4C,KAAK,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,YAAY;MACvE;MACA,YAAY,EAAE,aAAa,EAAE,UAAU,EAAE,sBAAsB;MAC/D;MACA,UAAU,EAAE,YAAY,EAAE,0BAA0B;MACpD;MACA,cAAc,EAAE,YAAY,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAAE,0BAA0B,EAAE,sBAAsB,EAAE,SAAS,EAAE,YAAY,EAAE,gBAAgB;MACzL;MACA,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,UAAU,CAAC,CAAC;IACvD,CAAC,CAAC;IACF,OAAO,YAAY;MACjB,OAAOxE,YAAY,CAACG,UAAU,EAAEL,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAE4N,SAAS,CAAC3J,KAAK,CAAC,EAAEc,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;QAC1G,IAAI,EAAEE,QAAQ;QACd,WAAW,EAAEP,KAAK,CAACzC,SAAS;QAC5B,KAAK,EAAEmL,SAAS;QAChB,cAAc,EAAErL,cAAc;QAC9B,MAAM,EAAE2C,KAAK,CAACX,IAAI;QAClB,eAAe,EAAE4D,aAAa,CAAC1D,KAAK;QACpC,uBAAuB,EAAE+H,qBAAqB;QAC9C,aAAa,EAAEtG,iBAAiB,CAACzB,KAAK;QACtC,UAAU,EAAEiI,gBAAgB;QAC5B,eAAe,EAAEQ,qBAAqB;QACtC,0BAA0B,EAAEhI,KAAK,CAACC,wBAAwB;QAC1D,YAAY,EAAEnE,UAAU;QACxB,cAAc,EAAE,CAAC+I,cAAc,CAACtF,KAAK,CAAC2D,MAAM;QAC5C,aAAa,EAAEuC,WAAW,CAAClG,KAAK;QAChC,oBAAoB,EAAE,EAAE,CAACoF,MAAM,CAACpE,QAAQ,EAAE,QAAQ,CAAC,CAACoE,MAAM,CAACkB,kBAAkB,CAACtG,KAAK;MACrF,CAAC,CAAC,EAAEe,KAAK,CAAC;IACZ,CAAC;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}