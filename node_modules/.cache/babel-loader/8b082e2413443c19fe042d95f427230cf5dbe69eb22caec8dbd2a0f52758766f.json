{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nimport Col from '../grid/Col';\nimport { useInjectForm } from './context';\nimport { useLocaleReceiver } from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport classNames from '../_util/classNames';\nvar FormItemLabel = function FormItemLabel(props, _ref) {\n  var _props$label, _slots$label, _slots$tooltip, _classNames2;\n  var slots = _ref.slots,\n    emit = _ref.emit,\n    attrs = _ref.attrs;\n  var _props$attrs = _objectSpread(_objectSpread({}, props), attrs),\n    prefixCls = _props$attrs.prefixCls,\n    htmlFor = _props$attrs.htmlFor,\n    labelCol = _props$attrs.labelCol,\n    labelAlign = _props$attrs.labelAlign,\n    colon = _props$attrs.colon,\n    required = _props$attrs.required,\n    requiredMark = _props$attrs.requiredMark;\n  var _useLocaleReceiver = useLocaleReceiver('Form'),\n    _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1),\n    formLocale = _useLocaleReceiver2[0];\n  var label = (_props$label = props.label) !== null && _props$label !== void 0 ? _props$label : (_slots$label = slots.label) === null || _slots$label === void 0 ? void 0 : _slots$label.call(slots);\n  if (!label) return null;\n  var _useInjectForm = useInjectForm(),\n    vertical = _useInjectForm.vertical,\n    contextLabelAlign = _useInjectForm.labelAlign,\n    contextLabelCol = _useInjectForm.labelCol,\n    labelWrap = _useInjectForm.labelWrap,\n    contextColon = _useInjectForm.colon;\n  var mergedLabelCol = labelCol || (contextLabelCol === null || contextLabelCol === void 0 ? void 0 : contextLabelCol.value) || {};\n  var mergedLabelAlign = labelAlign || (contextLabelAlign === null || contextLabelAlign === void 0 ? void 0 : contextLabelAlign.value);\n  var labelClsBasic = \"\".concat(prefixCls, \"-item-label\");\n  var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && \"\".concat(labelClsBasic, \"-left\"), mergedLabelCol.class, _defineProperty({}, \"\".concat(labelClsBasic, \"-wrap\"), !!labelWrap.value));\n  var labelChildren = label;\n  // Keep label is original where there should have no colon\n  var computedColon = colon === true || (contextColon === null || contextColon === void 0 ? void 0 : contextColon.value) !== false && colon !== false;\n  var haveColon = computedColon && !vertical.value;\n  // Remove duplicated user input colon\n  if (haveColon && typeof label === 'string' && label.trim() !== '') {\n    labelChildren = label.replace(/[:|：]\\s*$/, '');\n  }\n  labelChildren = _createVNode(_Fragment, null, [labelChildren, (_slots$tooltip = slots.tooltip) === null || _slots$tooltip === void 0 ? void 0 : _slots$tooltip.call(slots, {\n    class: \"\".concat(prefixCls, \"-item-tooltip\")\n  })]);\n  // Add required mark if optional\n  if (requiredMark === 'optional' && !required) {\n    var _formLocale$value, _defaultLocale$Form;\n    labelChildren = _createVNode(_Fragment, null, [labelChildren, _createVNode(\"span\", {\n      \"class\": \"\".concat(prefixCls, \"-item-optional\")\n    }, [((_formLocale$value = formLocale.value) === null || _formLocale$value === void 0 ? void 0 : _formLocale$value.optional) || ((_defaultLocale$Form = defaultLocale.Form) === null || _defaultLocale$Form === void 0 ? void 0 : _defaultLocale$Form.optional)])]);\n  }\n  var labelClassName = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-required\"), required), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-required-mark-optional\"), requiredMark === 'optional'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-no-colon\"), !computedColon), _classNames2));\n  return _createVNode(Col, _objectSpread(_objectSpread({}, mergedLabelCol), {}, {\n    \"class\": labelColClassName\n  }), {\n    default: function _default() {\n      return [_createVNode(\"label\", {\n        \"for\": htmlFor,\n        \"class\": labelClassName,\n        \"title\": typeof label === 'string' ? label : '',\n        \"onClick\": function onClick(e) {\n          return emit('click', e);\n        }\n      }, [labelChildren])];\n    }\n  });\n};\nFormItemLabel.displayName = 'FormItemLabel';\nFormItemLabel.inheritAttrs = false;\nexport default FormItemLabel;","map":{"version":3,"names":["_defineProperty","_slicedToArray","_objectSpread","createVNode","_createVNode","Fragment","_Fragment","Col","useInjectForm","useLocaleReceiver","defaultLocale","classNames","FormItemLabel","props","_ref","_props$label","_slots$label","_slots$tooltip","_classNames2","slots","emit","attrs","_props$attrs","prefixCls","htmlFor","labelCol","labelAlign","colon","required","requiredMark","_useLocaleReceiver","_useLocaleReceiver2","formLocale","label","call","_useInjectForm","vertical","contextLabelAlign","contextLabelCol","labelWrap","contextColon","mergedLabelCol","value","mergedLabelAlign","labelClsBasic","concat","labelColClassName","class","labelChildren","computedColon","haveColon","trim","replace","tooltip","_formLocale$value","_defaultLocale$Form","optional","Form","labelClassName","default","_default","onClick","e","displayName","inheritAttrs"],"sources":["/Users/dev/e-approver/node_modules/ant-design-vue/es/form/FormItemLabel.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nimport Col from '../grid/Col';\nimport { useInjectForm } from './context';\nimport { useLocaleReceiver } from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport classNames from '../_util/classNames';\nvar FormItemLabel = function FormItemLabel(props, _ref) {\n  var _props$label, _slots$label, _slots$tooltip, _classNames2;\n  var slots = _ref.slots,\n    emit = _ref.emit,\n    attrs = _ref.attrs;\n  var _props$attrs = _objectSpread(_objectSpread({}, props), attrs),\n    prefixCls = _props$attrs.prefixCls,\n    htmlFor = _props$attrs.htmlFor,\n    labelCol = _props$attrs.labelCol,\n    labelAlign = _props$attrs.labelAlign,\n    colon = _props$attrs.colon,\n    required = _props$attrs.required,\n    requiredMark = _props$attrs.requiredMark;\n  var _useLocaleReceiver = useLocaleReceiver('Form'),\n    _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1),\n    formLocale = _useLocaleReceiver2[0];\n  var label = (_props$label = props.label) !== null && _props$label !== void 0 ? _props$label : (_slots$label = slots.label) === null || _slots$label === void 0 ? void 0 : _slots$label.call(slots);\n  if (!label) return null;\n  var _useInjectForm = useInjectForm(),\n    vertical = _useInjectForm.vertical,\n    contextLabelAlign = _useInjectForm.labelAlign,\n    contextLabelCol = _useInjectForm.labelCol,\n    labelWrap = _useInjectForm.labelWrap,\n    contextColon = _useInjectForm.colon;\n  var mergedLabelCol = labelCol || (contextLabelCol === null || contextLabelCol === void 0 ? void 0 : contextLabelCol.value) || {};\n  var mergedLabelAlign = labelAlign || (contextLabelAlign === null || contextLabelAlign === void 0 ? void 0 : contextLabelAlign.value);\n  var labelClsBasic = \"\".concat(prefixCls, \"-item-label\");\n  var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && \"\".concat(labelClsBasic, \"-left\"), mergedLabelCol.class, _defineProperty({}, \"\".concat(labelClsBasic, \"-wrap\"), !!labelWrap.value));\n  var labelChildren = label;\n  // Keep label is original where there should have no colon\n  var computedColon = colon === true || (contextColon === null || contextColon === void 0 ? void 0 : contextColon.value) !== false && colon !== false;\n  var haveColon = computedColon && !vertical.value;\n  // Remove duplicated user input colon\n  if (haveColon && typeof label === 'string' && label.trim() !== '') {\n    labelChildren = label.replace(/[:|：]\\s*$/, '');\n  }\n  labelChildren = _createVNode(_Fragment, null, [labelChildren, (_slots$tooltip = slots.tooltip) === null || _slots$tooltip === void 0 ? void 0 : _slots$tooltip.call(slots, {\n    class: \"\".concat(prefixCls, \"-item-tooltip\")\n  })]);\n  // Add required mark if optional\n  if (requiredMark === 'optional' && !required) {\n    var _formLocale$value, _defaultLocale$Form;\n    labelChildren = _createVNode(_Fragment, null, [labelChildren, _createVNode(\"span\", {\n      \"class\": \"\".concat(prefixCls, \"-item-optional\")\n    }, [((_formLocale$value = formLocale.value) === null || _formLocale$value === void 0 ? void 0 : _formLocale$value.optional) || ((_defaultLocale$Form = defaultLocale.Form) === null || _defaultLocale$Form === void 0 ? void 0 : _defaultLocale$Form.optional)])]);\n  }\n  var labelClassName = classNames((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-required\"), required), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-required-mark-optional\"), requiredMark === 'optional'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-item-no-colon\"), !computedColon), _classNames2));\n  return _createVNode(Col, _objectSpread(_objectSpread({}, mergedLabelCol), {}, {\n    \"class\": labelColClassName\n  }), {\n    default: function _default() {\n      return [_createVNode(\"label\", {\n        \"for\": htmlFor,\n        \"class\": labelClassName,\n        \"title\": typeof label === 'string' ? label : '',\n        \"onClick\": function onClick(e) {\n          return emit('click', e);\n        }\n      }, [labelChildren])];\n    }\n  });\n};\nFormItemLabel.displayName = 'FormItemLabel';\nFormItemLabel.inheritAttrs = false;\nexport default FormItemLabel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}