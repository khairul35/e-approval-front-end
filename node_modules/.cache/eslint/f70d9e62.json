[{"/Users/dev/e-approval-front-end/src/main.ts":"1","/Users/dev/e-approval-front-end/src/App.vue":"2","/Users/dev/e-approval-front-end/src/registerServiceWorker.ts":"3","/Users/dev/e-approval-front-end/src/layout/MainLayout.vue":"4","/Users/dev/e-approval-front-end/src/repository/XeroRepository.ts":"5","/Users/dev/e-approval-front-end/src/store/index.ts":"6","/Users/dev/e-approval-front-end/src/router/index.ts":"7","/Users/dev/e-approval-front-end/src/views/billed/Billed.vue":"8","/Users/dev/e-approval-front-end/src/views/application/Application.vue":"9","/Users/dev/e-approval-front-end/src/views/contact/Contacts.vue":"10","/Users/dev/e-approval-front-end/src/repository/Repository.ts":"11","/Users/dev/e-approval-front-end/src/views/sign-up/SignUp.vue":"12","/Users/dev/e-approval-front-end/src/views/purchase-order/PurchaseOrder.vue":"13","/Users/dev/e-approval-front-end/src/views/sign-in/SignIn.vue":"14","/Users/dev/e-approval-front-end/src/constant/XeroConfig.ts":"15","/Users/dev/e-approval-front-end/src/layout/NavMenu.vue":"16","/Users/dev/e-approval-front-end/src/layout/MainHeader.vue":"17","/Users/dev/e-approval-front-end/src/views/contact/ContactForm.vue":"18","/Users/dev/e-approval-front-end/src/views/purchase-order/PurchaseOrderForm.vue":"19","/Users/dev/e-approval-front-end/src/repository/AuthRepository.ts":"20","/Users/dev/e-approval-front-end/src/repository/PurchaseOrderRepository.ts":"21","/Users/dev/e-approval-front-end/src/repository/CurrencyRepository.ts":"22"},{"size":1507,"mtime":1681134672321,"results":"23","hashOfConfig":"24"},{"size":2385,"mtime":1685332172171,"results":"25","hashOfConfig":"24"},{"size":903,"mtime":1681045795513,"results":"26","hashOfConfig":"24"},{"size":1263,"mtime":1681633399748,"results":"27","hashOfConfig":"24"},{"size":1305,"mtime":1685288106287,"results":"28","hashOfConfig":"24"},{"size":157,"mtime":1681045795513,"results":"29","hashOfConfig":"24"},{"size":1211,"mtime":1685324525986,"results":"30","hashOfConfig":"24"},{"size":226,"mtime":1681303703572,"results":"31","hashOfConfig":"24"},{"size":2972,"mtime":1685287159080,"results":"32","hashOfConfig":"24"},{"size":11165,"mtime":1685291167681,"results":"33","hashOfConfig":"24"},{"size":1697,"mtime":1685327168314,"results":"34","hashOfConfig":"24"},{"size":3392,"mtime":1685328100673,"results":"35","hashOfConfig":"24"},{"size":14126,"mtime":1685317117371,"results":"36","hashOfConfig":"24"},{"size":2242,"mtime":1685328094792,"results":"37","hashOfConfig":"24"},{"size":991,"mtime":1681982761807,"results":"38","hashOfConfig":"24"},{"size":2213,"mtime":1685323692523,"results":"39","hashOfConfig":"24"},{"size":2442,"mtime":1685327380780,"results":"40","hashOfConfig":"24"},{"size":13846,"mtime":1683503919837,"results":"41","hashOfConfig":"24"},{"size":12971,"mtime":1685315987048,"results":"42","hashOfConfig":"24"},{"size":267,"mtime":1685326446950,"results":"43","hashOfConfig":"24"},{"size":730,"mtime":1685115422789,"results":"44","hashOfConfig":"24"},{"size":339,"mtime":1685315757336,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kwofwt",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dev/e-approval-front-end/src/main.ts",[],[],"/Users/dev/e-approval-front-end/src/App.vue",["126"],[],"<template>\n  <main-layout\n    v-if=\"\n      $route.path != '/login' && $route.path != '/login/'\n      && $route.path != '/register' && $route.path != '/register/'\n    \"\n  />\n  <router-view\n    v-slot=\"{ Component }\"\n    v-if=\"\n      $route.path == '/login' || $route.path == '/login/'\n      || $route.path == '/register' || $route.path == '/register/'\n    \"\n  >\n    <component :is=\"Component\" />\n  </router-view>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport MainLayout from './layout/MainLayout.vue';\nimport XeroRepository from './repository/XeroRepository';\n\nfunction getQueryParametersFromCurrentURL(): { [key: string]: string } {\n  const params: { [key: string]: string } = {};\n\n  const queryString = window.location.search.substring(1);\n  if (queryString) {\n    const keyValuePairs = queryString.split('&');\n    for (const pair of keyValuePairs) {\n      const [key, value] = pair.split('=');\n      params[key] = decodeURIComponent(value);\n    }\n  }\n\n  return params;\n}\n\nexport default defineComponent({\n  data() {\n    return {};\n  },\n  components: {\n    MainLayout,\n  },\n  methods: {\n    async generateToken() {\n      await XeroRepository.generateToken(this.code)\n        .then(() => {\n          window.location.reload();\n        })\n    },\n  },\n  mounted() {\n      const newPath = window.location.pathname;\n      const loggedIn = localStorage.getItem(\"logged_in\") == \"true\";\n      if (!loggedIn && newPath !== \"/register\" && newPath !== \"/register/\") {\n        this.$router.push(\"/login\");\n      } else if (!loggedIn || newPath == \"/register/\" || newPath == \"/register\") {\n        this.$router.push(\"/register\");\n      } else {\n        this.$router.push(\"purchase-order\");\n      }\n      const {\n        code,\n        scope,\n        session_state,\n        state\n      } = getQueryParametersFromCurrentURL();\n      this.code = code;\n      this.scope = scope;\n      this.sessionState = session_state;\n      this.state = state;\n      if (code) {\n        this.generateToken();\n      }\n  }\n})\n</script>\n\n\n<style lang=\"less\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n\n  a {\n    font-weight: bold;\n    color: #2c3e50;\n\n    &.router-link-exact-active {\n      color: #42b983;\n    }\n  }\n}\n</style>\n","/Users/dev/e-approval-front-end/src/registerServiceWorker.ts",[],[],"/Users/dev/e-approval-front-end/src/layout/MainLayout.vue",["127"],[],"<template>\n  <a-layout>\n    <NavMenu :collapsed=\"collapsed\"/>\n    <a-layout>\n      <MainHeader @collapsing=\"collapsed = !collapsed\" />\n      <a-layout-content\n        :style=\"{ margin: '24px 16px', padding: '24px', background: '#fff', height: 'calc(100vh - 112px)', overflow: 'auto' }\"\n      >\n        <router-view v-slot=\"{ Component }\">\n          <component :is=\"Component\" />\n        </router-view>\n      </a-layout-content>\n    </a-layout>\n  </a-layout>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport NavMenu from './NavMenu.vue';\nimport MainHeader from './MainHeader.vue'\n\nexport default defineComponent({\n  components: {\n    NavMenu,\n    MainHeader,\n  },\n  setup() {\n    return {\n      selectedKeys: ref<string[]>(['1']),\n      collapsed: ref<boolean>(false),\n    };\n  },\n});\n</script>\n<style>\n#components-layout-demo-custom-trigger .trigger {\n  font-size: 18px;\n  line-height: 64px;\n  padding: 0 24px;\n  cursor: pointer;\n  transition: color 0.3s;\n}\n\n#components-layout-demo-custom-trigger .trigger:hover {\n  color: #1890ff;\n}\n\n#components-layout-demo-custom-trigger .logo {\n  height: 32px;\n  background: rgba(255, 255, 255, 0.3);\n  margin: 16px;\n}\n\n.site-layout .site-layout-background {\n  background: #fff;\n}\n\n</style>\n","/Users/dev/e-approval-front-end/src/repository/XeroRepository.ts",["128","129"],[],"import { clientId, redirectUris, clientSecret, scopes } from '@/constant/XeroConfig';\nimport axios from 'axios';\nimport Repository from './Repository';\n\nexport default {\n    generateToken(code: string) {\n        return Repository.post(`auth/register/xero?code=${code}`);\n    },\n    refreshToken() {\n        const headers = {\n            'Authorization': 'Basic ' + btoa(`${clientId}:${clientSecret}`),\n            'Content-Type': 'application/x-www-form-urlencoded',\n        };\n        const data = new URLSearchParams();\n        data.append('grant_type', 'refresh_token');\n        data.append('refresh_token', localStorage.getItem('xeroRefreshToken'))\n        return axios.post('https://identity.xero.com/connect/token', data, { headers })\n    },\n    getAllConnection() {\n        return Repository.get(`connection`);\n    },\n    /** Purchase Order */\n    getAllPurchaseOrder() {\n        return Repository.get(`purchase-order?tenantId=${localStorage.getItem('tenant')}`);\n    },\n    /** / Purchase Order */\n\n    /** Contact */\n    getAllContact() {\n        return Repository.get(`contact?tenantId=${localStorage.getItem('tenant')}`);\n    },\n    createContact(body) {\n        return Repository.post(`contact?tenantId=${localStorage.getItem('tenant')}`, { \"Contacts\": [body] });\n    }\n    /** / Contact */\n};","/Users/dev/e-approval-front-end/src/store/index.ts",[],[],"/Users/dev/e-approval-front-end/src/router/index.ts",[],[],"/Users/dev/e-approval-front-end/src/views/billed/Billed.vue",["130"],[],"<template>\n  <div>\n    Bills dd\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n    name: 'billed-component',\n    data() {\n      return {};\n    },\n})\n</script>\n\n","/Users/dev/e-approval-front-end/src/views/application/Application.vue",["131"],[],"<template>\n  <div>\n    <img src=\"@/assets/xero-logo.png\" class=\"logo\" @click=\"integrateXero\"/>\n    <h2>Integrate with Xero</h2>\n    <a-table\n      :columns=\"columns\"\n      :row-key=\"record => record.id\"\n      :data-source=\"connections\"\n      :pagination=\"false\"\n      :loading=\"loading\"\n    >\n    <template #bodyCell=\"{ column, text }\">\n      <template v-if=\"column.key === 'createdDate'\">\n        {{ getDisplayDate(text) }}\n      </template>\n      <template v-if=\"column.key === 'modifiedDate'\">\n        {{ getDisplayDate(text) }}\n      </template>\n    </template>\n    </a-table>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport moment from 'moment';\nimport { clientId, redirectUris, scopes } from '@/constant/XeroConfig';\nimport XeroRepository from '@/repository/XeroRepository';\n\nfunction getQueryParametersFromCurrentURL(): { [key: string]: string } {\n  const params: { [key: string]: string } = {};\n\n  const queryString = window.location.search.substring(1);\n  if (queryString) {\n    const keyValuePairs = queryString.split('&');\n    for (const pair of keyValuePairs) {\n      const [key, value] = pair.split('=');\n      params[key] = decodeURIComponent(value);\n    }\n  }\n\n  return params;\n}\n\nconst columns = [\n  {\n    title: 'Tenant Name',\n    dataIndex: 'tenantName',\n    sorter: true,\n  },\n  {\n    title: 'Tenant Type',\n    dataIndex: 'tenantType',\n  },\n  {\n    title: 'Created Date',\n    dataIndex: 'createdDateUtc',\n    sorter: true,\n    key: 'createdDate',\n  },\n  {\n    title: 'Modified Date',\n    dataIndex: 'updatedDateUtc',\n    sorter: true,\n    key: 'modifiedDate',\n  },\n];\n\nexport default defineComponent({\n    name: 'app-integration',\n    data() {\n      return {\n        columns,\n        register: ref(false),\n        code: ref(''),\n        scope: ref(''),\n        sessionState: ref(''),\n        state: ref(''),\n        connections: ref([]),\n        loading: ref(true),\n      };\n    },\n    methods: {\n      integrateXero() {\n        window.open(`https://login.xero.com/identity/connect/authorize?response_type=code&client_id=${clientId}&redirect_uri=${redirectUris}&scope=${scopes}&state=123`)\n      },\n      getDisplayDate(datetime) {\n        if (!datetime) return '-';\n        return moment(datetime).utc().format('DD MMM YYYY, HH:mm');\n      },\n      async findAllConnection() {\n        this.loading = true;\n        await XeroRepository.getAllConnection()\n          .then(({ data }) => {\n            this.connections = data;\n            this.loading = false;\n          })\n          .catch(() => {\n            this.loading = false;\n            this.connections = [];\n          });\n      },\n    },\n    async mounted() {\n      this.findAllConnection();\n    },\n})\n</script>\n\n.<style scoped>\n.logo {\n  height: 100px;\n  width: auto;\n  cursor: pointer;\n  border: 4px solid rgb(71,191,231);\n  border-radius: 100px;\n  background-color: rgb(71,191,231);\n}\n\n.logo:hover {\n  border: 4px solid rgb(0, 102, 255);\n}\n</style>\n","/Users/dev/e-approval-front-end/src/views/contact/Contacts.vue",["132"],[],"<template>\n  <div>\n    <a-row :gutter=\"16\">\n      <a-col :xl=\"8\" :lg=\"8\" :md=\"24\" :sm=\"24\" :xs=\"24\">\n        <div>\n          <a-button type=\"primary\" class=\"add-button\" size=\"large\" @click=\"createContact\">\n            Create new Contact\n          </a-button>\n          <div class=\"list-container\">\n            <div v-for=\"item in contacts\" :key=\"item.ContactID\">\n              <a-card\n                class=\"card clickable hoverable\"\n                @click=\"select(item)\"\n                :style=\"item.ContactID == selectedContact.ContactID ? `border-left: 10px solid #3490FF`: ''\">\n                {{ item.Name }}\n              </a-card>\n            </div>\n          </div>\n        </div>\n      </a-col>\n      <a-col :xl=\"16\" :lg=\"16\" :md=\"24\" :sm=\"24\" :xs=\"24\" class=\"right-pane\" v-if=\"selectedContact.ContactID\">\n        <h2>\n          {{ selectedContact.Name }}\n          <a-tag\n            :color=\"selectedContact.ContactStatus == 'ACTIVE' ? 'green' : 'red'\"\n            style=\"float: right; margin-right: 50px\">\n            {{ selectedContact.ContactStatus }}\n          </a-tag>\n        </h2>\n        <a-divider />\n        <div align=\"left\">\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Email Address</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ selectedContact.EmailAddress }}\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Bank Account</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ selectedContact.BankAccountDetails }}\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Supplier</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ selectedContact.IsSupplier ? 'Yes' : 'No' }}\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Customer</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ selectedContact.IsCustomer ? 'Yes' : 'No' }}\n            </a-col>\n          </a-row>\n          <a-divider />\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Addresses</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              <a-row :gutter=\"16\">\n                <a-col :span=\"1\">\n                  :\n                </a-col>\n                <a-col :span=\"23\">\n                  <div v-for=\"item in selectedContact.Addresses\" :key=\"item\" class=\"sub-item-box\">\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Address Type</b></a-col>\n                      <a-col :span=\"16\">: {{ item.AddressType }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>City</b></a-col>\n                      <a-col :span=\"16\">: {{ item.City }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Region</b></a-col>\n                      <a-col :span=\"16\">: {{ item.Region }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Postal Code</b></a-col>\n                      <a-col :span=\"16\">: {{ item.PostalCode }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Country</b></a-col>\n                      <a-col :span=\"16\">: {{ item.Country }}</a-col>\n                    </a-row>\n                  </div>\n                </a-col>\n              </a-row>\n            </a-col>\n          </a-row>\n          <a-divider />\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Phones</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              <a-row :gutter=\"16\">\n                <a-col :span=\"1\">\n                  :\n                </a-col>\n                <a-col :span=\"23\">\n                  <div v-for=\"item in selectedContact.Phones\" :key=\"item\" class=\"sub-item-box\">\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Phone Type</b></a-col>\n                      <a-col :span=\"16\">: {{ item.PhoneType }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Phone Number</b></a-col>\n                      <a-col :span=\"16\">: {{ item.PhoneNumber }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Phone Area Code</b></a-col>\n                      <a-col :span=\"16\">: {{ item.PhoneAreaCode }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Phone Country Code</b></a-col>\n                      <a-col :span=\"16\">: {{ item.PhoneCountryCode }}</a-col>\n                    </a-row>\n                  </div>\n                </a-col>\n              </a-row>\n            </a-col>\n          </a-row>\n          <a-divider />\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Contact Groups</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              <a-row :gutter=\"16\">\n                <a-col :span=\"1\">\n                  :\n                </a-col>\n                <a-col :span=\"23\">\n                  <div v-for=\"item in selectedContact.ContactGroups\" :key=\"item\" class=\"sub-item-box\">\n                    {{ item }}\n                  </div>\n                </a-col>\n              </a-row>\n            </a-col>\n          </a-row>\n          <a-divider />\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Contact Persons</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              <a-row :gutter=\"16\">\n                <a-col :span=\"1\">\n                  :\n                </a-col>\n                <a-col :span=\"23\">\n                  <div v-for=\"item in selectedContact.ContactPersons\" :key=\"item\" class=\"sub-item-box\">\n                    {{ item }}\n                  </div>\n                </a-col>\n              </a-row>\n            </a-col>\n          </a-row>\n          <a-divider />\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Balances</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              <a-row :gutter=\"16\">\n                <a-col :span=\"1\">\n                  :\n                </a-col>\n                <a-col :span=\"23\">\n                  <a-row :gutter=\"16\">\n                    <a-col :span=\"24\">\n                      <h3>Accounts Receivable</h3>\n                    </a-col>\n                    <a-col :span=\"24\">\n                      <a-row :gutter=\"16\">\n                        <a-col :span=\"6\">Outstanding</a-col>\n                        <a-col :span=\"18\">\n                          : {{ getReceivable(selectedContact.Balances).Outstanding }}\n                        </a-col>\n                      </a-row>\n                      <a-row :gutter=\"16\">\n                        <a-col :span=\"6\">Outstanding</a-col>\n                        <a-col :span=\"18\">\n                          : {{ getReceivable(selectedContact.Balances).Overdue }}\n                        </a-col>\n                      </a-row>\n                    </a-col>\n                  </a-row>\n                  <a-row :gutter=\"16\" style=\"padding-top: 10px\">\n                    <a-col :span=\"24\">\n                      <h3>Accounts Payable</h3>\n                    </a-col>\n                    <a-col :span=\"24\">\n                      <a-row :gutter=\"16\">\n                        <a-col :span=\"6\">Outstanding</a-col>\n                        <a-col :span=\"18\">\n                          : {{ getPayable(selectedContact.Balances).Outstanding }}\n                        </a-col>\n                      </a-row>\n                      <a-row :gutter=\"16\">\n                        <a-col :span=\"6\">Outstanding</a-col>\n                        <a-col :span=\"18\">\n                          : {{ getPayable(selectedContact.Balances).Overdue }}\n                        </a-col>\n                      </a-row>\n                    </a-col>\n                  </a-row>\n                </a-col>\n              </a-row>\n            </a-col>\n          </a-row>\n        </div>\n      </a-col>\n    </a-row>\n    <ContactForm\n      :showForm=\"showForm\"\n      :po=\"formContent\"\n      @close=\"showForm = false\"\n      @update=\"findAllContact\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport ContactForm from './ContactForm.vue';\nimport XeroRepository from '@/repository/XeroRepository';\n\nexport default defineComponent({\n    // eslint-disable-next-line vue/multi-word-component-names\n    name: \"contacts\",\n    components: {\n      ContactForm,\n    },\n    data() {\n        return {\n          contacts: [],\n          selectedContact: {},\n          showForm: ref(false),\n          formContent: ref({}),\n        };\n    },\n    methods: {\n      async findAllContact() {\n        this.showForm = false;\n        const { data } = await XeroRepository.getAllContact();\n        this.contacts = data.Contacts;\n        if (this.contacts.length > 0) this.selectedContact = this.contacts[0];\n      },\n      createContact() {\n        this.showForm = true;\n        this.formContent = {};\n      },\n      select(e) {\n        this.selectedContact = e;\n      },\n      getReceivable(balance) {\n        if (!balance) return {\n          \"Outstanding\": 0,\n          \"Overdue\": 0,\n        };\n        const data = balance.AccountsReceivable;\n        return {\n          \"Outstanding\": data.Outstanding,\n          \"Overdue\": data.Overdue,\n        };\n      },\n      getPayable(balance) {\n        if (!balance) return {\n          \"Outstanding\": 0,\n          \"Overdue\": 0,\n        };\n        const data = balance.AccountsPayable;\n        return {\n          \"Outstanding\": data.Outstanding,\n          \"Overdue\": data.Overdue,\n        };\n      },\n    },\n    mounted() {\n      this.findAllContact();\n    }\n});\n</script>\n\n<style scoped>\n.list-container {\n  margin: 5px;\n  padding: 5px;\n  height: 75vh;\n  background-color: #1a90ff23;\n  overflow: auto;\n}\n\n.add-button {\n  width: 100%;\n  margin: 20px 0px;\n}\n\n.sub-item-box {\n  border: 1px solid #dad9d9;\n  border-radius: 5px 0px;\n  box-shadow: 0px 3px 6px #00000029;\n  margin: 5px;\n  padding: 5px;\n}\n\n.card {\n  background-color: rgb(248, 248, 248);\n  margin: 5px;\n}\n\n.clickable {\n  cursor: pointer;\n}\n\n.hoverable:hover {\n  background-color: #3490FF;\n  color: #fff;\n  font-weight: bold;\n}\n</style>\n","/Users/dev/e-approval-front-end/src/repository/Repository.ts",[],[],"/Users/dev/e-approval-front-end/src/views/sign-up/SignUp.vue",["133"],[],"<template>\n  <div class=\"login-page\">\n    <div class=\"login-container\">\n      <h1>e-approver</h1>\n      <p> Sign up for new accout </p>\n      <a-divider />\n      <a-input\n        placeholder=\"Username\"\n        class=\"login-input\"\n        size=\"large\"\n        v-model:value=\"username\" />\n      <a-input\n        placeholder=\"Full Name\"\n        class=\"login-input\"\n        size=\"large\"\n        v-model:value=\"name\" />\n      <a-input-password\n        placeholder=\"Password\"\n        class=\"login-input\"\n        size=\"large\"\n        v-model:value=\"password\" />\n      <a-input-password\n        placeholder=\"Confirm Password\"\n        class=\"login-input\"\n        size=\"large\"\n        v-model:value=\"confirmPassword\" />\n      <a-button\n        type=\"primary\"\n        class=\"login-input width-full\"\n        size=\"large\"\n        @click=\"signUp\"\n      >\n        Sign Up\n      </a-button>\n      <p class=\"login-input\">already have an account\n        <a @click=\"this.$router.push('/login')\">Sign In here</a>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport AuthRepository from '@/repository/AuthRepository';\n\nexport default defineComponent({\n    data() {\n      return {\n        username: ref<string>(''),\n        password: ref<string>(''),\n        confirmPassword: ref<string>(''),\n        name: ref<string>(''),\n      };\n    },\n    methods: {\n      async signIn(): Promise<void> {\n        if (this.username.length <= 0 || this.password.length <= 0)\n          return this.$message.error('Username and Password is required!');\n        await AuthRepository.signIn(this.username, this.password)\n          .then(async ({ data }) => {\n            await localStorage.setItem('accessToken', data.accessToken);\n            await localStorage.setItem('logged_in', 'true');\n            this.$message.success('Sign In Successfully');\n            window.location.reload();\n          })\n          .catch((err) => {\n            console.log(err);\n            this.$message.error(err.message);\n          });\n      },\n      async signUp(): Promise<void> {\n        if (this.username.length <= 0)\n          return this.$message.error('Username is required!');\n        if (this.name.length <= 0)\n          return this.$message.error('Full Name is required!');\n        if (this.password.length <= 0)\n          return this.$message.error('Password is required!');\n        if (this.password !== this.confirmPassword)\n          return this.$message.error('Password not indentical with Confirm Password');\n        await AuthRepository.signUp({\n            username: this.username,\n            password: this.password,\n            name: this.name,\n        }).then (() => {\n          this.signIn();\n          this.$message.success('Sign Up Successfully');\n        }).catch((err) => {\n            console.log(err);\n            this.$message.error(err.message);\n        });\n      },\n    },\n});\n</script>\n\n<style scoped>\n.login-page {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: #1A90FF;\n  background-image: linear-gradient(to right, #1A90FF, #001528);\n}\n\n.login-container {\n  width: 700px;\n  background-color: #ffffff;\n  border: 2px solid #1A90FF;\n  border-radius: 8px;\n  padding: 40px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.login-input {\n  margin-top: 20px;\n}\n\n.width-full {\n  width: 100%;\n}\n</style>\n","/Users/dev/e-approval-front-end/src/views/purchase-order/PurchaseOrder.vue",["134"],[],"<template>\n  <div>\n    <a-row :gutter=\"16\">\n      <a-col :xl=\"8\" :lg=\"8\" :md=\"24\" :sm=\"24\" :xs=\"24\">\n        <div>\n          <a-button type=\"primary\" class=\"add-button\" size=\"large\" @click=\"createPurchaseOrder\">\n            Create new Purchase Order\n          </a-button>\n            <a-input\n              placeholder=\"Search\"\n              size=\"large\"\n              class=\"search-input\"\n              v-model:value=\"search\"\n            />\n          <div class=\"list-container\">\n            <div v-for=\"item in filtrate(purchaseOrders)\" :key=\"item.PurchaseOrderNumber\">\n              <a-card\n                class=\"card clickable hoverable\"\n                @click=\"select(item)\"\n                :style=\"item.PurchaseOrderID == selectedPO.PurchaseOrderID ? `border-left: 10px solid #3490FF`: ''\">\n                {{ item.PurchaseOrderNumber }}\n              </a-card>\n            </div>\n            <div\n              v-if=\"purchaseOrders.length <= 0\"\n              style=\"padding-top: 30px\">\n              No Purchase Order\n            </div>\n          </div>\n        </div>\n      </a-col>\n      <a-col\n        :xl=\"16\"\n        :lg=\"16\"\n        :md=\"24\"\n        :sm=\"24\"\n        :xs=\"24\"\n        v-if=\"selectedPO.PurchaseOrderID\"\n        style=\"line-height: 30px\"\n      >\n        <h1 style=\"font-weight: bold; font-size: 30px;\">\n          {{ selectedPO.PurchaseOrderNumber }}\n        </h1>\n        <a-divider />\n        <div align=\"left\">\n          <div align=\"right\">\n            <a-popover\n              trigger=\"hover\"\n              placement=\"bottom\"\n            >\n              <template #content>\n                <p class=\"action-option\" @click=\"onEdit(selectedPO)\">Edit</p>\n                <p class=\"action-option\" v-if=\"selectedPO.IsApproved == 0\" @click=\"approve(selectedPO.PurchaseOrderID)\">Approve</p>\n                <p class=\"action-option\" v-if=\"selectedPO.IsApproved == 0\">Reject</p>\n              </template>\n              <a-button>Action</a-button>\n            </a-popover>\n          </div>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Approved</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              :\n              <a-tag color=\"orange\" v-if=\"selectedPO.IsApproved == 0\">\n                Pending Approval\n              </a-tag>\n              <a-tag color=\"green\" v-if=\"selectedPO.IsApproved == 1\">\n                Approved\n                {{ selectedPO.ApprovedBy ? `by ${selectedPO.ApprovedBy}` : '' }}\n              </a-tag>\n              <a-tag color=\"red\" v-if=\"selectedPO.IsApproved == 2\">\n                Rejected\n              </a-tag>\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Created Date</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ getDate(selectedPO.CreatedDate) || '-' }}\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n             <b>Delivery Date</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ getDate(selectedPO.DeliveryDate) || '-' }}\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Delivery Address</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ selectedPO.DeliveryAddress || '-' }}\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Attention To</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ selectedPO.AttentionTo || '-' }}\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Telephone</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ selectedPO.Telephone || '-' }}\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Delivery Instructions</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ selectedPO.DeliveryInstructions || '-' }}\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Currency</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ selectedPO.CurrencyCode }}\n            </a-col>\n          </a-row>\n          <a-divider />\n          <a-row style=\"margin-top: 30px\">\n            <h2>Line Items</h2>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :span=\"24\">\n              <a-table :columns=\"columns\" :data-source=\"selectedPO.lineItems\" :pagination=\"false\">\n                <template #footer>\n                  <div align=\"right\">\n                    <h3>\n                      <a-row :gutter=\"16\">\n                        <a-col :span=\"20\">\n                          Subtotal\n                        </a-col>\n                        <a-col :span=\"4\">\n                          {{ selectedPO.SubTotal || 0 }}\n                        </a-col>\n                      </a-row>\n                    </h3>\n                    <h3>\n                      <a-row :gutter=\"16\">\n                        <a-col :span=\"20\">\n                          Total\n                        </a-col>\n                        <a-col :span=\"4\">\n                          {{ selectedPO.Total || 0 }}\n                        </a-col>\n                      </a-row>\n                    </h3>\n                  </div>\n                </template>\n              </a-table>\n            </a-col>\n          </a-row>\n          <a-divider />\n          <a-row style=\"margin-top: 30px\">\n            <h2>Contact Detail</h2>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Name</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              : {{ getContactName(getContacts(selectedPO.ContactID)) }}\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Phone Number</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              <a-row :gutter=\"16\">\n                <a-col :span=\"1\">\n                  :\n                </a-col>\n                <a-col :span=\"23\">\n                  <div v-for=\"item in getContacts(selectedPO.ContactID).Phones\" :key=\"item\" class=\"sub-item-box\">\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Phone Type</b></a-col>\n                      <a-col :span=\"16\">: {{ item.PhoneType }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Phone Number</b></a-col>\n                      <a-col :span=\"16\">: {{ item.PhoneCountryCode }}{{ item.PhoneNumber }}</a-col>\n                    </a-row>\n                  </div>\n                </a-col>\n              </a-row>\n            </a-col>\n          </a-row>\n          <a-row :gutter=\"16\" style=\"margin-top: 20px\">\n            <a-col :xl=\"6\" :lg=\"8\" :md=\"8\" :sm=\"24\" :xs=\"24\">\n              <b>Addresses</b>\n            </a-col>\n            <a-col :xl=\"18\" :lg=\"16\" :md=\"16\" :sm=\"24\" :xs=\"24\">\n              <a-row :gutter=\"16\">\n                <a-col :span=\"1\">\n                  :\n                </a-col>\n                <a-col :span=\"23\">\n                  <div v-for=\"item in (getContacts(selectedPO.ContactID).Addresses)\" :key=\"item\" class=\"sub-item-box\">\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Address Type</b></a-col>\n                      <a-col :span=\"16\">: {{ item.AddressType }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>City</b></a-col>\n                      <a-col :span=\"16\">: {{ item.City }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Region</b></a-col>\n                      <a-col :span=\"16\">: {{ item.Region }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Postal Code</b></a-col>\n                      <a-col :span=\"16\">: {{ item.PostalCode }}</a-col>\n                    </a-row>\n                    <a-row :gutter=\"16\">\n                      <a-col :span=\"8\"><b>Country</b></a-col>\n                      <a-col :span=\"16\">: {{ item.Country }}</a-col>\n                    </a-row>\n                  </div>\n                </a-col>\n              </a-row>\n            </a-col>\n          </a-row>\n        </div>\n      </a-col>\n    </a-row>\n    <PurchaseOrderForm\n      :showForm=\"showForm\"\n      :po=\"selectedPO\"\n      @close=\"showForm = false\"\n      @success=\"findPurchaseOrder\"\n      :contacts=\"contacts\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport dayjs from 'dayjs';\nimport PurchaseOrderForm from './PurchaseOrderForm.vue';\nimport PurchaseOrderRepository from '@/repository/PurchaseOrderRepository';\nimport XeroRepository from '@/repository/XeroRepository';\n// import {\n//   EllipsisOutlined,\n// } from \"@ant-design/icons-vue\";\n\nconst columns = [\n  {\n    title: 'Description',\n    dataIndex: 'Description',\n    key: 'Description',\n  },\n  {\n    title: 'Quantity',\n    dataIndex: 'Quantity',\n    key: 'Quantity',\n    align: 'center',\n  },\n  {\n    title: 'Unit Amount',\n    dataIndex: 'UnitAmount',\n    key: 'UnitAmount',\n    align: 'center',\n  },\n  {\n    title: 'Discount Rate',\n    dataIndex: 'DiscountRate',\n    key: 'DiscountRate',\n    align: 'center',\n  },\n  {\n    title: 'Tax Amount',\n    dataIndex: 'TaxAmount',\n    key: 'TaxAmount',\n    align: 'center',\n  },\n  {\n    title: 'Total',\n    dataIndex: 'LineAmount',\n    key: 'LineAmount',\n    align: 'center',\n  },\n];\n\nexport default defineComponent({\n    name: 'purchase-order',\n    components: {\n      PurchaseOrderForm,\n      // EllipsisOutlined,\n    },\n    data() {\n      return {\n        columns,\n        purchaseOrders: ref([]),\n        selectedPO: ref({}),\n        showForm: ref(false),\n        contacts: ref([]),\n        search: ref(''),\n      };\n    },\n    methods: {\n      getContacts(contactID: string) {\n        if (!contactID) return {};\n        return this.contacts.find(e => e.ContactID == contactID);\n      },\n      filtrate(POs) {\n        if (this.search.length <= 0) return POs;\n        return POs\n          .filter((e) => (e.PurchaseOrderNumber || '').toLowerCase().includes(this.search.toLowerCase()))\n      },\n      async findPurchaseOrder() {\n        const { data } = await PurchaseOrderRepository.findAllPurchaseOrder();\n        this.purchaseOrders = data;\n        if (data.length > 0) {\n          this.selectedPO = data[0];\n        }\n      },\n      async findAllContact() {\n        const { data } = await XeroRepository.getAllContact();\n        this.contacts = data.Contacts;\n      },\n      createPurchaseOrder() {\n        this.selectedPO = {\n          ContactID: undefined,\n          PurchaseOrderNumber: \"\",\n          lineItems: [\n            {\n              description: \"item\",\n              quantity: 1,\n              unitAmount: 0,\n              discountRate: 0,\n              tax: 0,\n            }\n          ],\n          CreatedDate: dayjs(new Date()),\n          DeliveryDate: dayjs(new Date()),\n          DeliveryInstructions: \"\",\n          DeliveryAddress: \"\",\n          Currency: undefined,\n          AttentionTo: \"\",\n          Telephone: \"\",\n        };\n        this.showForm = true;\n      },\n      onEdit(record) {\n        this.selectedPO = record;\n        this.selectedPO.CreatedDate = dayjs(record.CreatedDate || new Date());\n        this.selectedPO.DeliveryDate = dayjs(record.DeliveryDate || new Date());\n        this.showForm = true;\n      },\n      getDate(datetime) {\n        if (!datetime) return null;\n        return dayjs(datetime).format(\"DD MMM YYYY\");\n      },\n      getContactName(contact) {\n        if (!contact) return '-';\n        return contact.Name;\n      },\n      getContactPhones(contact) {\n        if (!contact) return '-';\n        return contact.Phones;\n      },\n      getAddresses(contact) {\n        if (!contact) return '-';\n        return contact.Addresses;\n      },\n      select(item) {\n        this.selectedPO = item;\n      },\n      async approve(id: number) {\n        await PurchaseOrderRepository.approvePurchaseOrder(id)\n          .then(() => {\n            this.$message.success(\"Approve Purchase Order\");\n            this.findPurchaseOrder();\n          })\n          .catch((err) => {\n            window.console.log(err);\n            this.$message.error('Oopss, failed to approve Purchase Order');\n          });\n      },\n    },\n    async mounted() {\n      await this.findAllContact();\n      await this.findPurchaseOrder();\n    },\n})\n</script>\n\n<style scoped>\n.add-button {\n  width: 100%;\n  margin: 20px 0px;\n}\n\n.list-container {\n  margin: 5px;\n  padding: 5px;\n  height: 72vh;\n  background-color: #1a90ff23;\n  overflow: auto;\n}\n\n.card {\n  background-color: rgb(248, 248, 248);\n  margin: 5px 0px;\n}\n\n.clickable {\n  cursor: pointer;\n}\n\n.hoverable:hover {\n  background-color: #348fff50;\n  color: #fff;\n  font-weight: bold;\n}\n\n.sub-item-box {\n  border: 1px solid #dad9d9;\n  border-radius: 5px 0px;\n  box-shadow: 0px 3px 6px #00000029;\n  margin: 5px;\n  padding: 5px;\n}\n\n.search-input {\n  width: 95%;\n  margin: auto;\n  background-color: #f9f9f9;\n}\n\n.action-option {\n  padding: 5px 15px;\n}\n.action-option:hover {\n  background-color: #c6e0ff50;\n  cursor: pointer;\n}\n</style>\n","/Users/dev/e-approval-front-end/src/views/sign-in/SignIn.vue",["135"],[],"<template>\n  <div class=\"login-page\">\n    <div class=\"login-container\">\n      <h1>e-approver</h1>\n      <p> Let's Sign In to your accout </p>\n      <a-divider />\n      <a-input\n        placeholder=\"Username\"\n        class=\"login-input\"\n        size=\"large\"\n        v-model:value=\"username\" />\n      <a-input-password\n        placeholder=\"Password\"\n        class=\"login-input\"\n        size=\"large\"\n        v-model:value=\"password\" />\n      <a-button\n        type=\"primary\"\n        class=\"login-input width-full\"\n        size=\"large\"\n        @click=\"signIn\"\n      >\n        Sign In\n      </a-button>\n      <p class=\"login-input\">does not have account?\n        <a @click=\"this.$router.push('/register')\">Sign Up here</a>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport AuthRepository from '@/repository/AuthRepository';\n\nexport default defineComponent({\n    data() {\n      return {\n        username: ref<string>(''),\n        password: ref<string>(''),\n      };\n    },\n    methods: {\n      async signIn(): Promise<void> {\n        localStorage.setItem('accessToken', null);\n        if (this.username.length <= 0 || this.password.length <= 0)\n          return this.$message.error('Username and Password is required!');\n        await AuthRepository.signIn(this.username, this.password)\n          .then(async ({ data }) => {\n            await localStorage.setItem('accessToken', data.accessToken);\n            await localStorage.setItem('logged_in', 'true');\n            this.$message.success('Sign In Successfully');\n            window.location.reload();\n          })\n          .catch((err) => {\n            console.log(err);\n            this.$message.error(err.message);\n          });\n      },\n    },\n});\n</script>\n\n<style scoped>\n.login-page {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: #1A90FF;\n  background-image: linear-gradient(to right, #1A90FF, #001528);\n}\n\n.login-container {\n  width: 700px;\n  background-color: #ffffff;\n  border: 2px solid #1A90FF;\n  border-radius: 8px;\n  padding: 40px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.login-input {\n  margin-top: 20px;\n}\n\n.width-full {\n  width: 100%;\n}\n</style>\n","/Users/dev/e-approval-front-end/src/constant/XeroConfig.ts",[],[],"/Users/dev/e-approval-front-end/src/layout/NavMenu.vue",["136"],[],"<template>\n    <a-layout-sider v-model:collapsed=\"isCollapsed\" :trigger=\"null\" collapsible>\n      <div class=\"logo\" />\n      <a-menu v-model:selectedKeys=\"selectedKeys\" theme=\"dark\" mode=\"inline\">\n        <a-menu-item key=\"1\">\n          <router-link to=\"/contact\">\n            <contacts-outlined />\n            <span>Contact</span>\n          </router-link>\n        </a-menu-item>\n        <a-menu-item key=\"2\">\n          <router-link to=\"/purchase-order\">\n          <file-add-outlined />\n            <span>Purchase Order</span>\n          </router-link>\n        </a-menu-item>\n        <!-- <a-menu-item key=\"3\">\n          <router-link to=\"/bill\">\n            <video-camera-outlined />\n            <span>Billed</span>\n          </router-link>\n        </a-menu-item> -->\n        <a-menu-item key=\"4\">\n          <router-link to=\"/app-integration\">\n            <cluster-outlined />\n            <span>Application</span>\n          </router-link>\n        </a-menu-item>\n      </a-menu>\n    <a-menu\n      v-model:selectedKeys=\"selectedKeys\"\n      mode=\"inline\"\n      theme=\"dark\"\n      class=\"nav-foot\"\n    >\n      <a-menu-item @click=\"handleLogout\" key=\"logout\">\n        <template #icon><logout-outlined /></template>\n        <span>Log Out</span>\n      </a-menu-item>\n    </a-menu>\n    </a-layout-sider>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport {\n  FileAddOutlined,\n  LogoutOutlined,\n  ClusterOutlined,\n  ContactsOutlined,\n} from '@ant-design/icons-vue';\n\nexport default defineComponent({\n  data() {\n    return {\n      selectedKeys: ref<string[]>(['1']),\n      isCollapsed: ref<boolean>(false),\n    };\n  },\n  props: {\n    collapsed: Boolean,\n  },\n  components: {\n    FileAddOutlined,\n    LogoutOutlined,\n    ClusterOutlined,\n    ContactsOutlined,\n  },\n  methods: {\n    handleLogout() {\n      localStorage.setItem('logged_in', null);\n      this.$router.push('/login');\n    },\n  },\n  watch: {\n    collapsed() {\n      this.isCollapsed = this.collapsed;\n    }\n  },\n});\n</script>\n\n\n<style scoped>\n.logo {\n  height: 32px !important;\n  margin: 16px !important;\n  background: rgba(255, 255, 255, 0.3) !important;\n}\n\n.nav-foot {\n  position: absolute;\n  left: -5px;\n  bottom: 0;\n}\n\n</style>","/Users/dev/e-approval-front-end/src/layout/MainHeader.vue",["137"],[],"<template>\n    <a-layout-header style=\"background: #fff; padding-left: 20px\" align=\"left\">\n      <menu-unfold-outlined\n          v-if=\"collapsed\"\n          class=\"trigger\"\n          @click=\"collapsing\"\n      />\n      <menu-fold-outlined v-else class=\"trigger\" @click=\"collapsing\" />\n      <a-select v-model:value=\"tenant\" style=\"padding-left: 20px\">\n        <a-select\n          v-for=\"item in connections\"\n          :key=\"item.id\"\n          :value=\"item.tenantId\"\n        >\n          {{ item.tenantName }} \n        </a-select>\n      </a-select>\n    </a-layout-header>\n    <a-modal\n      centered\n      title=\"Integrate With Xero\"\n      v-model:visible=\"showDialogRouteToApplication\"\n      :footer=\"null\"\n    >\n      <div align=\"center\">\n        <h2>Hey, let's integrate with your organization from Xero!</h2>\n        <a-button type=\"primary\" size=\"large\" @click=\"routeToApplication\">\n          Let's start\n        </a-button>\n      </div>\n    </a-modal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n} from '@ant-design/icons-vue';\nimport XeroRepository from '@/repository/XeroRepository';\n\nexport default defineComponent({\n  data() {\n    return {\n      collapsed: ref<boolean>(false),\n      connections: ref([]),\n      tenant: ref(''),\n      showDialogRouteToApplication: ref(false),\n    };\n  },\n  components: {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n  },\n  emits: [\n    'collapsing',\n  ],\n  methods: {\n    collapsing() {\n      this.collapsed = !this.collapsed;\n      this.$emit(\"collapsing\");\n    },\n    routeToApplication() {\n      this.showDialogRouteToApplication = false;\n      this.$router.push('/app-integration');\n    },\n    async findAllConnection() {\n      await XeroRepository.getAllConnection()\n        .then(({ data }) => {\n          this.connections = data;\n          if (data.length > 0) {\n            this.tenant = data[0].tenantId;\n            localStorage.setItem('tenant', data[0].tenantId);\n          } else {\n            this.showDialogRouteToApplication = true;\n          }\n        })\n        .catch(() => {\n          this.connections = [];\n          this.showDialogRouteToApplication = true;\n        });\n    },\n  },\n  watch: {\n    tenant() {\n      localStorage.setItem('tenant', this.tenant);\n    }\n  },\n  mounted() {\n    if (localStorage.getItem('logged_in') == 'true') {\n      this.findAllConnection();\n    }\n  },\n\n});\n</script>","/Users/dev/e-approval-front-end/src/views/contact/ContactForm.vue",["138"],[],"<template>\n  <dev>\n    <a-drawer\n      v-model:visible=\"visible\"\n      :maskClosable=\"false\"\n      :closable=\"false\"\n      :destroyOnClose=\"true\"\n      :title=\"'New Contact'\"\n      :width=\"1000\">\n      <a-form\n        name=\"basic\"\n        :label-col=\"{ span: 24 }\"\n        :wrapper-col=\"{ span: 24 }\"\n        :model=\"formState\"\n      >\n        <a-form-item label=\"Full Name\" :required=\"true\">\n          <a-input v-model:value=\"formState.name\" placeholder=\"Full Name\" />\n        </a-form-item>\n        <a-row :gutter=\"16\">\n          <a-col :span=\"12\">\n            <a-form-item label=\"First Name\">\n              <a-input v-model:value=\"formState.firstName\" placeholder=\"First Name\" />\n            </a-form-item>\n          </a-col>\n          <a-col :span=\"12\">\n            <a-form-item label=\"Last Name\">\n              <a-input v-model:value=\"formState.lastName\" placeholder=\"Last Name\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row :gutter=\"16\">\n          <a-col :span=\"12\">\n            <a-form-item label=\"Email Address\">\n              <a-input v-model:value=\"formState.emailAddress\" placeholder=\"Email Address\" />\n            </a-form-item>\n          </a-col>\n          <a-col :span=\"12\">\n            <a-form-item label=\"Skype User Name\">\n              <a-input v-model:value=\"formState.skypeUserName\" placeholder=\"Skype User Name\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <a-row :gutter=\"16\">\n          <a-col :span=\"12\">\n            <a-form-item label=\"Bank Account Name\">\n              <a-input v-model:value=\"formState.bankAccountDetails\" placeholder=\"Bank Account Details\" />\n            </a-form-item>\n          </a-col>\n          <a-col :span=\"12\">\n            <a-form-item label=\"Account Number\">\n              <a-input v-model:value=\"formState.accountNumber\" placeholder=\"Account Number\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <!-- <a-form-item label=\"Contact ID\">\n          <a-input v-model:value=\"formState.contactId\" />\n        </a-form-item> -->\n        <!-- <a-form-item label=\"Contact Number\">\n          <a-input v-model:value=\"formState.contactNumber\" :disabled=\"true\" />\n        </a-form-item> -->\n        <!-- <a-form-item label=\"Contact Status\">\n          <a-select v-model:value=\"formState.contactStatus\" placeholder=\"Contact Status\">\n            <a-select-option value=\"ACTIVE\">Active</a-select-option>\n            <a-select-option value=\"ARCHIVED\">Archived</a-select-option>\n            <a-select-option value=\"DELETED\">Deleted</a-select-option>\n          </a-select>\n        </a-form-item> -->\n          <!-- <a-form-item label=\"Company Number\">\n        <a-input v-model:value=\"formState.companyNumber\" placeholder=\"Company Number\" />\n          </a-form-item> -->\n        <!-- <a-form-item label=\"Contact Persons\">\n          <a-select v-model:value=\"formState.contactPersons\" mode=\"multiple\" placeholder=\"Contact Persons\" >\n            <a-select-option v-for=\"person in contactPersons\" :value=\"person.id\" :key=\"person.id\">\n              {{ person.name }}\n            </a-select-option>\n          </a-select>\n        </a-form-item> -->\n        <a-form-item label=\"Tax Number\">\n          <a-input v-model:value=\"formState.taxNumber\" placeholder=\"Tax Number\" />\n        </a-form-item>\n        <!-- <a-row :gutter=\"16\">\n          <a-col :span=\"12\">\n            <a-form-item label=\"Accounts Receivable Tax Type\">\n              <a-select v-model:value=\"formState.accountsReceivableTaxType\" placeholder=\"Account Receivable Tax Type\">\n                <a-select-option value=\"OUTPUT2\">Output 2</a-select-option>\n                <a-select-option value=\"OUTPUT3\">Output 3</a-select-option>\n                <a-select-option value=\"OUTPUT4\">Output 4</a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n          <a-col :span=\"12\">\n            <a-form-item label=\"Accounts Payable Tax Type\">\n              <a-select v-model:value=\"formState.accountsPayableTaxType\" placeholder=\"Accounts Payable Tax Type\">\n                <a-select-option value=\"INPUT2\">Input 2</a-select-option>\n                <a-select-option value=\"INPUT3\">Input 3</a-select-option>\n                <a-select-option value=\"INPUT4\">Input 4</a-select-option>\n              </a-select>\n            </a-form-item>\n          </a-col>\n        </a-row> -->\n          <a-row :gutter=\"16\">\n            <h2>Addresses</h2>\n            <a-col :span=\"24\">\n              <div v-for=\"(address, index) in formState.addresses\" :key=\"index\">\n                <a-row :gutter=\"16\">\n                  <a-col :span=\"24\">\n                    <h3>Address {{ index + 1 }}</h3>\n                  </a-col>\n                  <a-col :span=\"12\">\n                    <a-form-item label=\"Address line 1\">\n                    <a-input v-model:value=\"address.addressLine1\" placeholder=\"Address Line 1\" />\n                    </a-form-item>\n                  </a-col>\n                  <a-col :span=\"12\">\n                    <a-form-item label=\"Address line 2\">\n                      <a-input v-model:value=\"address.addressLine2\" placeholder=\"Address Line 2\" />\n                    </a-form-item>\n                  </a-col>\n                  <a-col :span=\"12\">\n                    <a-form-item label=\"City\">\n                      <a-input v-model:value=\"address.city\" placeholder=\"City\" />\n                    </a-form-item>\n                  </a-col>\n                  <a-col :span=\"12\">\n                    <a-form-item label=\"Region\">\n                      <a-input v-model:value=\"address.region\" placeholder=\"Region\" />\n                    </a-form-item>\n                  </a-col>\n                  <a-col :span=\"12\">\n                    <a-form-item label=\"Postal code\">\n                      <a-input v-model:value=\"address.postalCode\" placeholder=\"Postal Code\" />\n                    </a-form-item>\n                  </a-col>\n                  <a-col :span=\"12\">\n                    <a-form-item label=\"Country\">\n                      <a-input v-model:value=\"address.country\" placeholder=\"Country\" />\n                    </a-form-item>\n                  </a-col>\n                </a-row>\n            </div>\n            </a-col>\n            <a-col :span=\"24\">\n              <a-button\n                type=\"dashed\"\n                @click=\"addAddress\"\n                style=\"margin-bottom: 40px; width: 100%\"\n              >\n                Add Address\n              </a-button>\n            </a-col>\n          </a-row>\n        <a-row :gutter=\"16\">\n          <a-col :span=\"24\">\n          <h2>Phones</h2>\n          <div v-for=\"(phone, index) in formState.phones\" :key=\"index\">\n              <a-row :gutter=\"16\">\n                <a-col :span=\"24\">\n                  <h3>Phone {{ index + 1 }}</h3>\n                </a-col>\n                <a-col :span=\"12\">\n                  <a-form-item label=\"Phone type\">\n                    <a-input v-model:value=\"phone.phoneType\" placeholder=\"Phone Type\" />\n                  </a-form-item>\n                </a-col>\n                <a-col :span=\"12\">\n                  <a-form-item label=\"Phone number\">\n                    <a-input v-model:value=\"phone.phoneNumber\" placeholder=\"Phone Number\" />\n                  </a-form-item>\n                </a-col>\n              </a-row>\n            </div>\n        </a-col>\n        <a-col :span=\"24\">\n            <a-button\n              type=\"dashed\"\n              @click=\"addPhone\"\n              style=\"margin-bottom: 40px; width: 100%\"\n            >\n              Add Phone\n            </a-button>\n        </a-col>\n        </a-row>\n        <a-row :gutter=\"16\">\n          <a-col :span=\"12\">\n            <a-form-item label=\"Supplier\">\n              <a-switch v-model:checked=\"formState.isSupplier\" />\n            </a-form-item>\n          </a-col>\n          <a-col :span=\"12\">\n            <a-form-item label=\"Customer\">\n              <a-switch v-model:checked=\"formState.isCustomer\" />\n            </a-form-item>\n          </a-col>\n        </a-row>\n        <!-- <a-form-item label=\"Default Currency\">\n          <a-input v-model:value=\"formState.defaultCurrency\" placeholder=\"Default Currency\" />\n        </a-form-item>\n        <a-form-item label=\"Xero Network Key\">\n          <a-input v-model:value=\"formState.xeroNetworkKey\" placeholder=\"Xero Network Key\" />\n        </a-form-item>\n        <a-form-item label=\"Sales Default Account Code\">\n          <a-input v-model:value=\"formState.salesDefaultAccountCode\" placeholder=\"Sales Default Account Code\" />\n        </a-form-item>\n        <a-form-item label=\"Purchases Default Account Code\">\n          <a-input v-model:value=\"formState.purchasesDefaultAccountCode\" placeholder=\"Purchases Default Account Code\" />\n        </a-form-item> -->\n        <!-- <a-form-item label=\"Sales Tracking Categories\">\n        <a-select v-model:value=\"formState.salesTrackingCategories\" mode=\"multiple\">\n          <a-select-option v-for=\"(option, index) in salesTrackingCategoriesOptions\" :key=\"index\" :value=\"option.value\">{{ option.label }}</a-select-option>\n        </a-select>\n        </a-form-item>\n        <a-form-item label=\"Purchases Tracking Categories\">\n        <a-select v-model:value=\"formState.purchasesTrackingCategories\" mode=\"multiple\">\n          <a-select-option v-for=\"(option, index) in purchasesTrackingCategoriesOptions\" :key=\"index\" :value=\"option.value\">{{ option.label }}</a-select-option>\n        </a-select>\n        </a-form-item> -->\n        <!-- <a-form-item label=\"Tracking Category Name\">\n          <a-input v-model:value=\"formState.trackingCategoryName\" placeholder=\"Tracking Category Name\" />\n        </a-form-item>\n        <a-form-item label=\"Tracking Option Name\">\n          <a-input v-model:value=\"formState.trackingOptionName\" placeholder=\"Tracking Option Name\" />\n        </a-form-item>\n        <a-form-item label=\"Payment Terms\">\n          <a-input v-model:value=\"formState.paymentTerms\" placeholder=\"Payment Terms\" />\n        </a-form-item> -->\n      </a-form>\n      <template #footer>\n        <div>\n          <a-row :gutter=\"16\">\n            <a-col :span=\"12\">\n              <a-button class=\"full-width\" @click=\"onClose\">Cancel</a-button>\n            </a-col>\n            <a-col :span=\"12\">\n              <a-button type=\"primary\" class=\"full-width\" @click=\"onSubmit\">\n                Submit\n              </a-button>\n            </a-col>\n          </a-row>\n        </div>\n      </template>\n    </a-drawer>\n  </dev>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport XeroRepository from '@/repository/XeroRepository';\n\ninterface FormState {\n  name: string;\n  firstName: string;\n  lastName: string;\n  accountNumber: string;\n  contactStatus: 'ACTIVE' | 'ARCHIVED' | 'DELETED';\n  companyNumber: string;\n  emailAddress: string;\n  skypeUserName: string;\n  bankAccountDetails: string;\n  taxNumber: string;\n  addresses: {\n    addressLine1: string;\n    addressLine2: string;\n    city: string;\n    region: string;\n    postalCode: string;\n    country: string;\n  }[];\n  phones: {\n    phoneType: string;\n    phoneNumber: string;\n  }[];\n  isSupplier: boolean;\n  isCustomer: boolean;\n}\n\n\nexport default defineComponent({\n    props: {\n      showForm: Boolean,\n      po: Object,\n    },\n    data() {\n      return {\n        visible: ref(false),\n        formState: ref<FormState>({\n        name: '',\n        firstName: '',\n        lastName: '',\n        accountNumber: '',\n        contactStatus: 'ACTIVE',\n        companyNumber: '',\n        emailAddress: '',\n        skypeUserName: '',\n        bankAccountDetails: '',\n        taxNumber: '',\n        addresses: [\n            {\n            addressLine1: '',\n            addressLine2: '',\n            city: '',\n            region: '',\n            postalCode: '',\n            country: '',\n            },\n        ],\n        phones: [\n            {\n            phoneType: 'Mobile Phone',\n            phoneNumber: '',\n            },\n        ],\n        isSupplier: false,\n        isCustomer: false,\n        }),\n      };\n    },\n    methods: {\n      onClose() {\n        this.$emit(\"close\")\n      },\n      onSubmit() {\n        this.createContact(this.removeNullValues(this.formState));\n      },\n      async createContact(body) {\n        console.log(this.replaceEmptyStringWithNull(body));\n        await XeroRepository.createContact(this.replaceEmptyStringWithNull(body))\n            .then(() => {\n                this.$message.success(\"Successfully Create Contact\");\n                this.$emit('update');\n            }).catch((err) => {\n                this.$message.error(\"Failed to Create Contact\");\n                window.console.log(err);\n            });\n      },\n      replaceEmptyStringWithNull(obj) {\n        const result: any = {}; // we cast it to 'any' to avoid TypeScript errors when deleting properties\n        for (const [key, value] of Object.entries(obj)) {\n            const updatedValue = value === '' ? null : value;\n            result[key] = updatedValue;\n        }\n        return result;\n      },\n      removeNullValues(obj: any) {\n        const result: any = {}; // we cast it to 'any' to avoid TypeScript errors when deleting properties\n\n        for (const [key, value] of Object.entries(obj)) {\n            if (value !== null) {\n            result[key] = value;\n            }\n        }\n\n        return result;\n      },\n      addAddress() {\n        this.formState.addresses.push({\n          addressLine1: '',\n          addressLine2: '',\n          city: '',\n          region: '',\n          postalCode: '',\n          country: ''\n        })\n      },\n      addPhone() {\n        this.formState.phones.push({\n          phoneType: '',\n          phoneNumber: ''\n        })\n      },\n    },\n    watch: {\n      showForm() {\n        this.visible = this.showForm;\n      },\n    },\n});\n</script>\n\n<style scoped>\n  .full-width {\n    width: 100%;\n  }\n</style>\n","/Users/dev/e-approval-front-end/src/views/purchase-order/PurchaseOrderForm.vue",["139"],[],"<template>\n  <div>\n    <a-drawer\n      v-model:visible=\"visible\"\n      :maskClosable=\"false\"\n      :closable=\"false\"\n      :destroyOnClose=\"true\"\n      :title=\"'New Purchase Order'\"\n      :width=\"1000\">\n      <a-row :gutter=\"16\">\n        <a-col :span=\"24\">\n          <a-form\n            name=\"basic\"\n            :label-col=\"{ span: 24 }\"\n            :wrapper-col=\"{ span: 24 }\"\n            :model=\"formState\"\n          >\n            <a-row :gutter=\"16\">\n              <a-col :xl=\"12\" :lg=\"12\" :md=\"12\" :sm=\"24\" :xs=\"24\">\n                <a-form-item label=\"Purchase Order Number\">\n                  <a-input\n                    v-model:value=\"formState.PurchaseOrderNumber\"\n                    placeholder=\"Purchase Order Number\"\n                  />\n                </a-form-item>\n              </a-col>\n              <a-col :xl=\"12\" :lg=\"12\" :md=\"12\" :sm=\"24\" :xs=\"24\">\n                <a-form-item label=\"Contact\">\n                  <a-select\n                    v-model:value=\"formState.ContactID\"\n                    style=\"width: 100%\"\n                    placeholder=\"Select Contact\"\n                  >\n                    <a-select-option v-for=\"item in contacts\" :key=\"item.ContactID\" :value=\"item.ContactID\">\n                      {{ item.Name }}\n                    </a-select-option>\n                  </a-select>\n                </a-form-item>\n              </a-col>\n            </a-row>\n            <a-row :gutter=\"16\">\n              <a-col :xl=\"12\" :lg=\"12\" :md=\"12\" :sm=\"24\" :xs=\"24\">\n                <a-form-item label=\"Created Date\">\n                  <a-date-picker\n                    v-model:value=\"formState.CreatedDate\"\n                    style=\"width: 100%\"\n                  />\n                </a-form-item>\n              </a-col>\n              <a-col :xl=\"12\" :lg=\"12\" :md=\"12\" :sm=\"24\" :xs=\"24\">\n                <a-form-item label=\"Delivery Date\">\n                  <a-date-picker\n                    v-model:value=\"formState.DeliveryDate\"\n                    style=\"width: 100%\"\n                  />\n                </a-form-item>\n              </a-col>\n              <a-col :xl=\"24\" :lg=\"24\" :md=\"24\" :sm=\"24\" :xs=\"24\">\n                <a-form-item label=\"Delivery Address\">\n                  <a-textarea\n                    v-model:value=\"formState.DeliveryAddress\"\n                    placeholder=\"Delivery Address\"\n                  />\n                </a-form-item>\n              </a-col>\n              <a-col :xl=\"24\" :lg=\"24\" :md=\"24\" :sm=\"24\" :xs=\"24\">\n                <a-form-item label=\"Delivery Instructions\">\n                  <a-textarea\n                    v-model:value=\"formState.DeliveryInstructions\"\n                    placeholder=\"Delivery Instructions\"\n                  />\n                </a-form-item>\n              </a-col>\n              <a-col :xl=\"12\" :lg=\"12\" :md=\"12\" :xm=\"24\" :xs=\"24\">\n                <a-form-item label=\"Attention To\">\n                  <a-input\n                    v-model:value=\"formState.AttentionTo\"\n                    placeholder=\"Attention To\"\n                  />\n                </a-form-item>\n              </a-col>\n              <a-col :xl=\"12\" :lg=\"12\" :md=\"12\" :xm=\"24\" :xs=\"24\">\n                <a-form-item label=\"Telephone\">\n                  <a-input\n                    v-model:value=\"formState.Telephone\"\n                    placeholder=\"Telephone\"\n                  />\n                </a-form-item>\n              </a-col>\n            </a-row>\n            <a-divider />\n            <h3>Line Items</h3>\n            <a-row :gutter=\"16\">\n              <a-col :xl=\"8\" :lg=\"8\" :md=\"12\" :sm=\"24\" :xs=\"24\">\n                <a-form-item label=\"Currency\">\n                  <a-select\n                    placeholder=\"Select Currency\"\n                    v-model:value=\"formState.Currency\"\n                    style=\"width: 100%\"\n                  >\n                    <a-select-option\n                      v-for=\"item in currencies\"\n                      :key=\"item.Code\"\n                      :value=\"item.Code\"\n                    >\n                      {{ item.Description }}\n                    </a-select-option>\n                    <template #dropdownRender=\"{ menuNode: menu }\">\n                      <v-nodes :vnodes=\"menu\" />\n                      <a-divider style=\"margin: 4px 0\" />\n                      <div\n                        style=\"padding: 8px; cursor: pointer\"\n                        @mousedown=\"e => e.preventDefault()\"\n                        @click=\"openCurrencyForm\">\n                        <plus-outlined /> Add Currency\n                      </div>\n                    </template>\n                  </a-select>\n                </a-form-item>\n              </a-col>\n            </a-row>\n            <div v-for=\"(item, index) in formState.lineItems\" :key=\"index\">\n              <a-row :gutter=\"16\">\n                <a-col :span=\"7\">\n                  <a-form-item label=\"Description\">\n                    <a-input v-model:value=\"item.description\" placeholder=\"Enter Description\" />\n                  </a-form-item>\n                </a-col>\n                <a-col :span=\"3\">\n                  <a-form-item label=\"Quantity\">\n                    <a-input-number v-model:value=\"item.quantity\" placeholder=\"Enter Quantity\" />\n                  </a-form-item>\n                </a-col>\n                <a-col :span=\"3\">\n                  <a-form-item label=\"Price per unit\">\n                    <a-input-number v-model:value=\"item.unitAmount\" placeholder=\"Enter Price per Unit\" />\n                  </a-form-item>\n                </a-col>\n                <a-col :span=\"3\">\n                  <a-form-item label=\"Discount\">\n                    <a-input-number v-model:value=\"item.discountRate\" placeholder=\"Enter Discount <Optional>\" />\n                  </a-form-item>\n                </a-col>\n                <a-col :span=\"3\">\n                  <a-form-item label=\"Tax\">\n                    <a-input-number v-model:value=\"item.tax\" placeholder=\"Enter Discount <Optional>\" />\n                  </a-form-item>\n                </a-col>\n                <a-col :span=\"3\">\n                  <p style=\"padding-top: 4px\" align=\"center\">Total</p>\n                  <p align=\"center\">\n                    {{ (item.quantity * item.unitAmount) - ((item.quantity * item.unitAmount) * item.discountRate / 100) }}\n                  </p>\n                </a-col>\n                <a-col :span=\"2\">\n                  <a style=\"color: red\" @click=\"deleteLineItem(index)\">\n                    <DeleteOutlined class=\"delete-icon\"/>\n                  </a>\n                </a-col>\n              </a-row>\n            </div>\n            <a-col :span=\"24\">\n                <a-button\n                  type=\"dashed\"\n                  @click=\"addItem\"\n                  style=\"margin-bottom: 40px; width: 100%\"\n                >\n                  Add Item\n                </a-button>\n            </a-col>\n          </a-form>\n        </a-col>\n      </a-row>\n      <template #footer>\n        <div>\n          <a-row :gutter=\"16\">\n            <a-col :span=\"12\">\n              <a-button class=\"full-width\" @click=\"onClose\">Cancel</a-button>\n            </a-col>\n            <a-col :span=\"12\">\n              <a-button type=\"primary\" class=\"full-width\" @click=\"submit\">\n                Submit\n              </a-button>\n            </a-col>\n          </a-row>\n        </div>\n      </template>\n    </a-drawer>\n  </div>\n  <a-modal\n    v-model:visible=\"showCurrencyForm\"\n    title=\"Create new currency\"\n    okText=\"Create\"\n    @ok=\"createCurrency\"\n    :destroyOnClose=\"true\"\n  >\n    <h3>Currency Code</h3>\n    <a-input placeholder=\"USD\" v-model:value=\"currencyCode\" />\n    <h3 style=\"margin-top:20px\">Currency Description</h3>\n    <a-input placeholder=\"United State Dollar\" v-model:value=\"currencyDescription\" />\n  </a-modal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport dayjs, { Dayjs } from \"dayjs\";\nimport { DeleteOutlined , PlusOutlined} from \"@ant-design/icons-vue\";\nimport PurchaseOrderRepository from '@/repository/PurchaseOrderRepository';\nimport CurrencyRepository from '@/repository/CurrencyRepository';\n\ninterface LineItem {\n  description: string;\n  quantity: number;\n  unitAmount: number;\n  discountRate: number;\n  tax: number\n}\n\ninterface Contact {\n  ContactID: string;\n}\n\ninterface FormState {\n  ContactID: string;\n  PurchaseOrderNumber: string;\n  lineItems: LineItem[];\n  CreatedDate: Dayjs;\n  DeliveryDate: Dayjs;\n  DeliveryAddress: string,\n  DeliveryInstructions: string,\n  Currency: string,\n  AttentionTo: string,\n  Telephone: string,\n}\n\nexport default defineComponent({\n    props: {\n      showForm: Boolean,\n      po: Object,\n      contacts: Array,\n    },\n    components: {\n      DeleteOutlined,\n      PlusOutlined,\n      VNodes: (_, { attrs }) => {\n        return attrs.vnodes;\n      },\n    },\n    emits: [\"close\", \"success\"],\n    data() {\n      return {\n        currencies: ref([]),\n        visible: ref(false),\n        formState: ref<FormState>({\n          ContactID: undefined,\n          PurchaseOrderNumber: \"\",\n          lineItems: [\n            {\n              description: \"item\",\n              quantity: 1,\n              unitAmount: 0,\n              discountRate: 0,\n              tax: 0,\n            }\n          ],\n          CreatedDate: dayjs(new Date()),\n          DeliveryDate: dayjs(new Date()),\n          DeliveryInstructions: \"\",\n          DeliveryAddress: \"\",\n          Currency: undefined,\n          AttentionTo: \"\",\n          Telephone: \"\",\n        }),\n        currencyCode: ref(''),\n        currencyDescription: ref(''),\n        showCurrencyForm: ref(false),\n      };\n    },\n    methods: {\n      async submit() {\n        const {\n          ContactID,\n          CreatedDate,\n          DeliveryInstructions,\n          DeliveryDate,\n          lineItems,\n          PurchaseOrderNumber,\n          DeliveryAddress,\n          Currency,\n          AttentionTo,\n          Telephone,\n        } = this.formState;\n        const body = {\n          contactID: ContactID,\n          createdDate: CreatedDate.format('YYYY-MM-DD'),\n          deliveryDate: DeliveryDate.format('YYYY-MM-DD'),\n          lineItems: lineItems,\n          purchaseOrderNumber: PurchaseOrderNumber,\n          deliveryInstructions: DeliveryInstructions,\n          deliveryAddress: DeliveryAddress,\n          telephone: Telephone,\n          attentionTo: AttentionTo,\n          currency: Currency,\n        };\n        if (this.po.PurchaseOrderID) {\n          await PurchaseOrderRepository.updatePurchaseOrder(this.po.PurchaseOrderID, body).then(() => {\n            this.$message.success('Successfully updated purchase order');\n            this.$emit('success');\n            this.onClose();\n          }).catch((err) => {\n            this.$message.error('Oopss, failed to update purchase order');\n            window.console.log(err);\n          });\n        } else {\n          await PurchaseOrderRepository.createPurchaseOrder(body).then(() => {\n            this.$message.success('Successfully created new purchase order');\n            this.$emit('success');\n            this.onClose();\n          }).catch((err) => {\n            this.$message.error('Oopss, failed to create purchase order');\n            window.console.log(err);\n          });\n        }\n      },\n      addItem() {\n        this.formState.LineItems.push({\n          description: \"item\",\n          quantity: 1,\n          unitAmount: 0,\n          discountRate: 0,\n          tax: 0,\n        });\n      },\n      openCurrencyForm() {\n        this.showCurrencyForm = true;\n      },\n      deleteLineItem(index: number) {\n        if (index == 0) return this.$message.error('please insert at least one items');\n        this.formState.LineItems.splice(index, 1);\n      },\n      onClose() {\n        this.$emit(\"close\")\n      },\n      async findAllCurrency() {\n        const { data } = await CurrencyRepository.findAllCurrency();\n        this.currencies = data;\n      },\n      async createCurrency() {\n        if (this.currencyCode.length <= 0)\n          return this.$message.error(\"Currency Code is required\");\n        if (this.currencyDescription.length <= 0)\n          return this.$message.error(\"Currency Description is required\");\n        await CurrencyRepository.createCurrency({\n          Code: this.currencyCode,\n          Description: this.currencyDescription,\n        }).then(() => {\n          this.findAllCurrency();\n          this.$message.success('Successfully created currency');\n          this.showCurrencyForm = false;\n        }).catch((err) =>{\n          console.log(err);\n          this.$message.error('Oopss.. failed to create currency');\n        });\n      },\n    },\n    watch: {\n      showForm() {\n        this.visible = this.showForm;\n        if (this.visible) {\n          this.findAllCurrency();\n          this.formState = this.po;\n        }\n      },\n    },\n});\n</script>\n\n<style scoped>\n  .full-width {\n    width: 100%;\n  }\n\n  .delete-icon {\n    margin-top: 40px;\n    font-size: 20px;\n  }\n</style>\n","/Users/dev/e-approval-front-end/src/repository/AuthRepository.ts",[],[],"/Users/dev/e-approval-front-end/src/repository/PurchaseOrderRepository.ts",["140","141","142","143","144"],[],"import { clientId, redirectUris, clientSecret, scopes } from '@/constant/XeroConfig';\nimport axios from 'axios';\nimport Repository from './Repository';\n\nexport default {\n    findAllPurchaseOrder() {\n        return Repository.get(`purchase-order?tenantId=${localStorage.getItem('tenant')}`);\n    },\n    createPurchaseOrder(body) {\n        return Repository.post(`purchase-order?tenantId=${localStorage.getItem('tenant')}`, body);\n    },\n    approvePurchaseOrder(id) {\n        return Repository.put(`Purchase-order/approve/${id}?tenantId=${localStorage.getItem('tenant')}`);\n    },\n    updatePurchaseOrder(id, body) {\n        return Repository.put(`Purchase-order/${id}?tenantId=${localStorage.getItem('tenant')}`, body);\n    },\n};\n","/Users/dev/e-approval-front-end/src/repository/CurrencyRepository.ts",[],[],{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":2,"column":7,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":2,"column":4,"nodeType":null},{"ruleId":"146","severity":1,"message":"147","line":1,"column":20,"nodeType":"148","messageId":"149","endLine":1,"endColumn":32},{"ruleId":"146","severity":1,"message":"150","line":1,"column":48,"nodeType":"148","messageId":"149","endLine":1,"endColumn":54},{"ruleId":null,"fatal":true,"severity":2,"message":"151","line":3,"column":10,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":3,"column":9,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":3,"column":6,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":2,"column":7,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":3,"column":6,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":2,"column":7,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":2,"column":6,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":2,"column":6,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":3,"column":6,"nodeType":null},{"ruleId":null,"fatal":true,"severity":2,"message":"145","line":3,"column":6,"nodeType":null},{"ruleId":"146","severity":1,"message":"152","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":1,"column":20,"nodeType":"148","messageId":"149","endLine":1,"endColumn":32},{"ruleId":"146","severity":1,"message":"153","line":1,"column":34,"nodeType":"148","messageId":"149","endLine":1,"endColumn":46},{"ruleId":"146","severity":1,"message":"150","line":1,"column":48,"nodeType":"148","messageId":"149","endLine":1,"endColumn":54},{"ruleId":"146","severity":1,"message":"154","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":13},"Parsing error: '>' expected.","@typescript-eslint/no-unused-vars","'redirectUris' is defined but never used.","Identifier","unusedVar","'scopes' is defined but never used.","Parsing error: ';' expected.","'clientId' is defined but never used.","'clientSecret' is defined but never used.","'axios' is defined but never used."]